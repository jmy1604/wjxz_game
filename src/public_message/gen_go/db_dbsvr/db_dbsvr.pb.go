// Code generated by protoc-gen-go.
// source: db_dbsvr.proto
// DO NOT EDIT!

package db

import proto "3p/code.google.com.protobuf/proto"
import json "encoding/json"
import math "math"
import "reflect"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type PlayerInfo struct {
	MatchScore         *int32 `protobuf:"varint,1,opt" json:"MatchScore,omitempty"`
	Coin               *int32 `protobuf:"varint,2,opt" json:"Coin,omitempty"`
	Diamond            *int32 `protobuf:"varint,3,opt" json:"Diamond,omitempty"`
	DayMatchRewardNum  *int32 `protobuf:"varint,4,opt" json:"DayMatchRewardNum,omitempty"`
	LayMatchRewardTime *int32 `protobuf:"varint,5,opt" json:"LayMatchRewardTime,omitempty"`
	CurUseCardTeam     *int32 `protobuf:"varint,6,opt" json:"CurUseCardTeam,omitempty"`
	XXX_unrecognized   []byte `json:"-"`
}

func (m *PlayerInfo) Reset()                { *m = PlayerInfo{} }
func (m *PlayerInfo) String() string        { return proto.CompactTextString(m) }
func (*PlayerInfo) ProtoMessage()           {}
func (*PlayerInfo) MessageTypeId() uint16   { return 1 }
func (*PlayerInfo) MessageTypeName() string { return "PlayerInfo" }

func (m *PlayerInfo) GetMatchScore() int32 {
	if m != nil && m.MatchScore != nil {
		return *m.MatchScore
	}
	return 0
}

func (m *PlayerInfo) GetCoin() int32 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

func (m *PlayerInfo) GetDiamond() int32 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func (m *PlayerInfo) GetDayMatchRewardNum() int32 {
	if m != nil && m.DayMatchRewardNum != nil {
		return *m.DayMatchRewardNum
	}
	return 0
}

func (m *PlayerInfo) GetLayMatchRewardTime() int32 {
	if m != nil && m.LayMatchRewardTime != nil {
		return *m.LayMatchRewardTime
	}
	return 0
}

func (m *PlayerInfo) GetCurUseCardTeam() int32 {
	if m != nil && m.CurUseCardTeam != nil {
		return *m.CurUseCardTeam
	}
	return 0
}

type PlayerCard struct {
	ConfigId         *int32 `protobuf:"varint,1,opt" json:"ConfigId,omitempty"`
	CardCount        *int32 `protobuf:"varint,2,opt" json:"CardCount,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PlayerCard) Reset()                { *m = PlayerCard{} }
func (m *PlayerCard) String() string        { return proto.CompactTextString(m) }
func (*PlayerCard) ProtoMessage()           {}
func (*PlayerCard) MessageTypeId() uint16   { return 2 }
func (*PlayerCard) MessageTypeName() string { return "PlayerCard" }

func (m *PlayerCard) GetConfigId() int32 {
	if m != nil && m.ConfigId != nil {
		return *m.ConfigId
	}
	return 0
}

func (m *PlayerCard) GetCardCount() int32 {
	if m != nil && m.CardCount != nil {
		return *m.CardCount
	}
	return 0
}

type PlayerCardList struct {
	List             []*PlayerCard `protobuf:"bytes,1,rep" json:"List,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *PlayerCardList) Reset()                { *m = PlayerCardList{} }
func (m *PlayerCardList) String() string        { return proto.CompactTextString(m) }
func (*PlayerCardList) ProtoMessage()           {}
func (*PlayerCardList) MessageTypeId() uint16   { return 3 }
func (*PlayerCardList) MessageTypeName() string { return "PlayerCardList" }

func (m *PlayerCardList) GetList() []*PlayerCard {
	if m != nil {
		return m.List
	}
	return nil
}

type PlayerCardTeam struct {
	TeamId           *int32  `protobuf:"varint,1,opt" json:"TeamId,omitempty"`
	CardCfgIds       []int32 `protobuf:"varint,2,rep" json:"CardCfgIds,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PlayerCardTeam) Reset()                { *m = PlayerCardTeam{} }
func (m *PlayerCardTeam) String() string        { return proto.CompactTextString(m) }
func (*PlayerCardTeam) ProtoMessage()           {}
func (*PlayerCardTeam) MessageTypeId() uint16   { return 4 }
func (*PlayerCardTeam) MessageTypeName() string { return "PlayerCardTeam" }

func (m *PlayerCardTeam) GetTeamId() int32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *PlayerCardTeam) GetCardCfgIds() []int32 {
	if m != nil {
		return m.CardCfgIds
	}
	return nil
}

type PlayerCardTeamList struct {
	List             []*PlayerCardTeam `protobuf:"bytes,1,rep" json:"List,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *PlayerCardTeamList) Reset()                { *m = PlayerCardTeamList{} }
func (m *PlayerCardTeamList) String() string        { return proto.CompactTextString(m) }
func (*PlayerCardTeamList) ProtoMessage()           {}
func (*PlayerCardTeamList) MessageTypeId() uint16   { return 5 }
func (*PlayerCardTeamList) MessageTypeName() string { return "PlayerCardTeamList" }

func (m *PlayerCardTeamList) GetList() []*PlayerCardTeam {
	if m != nil {
		return m.List
	}
	return nil
}

const ID_PlayerInfo uint16 = 1
const ID_PlayerCard uint16 = 2
const ID_PlayerCardList uint16 = 3
const ID_PlayerCardTeam uint16 = 4
const ID_PlayerCardTeamList uint16 = 5
const ID_ACK uint16 = 0xFFFF

var MessageNames = map[uint16]string{
	1:      "PlayerInfo",
	2:      "PlayerCard",
	3:      "PlayerCardList",
	4:      "PlayerCardTeam",
	5:      "PlayerCardTeamList",
	0xFFFF: "ACK",
}
var MessageTypes = map[uint16]reflect.Type{
	1: reflect.TypeOf(PlayerInfo{}),
	2: reflect.TypeOf(PlayerCard{}),
	3: reflect.TypeOf(PlayerCardList{}),
	4: reflect.TypeOf(PlayerCardTeam{}),
	5: reflect.TypeOf(PlayerCardTeamList{}),
}

func init() {
}
