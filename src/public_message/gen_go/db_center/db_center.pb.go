// Code generated by protoc-gen-go.
// source: db_center.proto
// DO NOT EDIT!

package db

import proto "3p/code.google.com.protobuf/proto"
import json "encoding/json"
import math "math"
import "reflect"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type HeroDesireParam struct {
	TargetValue      *int32 `protobuf:"varint,1,opt" json:"TargetValue,omitempty"`
	Value1           *int32 `protobuf:"varint,2,opt" json:"Value1,omitempty"`
	Value2           *int32 `protobuf:"varint,3,opt" json:"Value2,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *HeroDesireParam) Reset()                { *m = HeroDesireParam{} }
func (m *HeroDesireParam) String() string        { return proto.CompactTextString(m) }
func (*HeroDesireParam) ProtoMessage()           {}
func (*HeroDesireParam) MessageTypeId() uint16   { return 1 }
func (*HeroDesireParam) MessageTypeName() string { return "HeroDesireParam" }

func (m *HeroDesireParam) GetTargetValue() int32 {
	if m != nil && m.TargetValue != nil {
		return *m.TargetValue
	}
	return 0
}

func (m *HeroDesireParam) GetValue1() int32 {
	if m != nil && m.Value1 != nil {
		return *m.Value1
	}
	return 0
}

func (m *HeroDesireParam) GetValue2() int32 {
	if m != nil && m.Value2 != nil {
		return *m.Value2
	}
	return 0
}

type SmallRankRecord struct {
	Rank             *int32  `protobuf:"varint,1,opt" json:"Rank,omitempty"`
	Id               *int32  `protobuf:"varint,2,opt" json:"Id,omitempty"`
	Val              *int32  `protobuf:"varint,3,opt" json:"Val,omitempty"`
	Name             *string `protobuf:"bytes,4,opt" json:"Name,omitempty"`
	Lvl              *int32  `protobuf:"varint,5,opt" json:"Lvl,omitempty"`
	Icon             *int32  `protobuf:"varint,6,opt" json:"Icon,omitempty"`
	CustomIcon       *string `protobuf:"bytes,7,opt" json:"CustomIcon,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SmallRankRecord) Reset()                { *m = SmallRankRecord{} }
func (m *SmallRankRecord) String() string        { return proto.CompactTextString(m) }
func (*SmallRankRecord) ProtoMessage()           {}
func (*SmallRankRecord) MessageTypeId() uint16   { return 2 }
func (*SmallRankRecord) MessageTypeName() string { return "SmallRankRecord" }

func (m *SmallRankRecord) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *SmallRankRecord) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *SmallRankRecord) GetVal() int32 {
	if m != nil && m.Val != nil {
		return *m.Val
	}
	return 0
}

func (m *SmallRankRecord) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *SmallRankRecord) GetLvl() int32 {
	if m != nil && m.Lvl != nil {
		return *m.Lvl
	}
	return 0
}

func (m *SmallRankRecord) GetIcon() int32 {
	if m != nil && m.Icon != nil {
		return *m.Icon
	}
	return 0
}

func (m *SmallRankRecord) GetCustomIcon() string {
	if m != nil && m.CustomIcon != nil {
		return *m.CustomIcon
	}
	return ""
}

type CampFightRecord struct {
	FightIdx         *int32 `protobuf:"varint,1,opt" json:"FightIdx,omitempty"`
	XScore           *int32 `protobuf:"varint,2,opt" json:"XScore,omitempty"`
	TScore           *int32 `protobuf:"varint,3,opt" json:"TScore,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CampFightRecord) Reset()                { *m = CampFightRecord{} }
func (m *CampFightRecord) String() string        { return proto.CompactTextString(m) }
func (*CampFightRecord) ProtoMessage()           {}
func (*CampFightRecord) MessageTypeId() uint16   { return 3 }
func (*CampFightRecord) MessageTypeName() string { return "CampFightRecord" }

func (m *CampFightRecord) GetFightIdx() int32 {
	if m != nil && m.FightIdx != nil {
		return *m.FightIdx
	}
	return 0
}

func (m *CampFightRecord) GetXScore() int32 {
	if m != nil && m.XScore != nil {
		return *m.XScore
	}
	return 0
}

func (m *CampFightRecord) GetTScore() int32 {
	if m != nil && m.TScore != nil {
		return *m.TScore
	}
	return 0
}

type IdNum struct {
	Id               *int32 `protobuf:"varint,1,opt" json:"Id,omitempty"`
	Num              *int32 `protobuf:"varint,2,opt" json:"Num,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *IdNum) Reset()                { *m = IdNum{} }
func (m *IdNum) String() string        { return proto.CompactTextString(m) }
func (*IdNum) ProtoMessage()           {}
func (*IdNum) MessageTypeId() uint16   { return 4 }
func (*IdNum) MessageTypeName() string { return "IdNum" }

func (m *IdNum) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *IdNum) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

type StageScoreRankRankRecords struct {
	Records          []*SmallRankRecord `protobuf:"bytes,1,rep" json:"Records,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *StageScoreRankRankRecords) Reset()                { *m = StageScoreRankRankRecords{} }
func (m *StageScoreRankRankRecords) String() string        { return proto.CompactTextString(m) }
func (*StageScoreRankRankRecords) ProtoMessage()           {}
func (*StageScoreRankRankRecords) MessageTypeId() uint16   { return 5 }
func (*StageScoreRankRankRecords) MessageTypeName() string { return "StageScoreRankRankRecords" }

func (m *StageScoreRankRankRecords) GetRecords() []*SmallRankRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

type ServerRewardRewardInfo struct {
	RewardId         *int32   `protobuf:"varint,1,opt" json:"RewardId,omitempty"`
	Items            []*IdNum `protobuf:"bytes,2,rep" json:"Items,omitempty"`
	Channel          *string  `protobuf:"bytes,3,opt" json:"Channel,omitempty"`
	EndUnix          *int32   `protobuf:"varint,4,opt" json:"EndUnix,omitempty"`
	Content          *string  `protobuf:"bytes,5,opt" json:"Content,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ServerRewardRewardInfo) Reset()                { *m = ServerRewardRewardInfo{} }
func (m *ServerRewardRewardInfo) String() string        { return proto.CompactTextString(m) }
func (*ServerRewardRewardInfo) ProtoMessage()           {}
func (*ServerRewardRewardInfo) MessageTypeId() uint16   { return 6 }
func (*ServerRewardRewardInfo) MessageTypeName() string { return "ServerRewardRewardInfo" }

func (m *ServerRewardRewardInfo) GetRewardId() int32 {
	if m != nil && m.RewardId != nil {
		return *m.RewardId
	}
	return 0
}

func (m *ServerRewardRewardInfo) GetItems() []*IdNum {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ServerRewardRewardInfo) GetChannel() string {
	if m != nil && m.Channel != nil {
		return *m.Channel
	}
	return ""
}

func (m *ServerRewardRewardInfo) GetEndUnix() int32 {
	if m != nil && m.EndUnix != nil {
		return *m.EndUnix
	}
	return 0
}

func (m *ServerRewardRewardInfo) GetContent() string {
	if m != nil && m.Content != nil {
		return *m.Content
	}
	return ""
}

type ServerRewardRewardInfoList struct {
	List             []*ServerRewardRewardInfo `protobuf:"bytes,1,rep" json:"List,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *ServerRewardRewardInfoList) Reset()                { *m = ServerRewardRewardInfoList{} }
func (m *ServerRewardRewardInfoList) String() string        { return proto.CompactTextString(m) }
func (*ServerRewardRewardInfoList) ProtoMessage()           {}
func (*ServerRewardRewardInfoList) MessageTypeId() uint16   { return 7 }
func (*ServerRewardRewardInfoList) MessageTypeName() string { return "ServerRewardRewardInfoList" }

func (m *ServerRewardRewardInfoList) GetList() []*ServerRewardRewardInfo {
	if m != nil {
		return m.List
	}
	return nil
}

const ID_HeroDesireParam uint16 = 1
const ID_SmallRankRecord uint16 = 2
const ID_CampFightRecord uint16 = 3
const ID_IdNum uint16 = 4
const ID_StageScoreRankRankRecords uint16 = 5
const ID_ServerRewardRewardInfo uint16 = 6
const ID_ServerRewardRewardInfoList uint16 = 7
const ID_ACK uint16 = 0xFFFF

var MessageNames = map[uint16]string{
	1:      "HeroDesireParam",
	2:      "SmallRankRecord",
	3:      "CampFightRecord",
	4:      "IdNum",
	5:      "StageScoreRankRankRecords",
	6:      "ServerRewardRewardInfo",
	7:      "ServerRewardRewardInfoList",
	0xFFFF: "ACK",
}
var MessageTypes = map[uint16]reflect.Type{
	1: reflect.TypeOf(HeroDesireParam{}),
	2: reflect.TypeOf(SmallRankRecord{}),
	3: reflect.TypeOf(CampFightRecord{}),
	4: reflect.TypeOf(IdNum{}),
	5: reflect.TypeOf(StageScoreRankRankRecords{}),
	6: reflect.TypeOf(ServerRewardRewardInfo{}),
	7: reflect.TypeOf(ServerRewardRewardInfoList{}),
}

func init() {
}
