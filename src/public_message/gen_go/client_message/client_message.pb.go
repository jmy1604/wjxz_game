// Code generated by protoc-gen-go. DO NOT EDIT.
// source: client_message.proto

/*
Package msg_client_message is a generated protocol buffer package.

It is generated from these files:
	client_message.proto

It has these top-level messages:
	C2S_TEST_COMMAND
	ItemInfo
	FriendInfo
	PlayerStageInfo
	S2CStagePass
	C2SLoginRequest
	ServerInfo
	S2CLoginResponse
	S2COtherPlaceLogin
	C2SSelectServerRequest
	S2CSelectServerResponse
	C2S_MSG_DATA
	S2C_MSG_DATA
	C2SEnterGameRequest
	S2CEnterGameResponse
	S2CEnterGameCompleteNotify
	C2SRolesRequest
	AttrData
	Role
	S2CRolesResponse
	S2CRolesChangeNotify
	C2SSetTeamRequest
	S2CSetTeamResponse
	TeamData
	S2CTeamsResponse
	BattleMemberItem
	BattleMemberBuff
	BattleReportItem
	BattleRoundReports
	C2SBattleResultRequest
	S2CBattleResultResponse
	C2SFriendSearch
	C2SFriendSearchById
	S2CFriendSearchResult
	C2SGetFriendList
	FriendReq
	S2CRetFriendListResult
	S2CFriendStateNotify
	S2CFriendReqNotify
	C2SAddFriendByPId
	C2SAddFriendByName
	S2CAddFriendResult
	C2SAgreeFriend
	S2CAgreeFriendResult
	C2SRefuseFriend
	S2CRefuseFriendResult
	C2SRemoveFriend
	S2CRemoveFriendResult
	C2SGiveFriendPoints
	FriendPointsResult
	S2CGiveFriendPointsResult
	C2SGetFriendPoints
	FriendPoints
	S2CGetFriendPointsResult
	C2SFriendChat
	S2CFriendChatResult
	C2SFriendGetUnreadMessageNum
	FriendUnreadMessageNumData
	S2CFriendGetUnreadMessageNumResult
	C2SFriendPullUnreadMessage
	FriendChatData
	S2CFriendPullUnreadMessageResult
	C2SFriendConfirmUnreadMessage
	S2CFriendConfirmUnreadMessageResult
	C2SGetOnlineFriends
	S2CRetOnlineFriends
	C2SShopItems
	S2CShopItem
	S2CShopItemsResult
	C2SBuyShopItem
	S2CBuyShopItemResult
	S2CShopNeedRefreshNotify
	DialyTaskData
	C2SGetDialyTaskInfo
	S2CSyncDialyTask
	S2CNotifyTaskValueChg
	AchieveData
	C2SGetAchieve
	S2CSyncAchieveData
	S2CNotifyAchieveValueChg
	C2SGetTaskReward
	S2CRetTaskReward
	C2SGetAchieveReward
	S2CRetAchieveReward
	C2SWorldChatSend
	S2CWorldChatSendResult
	C2SWorldChatMsgPull
	WorldChatItem
	S2CWorldChatMsgPullResult
	S2CWorldChatForbid
	S2CSyncGuideData
	C2SSaveGuideData
	S2CRetSaveGuideData
*/
package msg_client_message

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type E_ERR int32

const (
	E_ERR_NONE                           E_ERR = 0
	E_ERR_INTERNAL                       E_ERR = -1
	E_ERR_PLAYER_ACC_OR_PASSWORD_ERROR   E_ERR = -2
	E_ERR_PLAYER_NOT_EXIST               E_ERR = -3
	E_ERR_PLAYER_ALREADY_LOGINED         E_ERR = -4
	E_ERR_PLAYER_OTHER_PLACE_LOGIN       E_ERR = -5
	E_ERR_PLAYER_TOKEN_ERROR             E_ERR = -6
	E_ERR_PLAYER_SELECT_SERVER_NOT_FOUND E_ERR = -7
	E_ERR_PLAYER_ALREADY_SELECTED_SERVER E_ERR = -8
	// 战斗
	E_ERR_PLAYER_SET_ATTACK_MEMBERS_FAILED  E_ERR = -1000
	E_ERR_PLAYER_SET_DEFENSE_MEMBERS_FAILED E_ERR = -1001
	// 玩家
	E_ERR_PLAYER_ALREADY_ZAN_TODAY           E_ERR = -100000
	E_ERR_PLAYER_RENAME_NEW_CANT_SAME_TO_OLD E_ERR = -100001
	E_ERR_PLAYER_RENAME_NEW_CANT_EMPTY       E_ERR = -100002
	E_ERR_PLAYER_RENAME_REMOVE_OLD_FAILED    E_ERR = -100003
	E_ERR_PLAYER_RENAME_TOO_LONG_NAME        E_ERR = -100004
	E_ERR_PLAYER_RENAME_NOT_ENOUGH_DIAMOND   E_ERR = -100005
	E_ERR_CHARGE_ORDER_DATA_EMPTY            E_ERR = -200000
	E_ERR_CHARGE_ORDER_DATA_INVALID          E_ERR = -200001
	E_ERR_CHARGE_ORDER_SIGNATURE_INVALID     E_ERR = -200002
	E_ERR_CHARGE_ORDER_SN_EMPTY              E_ERR = -200003
	E_ERR_CHARGE_ORDER_SN_ALREDY_USED        E_ERR = -200004
	E_ERR_CHARGE_ORDER_VERIFY_FAILED         E_ERR = -200005
	E_ERR_FRIEND_MESSAGE_NUM_MAX             E_ERR = -300000
	E_ERR_FRIEND_NO_UNREAD_MESSAGE           E_ERR = -300001
	E_ERR_FRIEND_THE_PLAYER_ALREADY_FRIEND   E_ERR = -300002
	E_ERR_FRIEND_THE_PLAYER_REQUESTED        E_ERR = -300003
	E_ERR_FRIEND_REMOVE_FRIEND_FAILED        E_ERR = -300004
	E_ERR_FRIEND_GIVE_POINTS_FREQUENTLY      E_ERR = -300005
	E_ERR_FRIEND_TOO_MANY_FRIEND_GIVE_POINTS E_ERR = -300006
	E_ERR_FRIEND_GIVE_POINTS_MAX_NUM_LIMIT   E_ERR = -300007
	E_ERR_FRIEND_NO_THE_FRIEND               E_ERR = -300008
	E_ERR_FRIEND_MESSAGE_TOO_LONG            E_ERR = -300009
	E_ERR_FRIEND_CHAT_FAILED                 E_ERR = -300010
	E_ERR_SHOP_NOT_FOUND                     E_ERR = -400000
	E_ERR_SHOP_PURCHASED_FAILED              E_ERR = -400001
	E_ERR_SHOP_ITEM_NOT_FOUND                E_ERR = -400002
	E_ERR_SHOP_LIMITED_TYPE_INVALID          E_ERR = -400003
	E_ERR_SHOP_ITEM_NOT_ENOUGH               E_ERR = -400004
	// 任务错误码
	E_ERR_TASK_NOT_FOUND         E_ERR = -101600
	E_ERR_TASK_NOT_COMPLETE      E_ERR = -101601
	E_ERR_TASK_NOT_REWARD        E_ERR = -101602
	E_ERR_TASK_ALREADY_REWARDED  E_ERR = -101603
	E_ERR_TASK_LEVEL_NOT_ENOUGH  E_ERR = -101604
	E_ERR_TASK_PREV_NOT_COMPLETE E_ERR = -101605
	// 世界聊天
	E_ERR_WORLDCHAT_SEND_MSG_COOLING_DOWN   E_ERR = -102300
	E_ERR_WORLDCHAT_SEND_MSG_BYTES_TOO_LONG E_ERR = -102301
	E_ERR_WORLDCHAT_CANT_SEND_WITH_NO_FREE  E_ERR = -102302
	E_ERR_WORLDCHAT_PULL_COOLING_DOWN       E_ERR = -102303
	E_ERR_WORLDCHAT_SEND_MSG_BE_FORBIDEN    E_ERR = -102304
)

var E_ERR_name = map[int32]string{
	0:       "NONE",
	-1:      "INTERNAL",
	-2:      "PLAYER_ACC_OR_PASSWORD_ERROR",
	-3:      "PLAYER_NOT_EXIST",
	-4:      "PLAYER_ALREADY_LOGINED",
	-5:      "PLAYER_OTHER_PLACE_LOGIN",
	-6:      "PLAYER_TOKEN_ERROR",
	-7:      "PLAYER_SELECT_SERVER_NOT_FOUND",
	-8:      "PLAYER_ALREADY_SELECTED_SERVER",
	-1000:   "PLAYER_SET_ATTACK_MEMBERS_FAILED",
	-1001:   "PLAYER_SET_DEFENSE_MEMBERS_FAILED",
	-100000: "PLAYER_ALREADY_ZAN_TODAY",
	-100001: "PLAYER_RENAME_NEW_CANT_SAME_TO_OLD",
	-100002: "PLAYER_RENAME_NEW_CANT_EMPTY",
	-100003: "PLAYER_RENAME_REMOVE_OLD_FAILED",
	-100004: "PLAYER_RENAME_TOO_LONG_NAME",
	-100005: "PLAYER_RENAME_NOT_ENOUGH_DIAMOND",
	-200000: "CHARGE_ORDER_DATA_EMPTY",
	-200001: "CHARGE_ORDER_DATA_INVALID",
	-200002: "CHARGE_ORDER_SIGNATURE_INVALID",
	-200003: "CHARGE_ORDER_SN_EMPTY",
	-200004: "CHARGE_ORDER_SN_ALREDY_USED",
	-200005: "CHARGE_ORDER_VERIFY_FAILED",
	-300000: "FRIEND_MESSAGE_NUM_MAX",
	-300001: "FRIEND_NO_UNREAD_MESSAGE",
	-300002: "FRIEND_THE_PLAYER_ALREADY_FRIEND",
	-300003: "FRIEND_THE_PLAYER_REQUESTED",
	-300004: "FRIEND_REMOVE_FRIEND_FAILED",
	-300005: "FRIEND_GIVE_POINTS_FREQUENTLY",
	-300006: "FRIEND_TOO_MANY_FRIEND_GIVE_POINTS",
	-300007: "FRIEND_GIVE_POINTS_MAX_NUM_LIMIT",
	-300008: "FRIEND_NO_THE_FRIEND",
	-300009: "FRIEND_MESSAGE_TOO_LONG",
	-300010: "FRIEND_CHAT_FAILED",
	-400000: "SHOP_NOT_FOUND",
	-400001: "SHOP_PURCHASED_FAILED",
	-400002: "SHOP_ITEM_NOT_FOUND",
	-400003: "SHOP_LIMITED_TYPE_INVALID",
	-400004: "SHOP_ITEM_NOT_ENOUGH",
	-101600: "TASK_NOT_FOUND",
	-101601: "TASK_NOT_COMPLETE",
	-101602: "TASK_NOT_REWARD",
	-101603: "TASK_ALREADY_REWARDED",
	-101604: "TASK_LEVEL_NOT_ENOUGH",
	-101605: "TASK_PREV_NOT_COMPLETE",
	-102300: "WORLDCHAT_SEND_MSG_COOLING_DOWN",
	-102301: "WORLDCHAT_SEND_MSG_BYTES_TOO_LONG",
	-102302: "WORLDCHAT_CANT_SEND_WITH_NO_FREE",
	-102303: "WORLDCHAT_PULL_COOLING_DOWN",
	-102304: "WORLDCHAT_SEND_MSG_BE_FORBIDEN",
}
var E_ERR_value = map[string]int32{
	"NONE":                               0,
	"INTERNAL":                           -1,
	"PLAYER_ACC_OR_PASSWORD_ERROR":       -2,
	"PLAYER_NOT_EXIST":                   -3,
	"PLAYER_ALREADY_LOGINED":             -4,
	"PLAYER_OTHER_PLACE_LOGIN":           -5,
	"PLAYER_TOKEN_ERROR":                 -6,
	"PLAYER_SELECT_SERVER_NOT_FOUND":     -7,
	"PLAYER_ALREADY_SELECTED_SERVER":     -8,
	"PLAYER_SET_ATTACK_MEMBERS_FAILED":   -1000,
	"PLAYER_SET_DEFENSE_MEMBERS_FAILED":  -1001,
	"PLAYER_ALREADY_ZAN_TODAY":           -100000,
	"PLAYER_RENAME_NEW_CANT_SAME_TO_OLD": -100001,
	"PLAYER_RENAME_NEW_CANT_EMPTY":       -100002,
	"PLAYER_RENAME_REMOVE_OLD_FAILED":    -100003,
	"PLAYER_RENAME_TOO_LONG_NAME":        -100004,
	"PLAYER_RENAME_NOT_ENOUGH_DIAMOND":   -100005,
	"CHARGE_ORDER_DATA_EMPTY":            -200000,
	"CHARGE_ORDER_DATA_INVALID":          -200001,
	"CHARGE_ORDER_SIGNATURE_INVALID":     -200002,
	"CHARGE_ORDER_SN_EMPTY":              -200003,
	"CHARGE_ORDER_SN_ALREDY_USED":        -200004,
	"CHARGE_ORDER_VERIFY_FAILED":         -200005,
	"FRIEND_MESSAGE_NUM_MAX":             -300000,
	"FRIEND_NO_UNREAD_MESSAGE":           -300001,
	"FRIEND_THE_PLAYER_ALREADY_FRIEND":   -300002,
	"FRIEND_THE_PLAYER_REQUESTED":        -300003,
	"FRIEND_REMOVE_FRIEND_FAILED":        -300004,
	"FRIEND_GIVE_POINTS_FREQUENTLY":      -300005,
	"FRIEND_TOO_MANY_FRIEND_GIVE_POINTS": -300006,
	"FRIEND_GIVE_POINTS_MAX_NUM_LIMIT":   -300007,
	"FRIEND_NO_THE_FRIEND":               -300008,
	"FRIEND_MESSAGE_TOO_LONG":            -300009,
	"FRIEND_CHAT_FAILED":                 -300010,
	"SHOP_NOT_FOUND":                     -400000,
	"SHOP_PURCHASED_FAILED":              -400001,
	"SHOP_ITEM_NOT_FOUND":                -400002,
	"SHOP_LIMITED_TYPE_INVALID":          -400003,
	"SHOP_ITEM_NOT_ENOUGH":               -400004,
	"TASK_NOT_FOUND":                     -101600,
	"TASK_NOT_COMPLETE":                  -101601,
	"TASK_NOT_REWARD":                    -101602,
	"TASK_ALREADY_REWARDED":              -101603,
	"TASK_LEVEL_NOT_ENOUGH":              -101604,
	"TASK_PREV_NOT_COMPLETE":             -101605,
	"WORLDCHAT_SEND_MSG_COOLING_DOWN":    -102300,
	"WORLDCHAT_SEND_MSG_BYTES_TOO_LONG":  -102301,
	"WORLDCHAT_CANT_SEND_WITH_NO_FREE":   -102302,
	"WORLDCHAT_PULL_COOLING_DOWN":        -102303,
	"WORLDCHAT_SEND_MSG_BE_FORBIDEN":     -102304,
}

func (x E_ERR) String() string {
	return proto.EnumName(E_ERR_name, int32(x))
}
func (E_ERR) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// 测试用消息
type C2S_TEST_COMMAND struct {
	Cmd  string   `protobuf:"bytes,1,opt,name=cmd" json:"cmd,omitempty"`
	Args []string `protobuf:"bytes,2,rep,name=args" json:"args,omitempty"`
}

func (m *C2S_TEST_COMMAND) Reset()                    { *m = C2S_TEST_COMMAND{} }
func (m *C2S_TEST_COMMAND) String() string            { return proto.CompactTextString(m) }
func (*C2S_TEST_COMMAND) ProtoMessage()               {}
func (*C2S_TEST_COMMAND) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *C2S_TEST_COMMAND) GetCmd() string {
	if m != nil {
		return m.Cmd
	}
	return ""
}

func (m *C2S_TEST_COMMAND) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

// 物品
type ItemInfo struct {
	ItemCfgId     int32 `protobuf:"varint,1,opt,name=ItemCfgId" json:"ItemCfgId,omitempty"`
	ItemNum       int32 `protobuf:"varint,2,opt,name=ItemNum" json:"ItemNum,omitempty"`
	RemainSeconds int32 `protobuf:"varint,3,opt,name=RemainSeconds" json:"RemainSeconds,omitempty"`
}

func (m *ItemInfo) Reset()                    { *m = ItemInfo{} }
func (m *ItemInfo) String() string            { return proto.CompactTextString(m) }
func (*ItemInfo) ProtoMessage()               {}
func (*ItemInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ItemInfo) GetItemCfgId() int32 {
	if m != nil {
		return m.ItemCfgId
	}
	return 0
}

func (m *ItemInfo) GetItemNum() int32 {
	if m != nil {
		return m.ItemNum
	}
	return 0
}

func (m *ItemInfo) GetRemainSeconds() int32 {
	if m != nil {
		return m.RemainSeconds
	}
	return 0
}

// 好友信息
type FriendInfo struct {
	PlayerId         int32  `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
	Name             string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Head             string `protobuf:"bytes,3,opt,name=Head" json:"Head,omitempty"`
	Level            int32  `protobuf:"varint,4,opt,name=Level" json:"Level,omitempty"`
	VipLevel         int32  `protobuf:"varint,5,opt,name=VipLevel" json:"VipLevel,omitempty"`
	LastLogin        int32  `protobuf:"varint,6,opt,name=LastLogin" json:"LastLogin,omitempty"`
	FriendPoints     int32  `protobuf:"varint,7,opt,name=FriendPoints" json:"FriendPoints,omitempty"`
	LeftGiveSeconds  int32  `protobuf:"varint,8,opt,name=LeftGiveSeconds" json:"LeftGiveSeconds,omitempty"`
	UnreadMessageNum int32  `protobuf:"varint,9,opt,name=UnreadMessageNum" json:"UnreadMessageNum,omitempty"`
	Zan              int32  `protobuf:"varint,10,opt,name=Zan" json:"Zan,omitempty"`
	IsZanToday       bool   `protobuf:"varint,11,opt,name=IsZanToday" json:"IsZanToday,omitempty"`
	IsOnline         bool   `protobuf:"varint,12,opt,name=IsOnline" json:"IsOnline,omitempty"`
	FosteredCatNum   int32  `protobuf:"varint,14,opt,name=FosteredCatNum" json:"FosteredCatNum,omitempty"`
	CanFosterCatNum  int32  `protobuf:"varint,15,opt,name=CanFosterCatNum" json:"CanFosterCatNum,omitempty"`
}

func (m *FriendInfo) Reset()                    { *m = FriendInfo{} }
func (m *FriendInfo) String() string            { return proto.CompactTextString(m) }
func (*FriendInfo) ProtoMessage()               {}
func (*FriendInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *FriendInfo) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *FriendInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FriendInfo) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

func (m *FriendInfo) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *FriendInfo) GetVipLevel() int32 {
	if m != nil {
		return m.VipLevel
	}
	return 0
}

func (m *FriendInfo) GetLastLogin() int32 {
	if m != nil {
		return m.LastLogin
	}
	return 0
}

func (m *FriendInfo) GetFriendPoints() int32 {
	if m != nil {
		return m.FriendPoints
	}
	return 0
}

func (m *FriendInfo) GetLeftGiveSeconds() int32 {
	if m != nil {
		return m.LeftGiveSeconds
	}
	return 0
}

func (m *FriendInfo) GetUnreadMessageNum() int32 {
	if m != nil {
		return m.UnreadMessageNum
	}
	return 0
}

func (m *FriendInfo) GetZan() int32 {
	if m != nil {
		return m.Zan
	}
	return 0
}

func (m *FriendInfo) GetIsZanToday() bool {
	if m != nil {
		return m.IsZanToday
	}
	return false
}

func (m *FriendInfo) GetIsOnline() bool {
	if m != nil {
		return m.IsOnline
	}
	return false
}

func (m *FriendInfo) GetFosteredCatNum() int32 {
	if m != nil {
		return m.FosteredCatNum
	}
	return 0
}

func (m *FriendInfo) GetCanFosterCatNum() int32 {
	if m != nil {
		return m.CanFosterCatNum
	}
	return 0
}

type PlayerStageInfo struct {
	PlayerId   int32  `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
	Score      int32  `protobuf:"varint,2,opt,name=Score" json:"Score,omitempty"`
	Name       string `protobuf:"bytes,3,opt,name=Name" json:"Name,omitempty"`
	Lvl        int32  `protobuf:"varint,4,opt,name=Lvl" json:"Lvl,omitempty"`
	Icon       string `protobuf:"bytes,5,opt,name=Icon" json:"Icon,omitempty"`
	CustomIcon string `protobuf:"bytes,6,opt,name=CustomIcon" json:"CustomIcon,omitempty"`
}

func (m *PlayerStageInfo) Reset()                    { *m = PlayerStageInfo{} }
func (m *PlayerStageInfo) String() string            { return proto.CompactTextString(m) }
func (*PlayerStageInfo) ProtoMessage()               {}
func (*PlayerStageInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PlayerStageInfo) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *PlayerStageInfo) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *PlayerStageInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PlayerStageInfo) GetLvl() int32 {
	if m != nil {
		return m.Lvl
	}
	return 0
}

func (m *PlayerStageInfo) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *PlayerStageInfo) GetCustomIcon() string {
	if m != nil {
		return m.CustomIcon
	}
	return ""
}

type S2CStagePass struct {
	StageId         int32              `protobuf:"varint,1,opt,name=StageId" json:"StageId,omitempty"`
	Stars           int32              `protobuf:"varint,2,opt,name=Stars" json:"Stars,omitempty"`
	Score           int32              `protobuf:"varint,3,opt,name=Score" json:"Score,omitempty"`
	TopScore        int32              `protobuf:"varint,4,opt,name=TopScore" json:"TopScore,omitempty"`
	UseItems        []*ItemInfo        `protobuf:"bytes,5,rep,name=UseItems" json:"UseItems,omitempty"`
	GetCoin         int32              `protobuf:"varint,6,opt,name=GetCoin" json:"GetCoin,omitempty"`
	Getitems        []*ItemInfo        `protobuf:"bytes,7,rep,name=Getitems" json:"Getitems,omitempty"`
	RankItems       []*PlayerStageInfo `protobuf:"bytes,8,rep,name=RankItems" json:"RankItems,omitempty"`
	FriendItems     []*PlayerStageInfo `protobuf:"bytes,9,rep,name=FriendItems" json:"FriendItems,omitempty"`
	Result          int32              `protobuf:"varint,12,opt,name=Result" json:"Result,omitempty"`
	GetitemsFirst   []*ItemInfo        `protobuf:"bytes,13,rep,name=GetitemsFirst" json:"GetitemsFirst,omitempty"`
	Getitems3Star   []*ItemInfo        `protobuf:"bytes,14,rep,name=Getitems3Star" json:"Getitems3Star,omitempty"`
	CatExtraAddCoin int32              `protobuf:"varint,15,opt,name=CatExtraAddCoin" json:"CatExtraAddCoin,omitempty"`
}

func (m *S2CStagePass) Reset()                    { *m = S2CStagePass{} }
func (m *S2CStagePass) String() string            { return proto.CompactTextString(m) }
func (*S2CStagePass) ProtoMessage()               {}
func (*S2CStagePass) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *S2CStagePass) GetStageId() int32 {
	if m != nil {
		return m.StageId
	}
	return 0
}

func (m *S2CStagePass) GetStars() int32 {
	if m != nil {
		return m.Stars
	}
	return 0
}

func (m *S2CStagePass) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *S2CStagePass) GetTopScore() int32 {
	if m != nil {
		return m.TopScore
	}
	return 0
}

func (m *S2CStagePass) GetUseItems() []*ItemInfo {
	if m != nil {
		return m.UseItems
	}
	return nil
}

func (m *S2CStagePass) GetGetCoin() int32 {
	if m != nil {
		return m.GetCoin
	}
	return 0
}

func (m *S2CStagePass) GetGetitems() []*ItemInfo {
	if m != nil {
		return m.Getitems
	}
	return nil
}

func (m *S2CStagePass) GetRankItems() []*PlayerStageInfo {
	if m != nil {
		return m.RankItems
	}
	return nil
}

func (m *S2CStagePass) GetFriendItems() []*PlayerStageInfo {
	if m != nil {
		return m.FriendItems
	}
	return nil
}

func (m *S2CStagePass) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *S2CStagePass) GetGetitemsFirst() []*ItemInfo {
	if m != nil {
		return m.GetitemsFirst
	}
	return nil
}

func (m *S2CStagePass) GetGetitems3Star() []*ItemInfo {
	if m != nil {
		return m.Getitems3Star
	}
	return nil
}

func (m *S2CStagePass) GetCatExtraAddCoin() int32 {
	if m != nil {
		return m.CatExtraAddCoin
	}
	return 0
}

// 登陆
type C2SLoginRequest struct {
	Acc      string `protobuf:"bytes,1,opt,name=Acc" json:"Acc,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=Password" json:"Password,omitempty"`
	Channel  string `protobuf:"bytes,3,opt,name=Channel" json:"Channel,omitempty"`
}

func (m *C2SLoginRequest) Reset()                    { *m = C2SLoginRequest{} }
func (m *C2SLoginRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SLoginRequest) ProtoMessage()               {}
func (*C2SLoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *C2SLoginRequest) GetAcc() string {
	if m != nil {
		return m.Acc
	}
	return ""
}

func (m *C2SLoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *C2SLoginRequest) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

// 服务器信息
type ServerInfo struct {
	Id   int32  `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	IP   string `protobuf:"bytes,3,opt,name=IP" json:"IP,omitempty"`
}

func (m *ServerInfo) Reset()                    { *m = ServerInfo{} }
func (m *ServerInfo) String() string            { return proto.CompactTextString(m) }
func (*ServerInfo) ProtoMessage()               {}
func (*ServerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ServerInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ServerInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ServerInfo) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

// 登陆返回
type S2CLoginResponse struct {
	Acc     string        `protobuf:"bytes,1,opt,name=Acc" json:"Acc,omitempty"`
	Token   string        `protobuf:"bytes,2,opt,name=Token" json:"Token,omitempty"`
	Servers []*ServerInfo `protobuf:"bytes,3,rep,name=Servers" json:"Servers,omitempty"`
}

func (m *S2CLoginResponse) Reset()                    { *m = S2CLoginResponse{} }
func (m *S2CLoginResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CLoginResponse) ProtoMessage()               {}
func (*S2CLoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *S2CLoginResponse) GetAcc() string {
	if m != nil {
		return m.Acc
	}
	return ""
}

func (m *S2CLoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *S2CLoginResponse) GetServers() []*ServerInfo {
	if m != nil {
		return m.Servers
	}
	return nil
}

// / 其它地方登录
type S2COtherPlaceLogin struct {
}

func (m *S2COtherPlaceLogin) Reset()                    { *m = S2COtherPlaceLogin{} }
func (m *S2COtherPlaceLogin) String() string            { return proto.CompactTextString(m) }
func (*S2COtherPlaceLogin) ProtoMessage()               {}
func (*S2COtherPlaceLogin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

// 选择服务器
type C2SSelectServerRequest struct {
	Acc      string `protobuf:"bytes,1,opt,name=Acc" json:"Acc,omitempty"`
	Token    string `protobuf:"bytes,2,opt,name=Token" json:"Token,omitempty"`
	ServerId int32  `protobuf:"varint,3,opt,name=ServerId" json:"ServerId,omitempty"`
}

func (m *C2SSelectServerRequest) Reset()                    { *m = C2SSelectServerRequest{} }
func (m *C2SSelectServerRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SSelectServerRequest) ProtoMessage()               {}
func (*C2SSelectServerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *C2SSelectServerRequest) GetAcc() string {
	if m != nil {
		return m.Acc
	}
	return ""
}

func (m *C2SSelectServerRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *C2SSelectServerRequest) GetServerId() int32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

// 选择服务器返回
type S2CSelectServerResponse struct {
	Acc   string `protobuf:"bytes,1,opt,name=Acc" json:"Acc,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=Token" json:"Token,omitempty"`
	IP    string `protobuf:"bytes,3,opt,name=IP" json:"IP,omitempty"`
}

func (m *S2CSelectServerResponse) Reset()                    { *m = S2CSelectServerResponse{} }
func (m *S2CSelectServerResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CSelectServerResponse) ProtoMessage()               {}
func (*S2CSelectServerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *S2CSelectServerResponse) GetAcc() string {
	if m != nil {
		return m.Acc
	}
	return ""
}

func (m *S2CSelectServerResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *S2CSelectServerResponse) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

type C2S_MSG_DATA struct {
	PlayerId int32  `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
	Token    string `protobuf:"bytes,2,opt,name=Token" json:"Token,omitempty"`
	MsgCode  int32  `protobuf:"varint,3,opt,name=MsgCode" json:"MsgCode,omitempty"`
	Data     []byte `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (m *C2S_MSG_DATA) Reset()                    { *m = C2S_MSG_DATA{} }
func (m *C2S_MSG_DATA) String() string            { return proto.CompactTextString(m) }
func (*C2S_MSG_DATA) ProtoMessage()               {}
func (*C2S_MSG_DATA) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *C2S_MSG_DATA) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *C2S_MSG_DATA) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *C2S_MSG_DATA) GetMsgCode() int32 {
	if m != nil {
		return m.MsgCode
	}
	return 0
}

func (m *C2S_MSG_DATA) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type S2C_MSG_DATA struct {
	ErrorCode int32  `protobuf:"varint,1,opt,name=ErrorCode" json:"ErrorCode,omitempty"`
	ErrorMsg  string `protobuf:"bytes,2,opt,name=ErrorMsg" json:"ErrorMsg,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (m *S2C_MSG_DATA) Reset()                    { *m = S2C_MSG_DATA{} }
func (m *S2C_MSG_DATA) String() string            { return proto.CompactTextString(m) }
func (*S2C_MSG_DATA) ProtoMessage()               {}
func (*S2C_MSG_DATA) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *S2C_MSG_DATA) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *S2C_MSG_DATA) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

func (m *S2C_MSG_DATA) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// 进入游戏服务器
type C2SEnterGameRequest struct {
	Acc   string `protobuf:"bytes,1,opt,name=Acc" json:"Acc,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=Token" json:"Token,omitempty"`
}

func (m *C2SEnterGameRequest) Reset()                    { *m = C2SEnterGameRequest{} }
func (m *C2SEnterGameRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SEnterGameRequest) ProtoMessage()               {}
func (*C2SEnterGameRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *C2SEnterGameRequest) GetAcc() string {
	if m != nil {
		return m.Acc
	}
	return ""
}

func (m *C2SEnterGameRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// 返回
type S2CEnterGameResponse struct {
	Acc      string `protobuf:"bytes,1,opt,name=Acc" json:"Acc,omitempty"`
	PlayerId int32  `protobuf:"varint,2,opt,name=PlayerId" json:"PlayerId,omitempty"`
}

func (m *S2CEnterGameResponse) Reset()                    { *m = S2CEnterGameResponse{} }
func (m *S2CEnterGameResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CEnterGameResponse) ProtoMessage()               {}
func (*S2CEnterGameResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *S2CEnterGameResponse) GetAcc() string {
	if m != nil {
		return m.Acc
	}
	return ""
}

func (m *S2CEnterGameResponse) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

// 通知客户端进入游戏服务器完成
type S2CEnterGameCompleteNotify struct {
}

func (m *S2CEnterGameCompleteNotify) Reset()                    { *m = S2CEnterGameCompleteNotify{} }
func (m *S2CEnterGameCompleteNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CEnterGameCompleteNotify) ProtoMessage()               {}
func (*S2CEnterGameCompleteNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

// 请求角色
type C2SRolesRequest struct {
}

func (m *C2SRolesRequest) Reset()                    { *m = C2SRolesRequest{} }
func (m *C2SRolesRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SRolesRequest) ProtoMessage()               {}
func (*C2SRolesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

type AttrData struct {
	AttrId int32 `protobuf:"varint,1,opt,name=AttrId" json:"AttrId,omitempty"`
	Value  int32 `protobuf:"varint,2,opt,name=Value" json:"Value,omitempty"`
}

func (m *AttrData) Reset()                    { *m = AttrData{} }
func (m *AttrData) String() string            { return proto.CompactTextString(m) }
func (*AttrData) ProtoMessage()               {}
func (*AttrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *AttrData) GetAttrId() int32 {
	if m != nil {
		return m.AttrId
	}
	return 0
}

func (m *AttrData) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Role struct {
	Id      int32   `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	TableId int32   `protobuf:"varint,2,opt,name=TableId" json:"TableId,omitempty"`
	Rank    int32   `protobuf:"varint,3,opt,name=Rank" json:"Rank,omitempty"`
	Level   int32   `protobuf:"varint,4,opt,name=Level" json:"Level,omitempty"`
	Attrs   []int32 `protobuf:"varint,5,rep,packed,name=Attrs" json:"Attrs,omitempty"`
}

func (m *Role) Reset()                    { *m = Role{} }
func (m *Role) String() string            { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()               {}
func (*Role) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *Role) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Role) GetTableId() int32 {
	if m != nil {
		return m.TableId
	}
	return 0
}

func (m *Role) GetRank() int32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *Role) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *Role) GetAttrs() []int32 {
	if m != nil {
		return m.Attrs
	}
	return nil
}

// 请求角色返回
type S2CRolesResponse struct {
	Roles []*Role `protobuf:"bytes,1,rep,name=Roles" json:"Roles,omitempty"`
}

func (m *S2CRolesResponse) Reset()                    { *m = S2CRolesResponse{} }
func (m *S2CRolesResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CRolesResponse) ProtoMessage()               {}
func (*S2CRolesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *S2CRolesResponse) GetRoles() []*Role {
	if m != nil {
		return m.Roles
	}
	return nil
}

// 角色信息更新通知
type S2CRolesChangeNotify struct {
	Adds    []*Role `protobuf:"bytes,1,rep,name=Adds" json:"Adds,omitempty"`
	Removes []int32 `protobuf:"varint,2,rep,packed,name=Removes" json:"Removes,omitempty"`
	Updates []*Role `protobuf:"bytes,3,rep,name=Updates" json:"Updates,omitempty"`
}

func (m *S2CRolesChangeNotify) Reset()                    { *m = S2CRolesChangeNotify{} }
func (m *S2CRolesChangeNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CRolesChangeNotify) ProtoMessage()               {}
func (*S2CRolesChangeNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *S2CRolesChangeNotify) GetAdds() []*Role {
	if m != nil {
		return m.Adds
	}
	return nil
}

func (m *S2CRolesChangeNotify) GetRemoves() []int32 {
	if m != nil {
		return m.Removes
	}
	return nil
}

func (m *S2CRolesChangeNotify) GetUpdates() []*Role {
	if m != nil {
		return m.Updates
	}
	return nil
}

// ------------------------------ 战斗 ----------------------------------------
// 设置阵容
type C2SSetTeamRequest struct {
	TeamType    int32   `protobuf:"varint,1,opt,name=TeamType" json:"TeamType,omitempty"`
	TeamMembers []int32 `protobuf:"varint,2,rep,packed,name=TeamMembers" json:"TeamMembers,omitempty"`
}

func (m *C2SSetTeamRequest) Reset()                    { *m = C2SSetTeamRequest{} }
func (m *C2SSetTeamRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SSetTeamRequest) ProtoMessage()               {}
func (*C2SSetTeamRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *C2SSetTeamRequest) GetTeamType() int32 {
	if m != nil {
		return m.TeamType
	}
	return 0
}

func (m *C2SSetTeamRequest) GetTeamMembers() []int32 {
	if m != nil {
		return m.TeamMembers
	}
	return nil
}

type S2CSetTeamResponse struct {
	TeamType    int32   `protobuf:"varint,1,opt,name=TeamType" json:"TeamType,omitempty"`
	TeamMembers []int32 `protobuf:"varint,2,rep,packed,name=TeamMembers" json:"TeamMembers,omitempty"`
}

func (m *S2CSetTeamResponse) Reset()                    { *m = S2CSetTeamResponse{} }
func (m *S2CSetTeamResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CSetTeamResponse) ProtoMessage()               {}
func (*S2CSetTeamResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *S2CSetTeamResponse) GetTeamType() int32 {
	if m != nil {
		return m.TeamType
	}
	return 0
}

func (m *S2CSetTeamResponse) GetTeamMembers() []int32 {
	if m != nil {
		return m.TeamMembers
	}
	return nil
}

type TeamData struct {
	TeamType    int32   `protobuf:"varint,1,opt,name=TeamType" json:"TeamType,omitempty"`
	TeamMembers []int32 `protobuf:"varint,2,rep,packed,name=TeamMembers" json:"TeamMembers,omitempty"`
}

func (m *TeamData) Reset()                    { *m = TeamData{} }
func (m *TeamData) String() string            { return proto.CompactTextString(m) }
func (*TeamData) ProtoMessage()               {}
func (*TeamData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *TeamData) GetTeamType() int32 {
	if m != nil {
		return m.TeamType
	}
	return 0
}

func (m *TeamData) GetTeamMembers() []int32 {
	if m != nil {
		return m.TeamMembers
	}
	return nil
}

// 阵容数据
type S2CTeamsResponse struct {
	Teams []*TeamData `protobuf:"bytes,1,rep,name=Teams" json:"Teams,omitempty"`
}

func (m *S2CTeamsResponse) Reset()                    { *m = S2CTeamsResponse{} }
func (m *S2CTeamsResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CTeamsResponse) ProtoMessage()               {}
func (*S2CTeamsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *S2CTeamsResponse) GetTeams() []*TeamData {
	if m != nil {
		return m.Teams
	}
	return nil
}

// 阵营成员
type BattleMemberItem struct {
	Id      int32 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	Pos     int32 `protobuf:"varint,2,opt,name=Pos" json:"Pos,omitempty"`
	HP      int32 `protobuf:"varint,3,opt,name=HP" json:"HP,omitempty"`
	MaxHP   int32 `protobuf:"varint,4,opt,name=MaxHP" json:"MaxHP,omitempty"`
	Damage  int32 `protobuf:"varint,5,opt,name=Damage" json:"Damage,omitempty"`
	Energy  int32 `protobuf:"varint,6,opt,name=Energy" json:"Energy,omitempty"`
	TableId int32 `protobuf:"varint,7,opt,name=TableId" json:"TableId,omitempty"`
	Side    int32 `protobuf:"varint,8,opt,name=Side" json:"Side,omitempty"`
}

func (m *BattleMemberItem) Reset()                    { *m = BattleMemberItem{} }
func (m *BattleMemberItem) String() string            { return proto.CompactTextString(m) }
func (*BattleMemberItem) ProtoMessage()               {}
func (*BattleMemberItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *BattleMemberItem) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BattleMemberItem) GetPos() int32 {
	if m != nil {
		return m.Pos
	}
	return 0
}

func (m *BattleMemberItem) GetHP() int32 {
	if m != nil {
		return m.HP
	}
	return 0
}

func (m *BattleMemberItem) GetMaxHP() int32 {
	if m != nil {
		return m.MaxHP
	}
	return 0
}

func (m *BattleMemberItem) GetDamage() int32 {
	if m != nil {
		return m.Damage
	}
	return 0
}

func (m *BattleMemberItem) GetEnergy() int32 {
	if m != nil {
		return m.Energy
	}
	return 0
}

func (m *BattleMemberItem) GetTableId() int32 {
	if m != nil {
		return m.TableId
	}
	return 0
}

func (m *BattleMemberItem) GetSide() int32 {
	if m != nil {
		return m.Side
	}
	return 0
}

type BattleMemberBuff struct {
	Side   int32 `protobuf:"varint,1,opt,name=Side" json:"Side,omitempty"`
	MemId  int32 `protobuf:"varint,2,opt,name=MemId" json:"MemId,omitempty"`
	Pos    int32 `protobuf:"varint,3,opt,name=Pos" json:"Pos,omitempty"`
	BuffId int32 `protobuf:"varint,4,opt,name=BuffId" json:"BuffId,omitempty"`
}

func (m *BattleMemberBuff) Reset()                    { *m = BattleMemberBuff{} }
func (m *BattleMemberBuff) String() string            { return proto.CompactTextString(m) }
func (*BattleMemberBuff) ProtoMessage()               {}
func (*BattleMemberBuff) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *BattleMemberBuff) GetSide() int32 {
	if m != nil {
		return m.Side
	}
	return 0
}

func (m *BattleMemberBuff) GetMemId() int32 {
	if m != nil {
		return m.MemId
	}
	return 0
}

func (m *BattleMemberBuff) GetPos() int32 {
	if m != nil {
		return m.Pos
	}
	return 0
}

func (m *BattleMemberBuff) GetBuffId() int32 {
	if m != nil {
		return m.BuffId
	}
	return 0
}

// 战报项(一次攻击的结果)
type BattleReportItem struct {
	Side        int32               `protobuf:"varint,1,opt,name=Side" json:"Side,omitempty"`
	SkillId     int32               `protobuf:"varint,2,opt,name=SkillId" json:"SkillId,omitempty"`
	User        *BattleMemberItem   `protobuf:"bytes,3,opt,name=User" json:"User,omitempty"`
	BeHiters    []*BattleMemberItem `protobuf:"bytes,4,rep,name=BeHiters" json:"BeHiters,omitempty"`
	AddBuffs    []*BattleMemberBuff `protobuf:"bytes,5,rep,name=AddBuffs" json:"AddBuffs,omitempty"`
	RemoveBuffs []*BattleMemberBuff `protobuf:"bytes,6,rep,name=RemoveBuffs" json:"RemoveBuffs,omitempty"`
	IsCritical  bool                `protobuf:"varint,7,opt,name=IsCritical" json:"IsCritical,omitempty"`
	IsBlock     bool                `protobuf:"varint,8,opt,name=IsBlock" json:"IsBlock,omitempty"`
	IsSummon    bool                `protobuf:"varint,9,opt,name=IsSummon" json:"IsSummon,omitempty"`
	HasCombo    bool                `protobuf:"varint,10,opt,name=HasCombo" json:"HasCombo,omitempty"`
}

func (m *BattleReportItem) Reset()                    { *m = BattleReportItem{} }
func (m *BattleReportItem) String() string            { return proto.CompactTextString(m) }
func (*BattleReportItem) ProtoMessage()               {}
func (*BattleReportItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *BattleReportItem) GetSide() int32 {
	if m != nil {
		return m.Side
	}
	return 0
}

func (m *BattleReportItem) GetSkillId() int32 {
	if m != nil {
		return m.SkillId
	}
	return 0
}

func (m *BattleReportItem) GetUser() *BattleMemberItem {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *BattleReportItem) GetBeHiters() []*BattleMemberItem {
	if m != nil {
		return m.BeHiters
	}
	return nil
}

func (m *BattleReportItem) GetAddBuffs() []*BattleMemberBuff {
	if m != nil {
		return m.AddBuffs
	}
	return nil
}

func (m *BattleReportItem) GetRemoveBuffs() []*BattleMemberBuff {
	if m != nil {
		return m.RemoveBuffs
	}
	return nil
}

func (m *BattleReportItem) GetIsCritical() bool {
	if m != nil {
		return m.IsCritical
	}
	return false
}

func (m *BattleReportItem) GetIsBlock() bool {
	if m != nil {
		return m.IsBlock
	}
	return false
}

func (m *BattleReportItem) GetIsSummon() bool {
	if m != nil {
		return m.IsSummon
	}
	return false
}

func (m *BattleReportItem) GetHasCombo() bool {
	if m != nil {
		return m.HasCombo
	}
	return false
}

// 一回合战报
type BattleRoundReports struct {
	RoundNum       int32               `protobuf:"varint,1,opt,name=RoundNum" json:"RoundNum,omitempty"`
	Reports        []*BattleReportItem `protobuf:"bytes,2,rep,name=Reports" json:"Reports,omitempty"`
	RemoveBuffs    []*BattleMemberBuff `protobuf:"bytes,3,rep,name=RemoveBuffs" json:"RemoveBuffs,omitempty"`
	ChangedMembers []*BattleMemberItem `protobuf:"bytes,4,rep,name=ChangedMembers" json:"ChangedMembers,omitempty"`
}

func (m *BattleRoundReports) Reset()                    { *m = BattleRoundReports{} }
func (m *BattleRoundReports) String() string            { return proto.CompactTextString(m) }
func (*BattleRoundReports) ProtoMessage()               {}
func (*BattleRoundReports) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *BattleRoundReports) GetRoundNum() int32 {
	if m != nil {
		return m.RoundNum
	}
	return 0
}

func (m *BattleRoundReports) GetReports() []*BattleReportItem {
	if m != nil {
		return m.Reports
	}
	return nil
}

func (m *BattleRoundReports) GetRemoveBuffs() []*BattleMemberBuff {
	if m != nil {
		return m.RemoveBuffs
	}
	return nil
}

func (m *BattleRoundReports) GetChangedMembers() []*BattleMemberItem {
	if m != nil {
		return m.ChangedMembers
	}
	return nil
}

// 请求战斗结果
type C2SBattleResultRequest struct {
	AttackMembers []int32 `protobuf:"varint,1,rep,packed,name=AttackMembers" json:"AttackMembers,omitempty"`
	FightPlayerId int32   `protobuf:"varint,2,opt,name=FightPlayerId" json:"FightPlayerId,omitempty"`
}

func (m *C2SBattleResultRequest) Reset()                    { *m = C2SBattleResultRequest{} }
func (m *C2SBattleResultRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SBattleResultRequest) ProtoMessage()               {}
func (*C2SBattleResultRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *C2SBattleResultRequest) GetAttackMembers() []int32 {
	if m != nil {
		return m.AttackMembers
	}
	return nil
}

func (m *C2SBattleResultRequest) GetFightPlayerId() int32 {
	if m != nil {
		return m.FightPlayerId
	}
	return 0
}

type S2CBattleResultResponse struct {
	IsWin        bool                  `protobuf:"varint,1,opt,name=IsWin" json:"IsWin,omitempty"`
	MyTeam       []*BattleMemberItem   `protobuf:"bytes,2,rep,name=MyTeam" json:"MyTeam,omitempty"`
	TargetTeam   []*BattleMemberItem   `protobuf:"bytes,3,rep,name=TargetTeam" json:"TargetTeam,omitempty"`
	EnterReports []*BattleReportItem   `protobuf:"bytes,4,rep,name=EnterReports" json:"EnterReports,omitempty"`
	Rounds       []*BattleRoundReports `protobuf:"bytes,5,rep,name=Rounds" json:"Rounds,omitempty"`
}

func (m *S2CBattleResultResponse) Reset()                    { *m = S2CBattleResultResponse{} }
func (m *S2CBattleResultResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CBattleResultResponse) ProtoMessage()               {}
func (*S2CBattleResultResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *S2CBattleResultResponse) GetIsWin() bool {
	if m != nil {
		return m.IsWin
	}
	return false
}

func (m *S2CBattleResultResponse) GetMyTeam() []*BattleMemberItem {
	if m != nil {
		return m.MyTeam
	}
	return nil
}

func (m *S2CBattleResultResponse) GetTargetTeam() []*BattleMemberItem {
	if m != nil {
		return m.TargetTeam
	}
	return nil
}

func (m *S2CBattleResultResponse) GetEnterReports() []*BattleReportItem {
	if m != nil {
		return m.EnterReports
	}
	return nil
}

func (m *S2CBattleResultResponse) GetRounds() []*BattleRoundReports {
	if m != nil {
		return m.Rounds
	}
	return nil
}

// 按昵称查找好友信息
type C2SFriendSearch struct {
	Key string `protobuf:"bytes,1,opt,name=Key" json:"Key,omitempty"`
}

func (m *C2SFriendSearch) Reset()                    { *m = C2SFriendSearch{} }
func (m *C2SFriendSearch) String() string            { return proto.CompactTextString(m) }
func (*C2SFriendSearch) ProtoMessage()               {}
func (*C2SFriendSearch) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *C2SFriendSearch) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

// 按ID查找好友
type C2SFriendSearchById struct {
	PlayerId int32 `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
}

func (m *C2SFriendSearchById) Reset()                    { *m = C2SFriendSearchById{} }
func (m *C2SFriendSearchById) String() string            { return proto.CompactTextString(m) }
func (*C2SFriendSearchById) ProtoMessage()               {}
func (*C2SFriendSearchById) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *C2SFriendSearchById) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

// 返回好友信息
type S2CFriendSearchResult struct {
	Result []*FriendInfo `protobuf:"bytes,1,rep,name=Result" json:"Result,omitempty"`
}

func (m *S2CFriendSearchResult) Reset()                    { *m = S2CFriendSearchResult{} }
func (m *S2CFriendSearchResult) String() string            { return proto.CompactTextString(m) }
func (*S2CFriendSearchResult) ProtoMessage()               {}
func (*S2CFriendSearchResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *S2CFriendSearchResult) GetResult() []*FriendInfo {
	if m != nil {
		return m.Result
	}
	return nil
}

// 客户端向服务器获取好友相关列表
type C2SGetFriendList struct {
	HasFoster bool `protobuf:"varint,1,opt,name=HasFoster" json:"HasFoster,omitempty"`
}

func (m *C2SGetFriendList) Reset()                    { *m = C2SGetFriendList{} }
func (m *C2SGetFriendList) String() string            { return proto.CompactTextString(m) }
func (*C2SGetFriendList) ProtoMessage()               {}
func (*C2SGetFriendList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *C2SGetFriendList) GetHasFoster() bool {
	if m != nil {
		return m.HasFoster
	}
	return false
}

// 加好友请求信息
type FriendReq struct {
	PlayerId int32  `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Score    int32  `protobuf:"varint,3,opt,name=Score" json:"Score,omitempty"`
	Head     string `protobuf:"bytes,4,opt,name=Head" json:"Head,omitempty"`
}

func (m *FriendReq) Reset()                    { *m = FriendReq{} }
func (m *FriendReq) String() string            { return proto.CompactTextString(m) }
func (*FriendReq) ProtoMessage()               {}
func (*FriendReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *FriendReq) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *FriendReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FriendReq) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *FriendReq) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

// 服务器向客户端返回好友列表
type S2CRetFriendListResult struct {
	FriendType        int32         `protobuf:"varint,1,opt,name=FriendType" json:"FriendType,omitempty"`
	FriendList        []*FriendInfo `protobuf:"bytes,2,rep,name=FriendList" json:"FriendList,omitempty"`
	Reqs              []*FriendReq  `protobuf:"bytes,3,rep,name=Reqs" json:"Reqs,omitempty"`
	LeftGivePointsNum int32         `protobuf:"varint,4,opt,name=LeftGivePointsNum" json:"LeftGivePointsNum,omitempty"`
}

func (m *S2CRetFriendListResult) Reset()                    { *m = S2CRetFriendListResult{} }
func (m *S2CRetFriendListResult) String() string            { return proto.CompactTextString(m) }
func (*S2CRetFriendListResult) ProtoMessage()               {}
func (*S2CRetFriendListResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *S2CRetFriendListResult) GetFriendType() int32 {
	if m != nil {
		return m.FriendType
	}
	return 0
}

func (m *S2CRetFriendListResult) GetFriendList() []*FriendInfo {
	if m != nil {
		return m.FriendList
	}
	return nil
}

func (m *S2CRetFriendListResult) GetReqs() []*FriendReq {
	if m != nil {
		return m.Reqs
	}
	return nil
}

func (m *S2CRetFriendListResult) GetLeftGivePointsNum() int32 {
	if m != nil {
		return m.LeftGivePointsNum
	}
	return 0
}

// 服务器通知好友状态
type S2CFriendStateNotify struct {
	StateType int32       `protobuf:"varint,1,opt,name=StateType" json:"StateType,omitempty"`
	Info      *FriendInfo `protobuf:"bytes,2,opt,name=Info" json:"Info,omitempty"`
}

func (m *S2CFriendStateNotify) Reset()                    { *m = S2CFriendStateNotify{} }
func (m *S2CFriendStateNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CFriendStateNotify) ProtoMessage()               {}
func (*S2CFriendStateNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *S2CFriendStateNotify) GetStateType() int32 {
	if m != nil {
		return m.StateType
	}
	return 0
}

func (m *S2CFriendStateNotify) GetInfo() *FriendInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

// 服务器通知好友请求
type S2CFriendReqNotify struct {
	Req *FriendReq `protobuf:"bytes,1,opt,name=Req" json:"Req,omitempty"`
}

func (m *S2CFriendReqNotify) Reset()                    { *m = S2CFriendReqNotify{} }
func (m *S2CFriendReqNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CFriendReqNotify) ProtoMessage()               {}
func (*S2CFriendReqNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *S2CFriendReqNotify) GetReq() *FriendReq {
	if m != nil {
		return m.Req
	}
	return nil
}

// 客户端通过Id加好友
type C2SAddFriendByPId struct {
	PlayerId int32 `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
}

func (m *C2SAddFriendByPId) Reset()                    { *m = C2SAddFriendByPId{} }
func (m *C2SAddFriendByPId) String() string            { return proto.CompactTextString(m) }
func (*C2SAddFriendByPId) ProtoMessage()               {}
func (*C2SAddFriendByPId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *C2SAddFriendByPId) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

// 客户端通过昵称加好友
type C2SAddFriendByName struct {
	Name string `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
}

func (m *C2SAddFriendByName) Reset()                    { *m = C2SAddFriendByName{} }
func (m *C2SAddFriendByName) String() string            { return proto.CompactTextString(m) }
func (*C2SAddFriendByName) ProtoMessage()               {}
func (*C2SAddFriendByName) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *C2SAddFriendByName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// 服务器回复添加好友
type S2CAddFriendResult struct {
	PlayerId int32 `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
}

func (m *S2CAddFriendResult) Reset()                    { *m = S2CAddFriendResult{} }
func (m *S2CAddFriendResult) String() string            { return proto.CompactTextString(m) }
func (*S2CAddFriendResult) ProtoMessage()               {}
func (*S2CAddFriendResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *S2CAddFriendResult) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

// 客户端同意加好友
type C2SAgreeFriend struct {
	PlayerId int32 `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
}

func (m *C2SAgreeFriend) Reset()                    { *m = C2SAgreeFriend{} }
func (m *C2SAgreeFriend) String() string            { return proto.CompactTextString(m) }
func (*C2SAgreeFriend) ProtoMessage()               {}
func (*C2SAgreeFriend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *C2SAgreeFriend) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

// 服务器返回增加好友回复
type S2CAgreeFriendResult struct {
	PlayerId  int32  `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Score     int32  `protobuf:"varint,3,opt,name=Score" json:"Score,omitempty"`
	Level     int32  `protobuf:"varint,4,opt,name=Level" json:"Level,omitempty"`
	Head      string `protobuf:"bytes,5,opt,name=Head" json:"Head,omitempty"`
	VipLevel  int32  `protobuf:"varint,6,opt,name=VipLevel" json:"VipLevel,omitempty"`
	LastLogin int32  `protobuf:"varint,7,opt,name=LastLogin" json:"LastLogin,omitempty"`
}

func (m *S2CAgreeFriendResult) Reset()                    { *m = S2CAgreeFriendResult{} }
func (m *S2CAgreeFriendResult) String() string            { return proto.CompactTextString(m) }
func (*S2CAgreeFriendResult) ProtoMessage()               {}
func (*S2CAgreeFriendResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *S2CAgreeFriendResult) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *S2CAgreeFriendResult) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *S2CAgreeFriendResult) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *S2CAgreeFriendResult) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *S2CAgreeFriendResult) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

func (m *S2CAgreeFriendResult) GetVipLevel() int32 {
	if m != nil {
		return m.VipLevel
	}
	return 0
}

func (m *S2CAgreeFriendResult) GetLastLogin() int32 {
	if m != nil {
		return m.LastLogin
	}
	return 0
}

// 客户端拒绝加好友
type C2SRefuseFriend struct {
	PlayerId int32 `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
}

func (m *C2SRefuseFriend) Reset()                    { *m = C2SRefuseFriend{} }
func (m *C2SRefuseFriend) String() string            { return proto.CompactTextString(m) }
func (*C2SRefuseFriend) ProtoMessage()               {}
func (*C2SRefuseFriend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *C2SRefuseFriend) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

// 服务器通知拒绝加好友
type S2CRefuseFriendResult struct {
	Name     string `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	PlayerId int32  `protobuf:"varint,2,opt,name=PlayerId" json:"PlayerId,omitempty"`
}

func (m *S2CRefuseFriendResult) Reset()                    { *m = S2CRefuseFriendResult{} }
func (m *S2CRefuseFriendResult) String() string            { return proto.CompactTextString(m) }
func (*S2CRefuseFriendResult) ProtoMessage()               {}
func (*S2CRefuseFriendResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *S2CRefuseFriendResult) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *S2CRefuseFriendResult) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

// 客户端删除好友
type C2SRemoveFriend struct {
	PlayerId int32 `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
}

func (m *C2SRemoveFriend) Reset()                    { *m = C2SRemoveFriend{} }
func (m *C2SRemoveFriend) String() string            { return proto.CompactTextString(m) }
func (*C2SRemoveFriend) ProtoMessage()               {}
func (*C2SRemoveFriend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *C2SRemoveFriend) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

// 服务器通知客户端删除好友
type S2CRemoveFriendResult struct {
	PlayerId int32 `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
}

func (m *S2CRemoveFriendResult) Reset()                    { *m = S2CRemoveFriendResult{} }
func (m *S2CRemoveFriendResult) String() string            { return proto.CompactTextString(m) }
func (*S2CRemoveFriendResult) ProtoMessage()               {}
func (*S2CRemoveFriendResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *S2CRemoveFriendResult) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

// 赠送友情点
type C2SGiveFriendPoints struct {
	FriendId []int32 `protobuf:"varint,1,rep,packed,name=FriendId" json:"FriendId,omitempty"`
}

func (m *C2SGiveFriendPoints) Reset()                    { *m = C2SGiveFriendPoints{} }
func (m *C2SGiveFriendPoints) String() string            { return proto.CompactTextString(m) }
func (*C2SGiveFriendPoints) ProtoMessage()               {}
func (*C2SGiveFriendPoints) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *C2SGiveFriendPoints) GetFriendId() []int32 {
	if m != nil {
		return m.FriendId
	}
	return nil
}

type FriendPointsResult struct {
	FriendId      int32 `protobuf:"varint,1,opt,name=FriendId" json:"FriendId,omitempty"`
	Points        int32 `protobuf:"varint,2,opt,name=Points" json:"Points,omitempty"`
	Error         int32 `protobuf:"varint,3,opt,name=Error" json:"Error,omitempty"`
	RemainSeconds int32 `protobuf:"varint,4,opt,name=RemainSeconds" json:"RemainSeconds,omitempty"`
	IsTodayGive   bool  `protobuf:"varint,5,opt,name=IsTodayGive" json:"IsTodayGive,omitempty"`
	BackPoints    int32 `protobuf:"varint,6,opt,name=BackPoints" json:"BackPoints,omitempty"`
}

func (m *FriendPointsResult) Reset()                    { *m = FriendPointsResult{} }
func (m *FriendPointsResult) String() string            { return proto.CompactTextString(m) }
func (*FriendPointsResult) ProtoMessage()               {}
func (*FriendPointsResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *FriendPointsResult) GetFriendId() int32 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

func (m *FriendPointsResult) GetPoints() int32 {
	if m != nil {
		return m.Points
	}
	return 0
}

func (m *FriendPointsResult) GetError() int32 {
	if m != nil {
		return m.Error
	}
	return 0
}

func (m *FriendPointsResult) GetRemainSeconds() int32 {
	if m != nil {
		return m.RemainSeconds
	}
	return 0
}

func (m *FriendPointsResult) GetIsTodayGive() bool {
	if m != nil {
		return m.IsTodayGive
	}
	return false
}

func (m *FriendPointsResult) GetBackPoints() int32 {
	if m != nil {
		return m.BackPoints
	}
	return 0
}

type S2CGiveFriendPointsResult struct {
	PointsData        []*FriendPointsResult `protobuf:"bytes,1,rep,name=PointsData" json:"PointsData,omitempty"`
	LeftGivePointsNum int32                 `protobuf:"varint,2,opt,name=LeftGivePointsNum" json:"LeftGivePointsNum,omitempty"`
}

func (m *S2CGiveFriendPointsResult) Reset()                    { *m = S2CGiveFriendPointsResult{} }
func (m *S2CGiveFriendPointsResult) String() string            { return proto.CompactTextString(m) }
func (*S2CGiveFriendPointsResult) ProtoMessage()               {}
func (*S2CGiveFriendPointsResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *S2CGiveFriendPointsResult) GetPointsData() []*FriendPointsResult {
	if m != nil {
		return m.PointsData
	}
	return nil
}

func (m *S2CGiveFriendPointsResult) GetLeftGivePointsNum() int32 {
	if m != nil {
		return m.LeftGivePointsNum
	}
	return 0
}

// 收取友情点
type C2SGetFriendPoints struct {
	FriendId []int32 `protobuf:"varint,1,rep,packed,name=FriendId" json:"FriendId,omitempty"`
}

func (m *C2SGetFriendPoints) Reset()                    { *m = C2SGetFriendPoints{} }
func (m *C2SGetFriendPoints) String() string            { return proto.CompactTextString(m) }
func (*C2SGetFriendPoints) ProtoMessage()               {}
func (*C2SGetFriendPoints) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func (m *C2SGetFriendPoints) GetFriendId() []int32 {
	if m != nil {
		return m.FriendId
	}
	return nil
}

type FriendPoints struct {
	FriendId int32 `protobuf:"varint,1,opt,name=FriendId" json:"FriendId,omitempty"`
	Points   int32 `protobuf:"varint,2,opt,name=Points" json:"Points,omitempty"`
}

func (m *FriendPoints) Reset()                    { *m = FriendPoints{} }
func (m *FriendPoints) String() string            { return proto.CompactTextString(m) }
func (*FriendPoints) ProtoMessage()               {}
func (*FriendPoints) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

func (m *FriendPoints) GetFriendId() int32 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

func (m *FriendPoints) GetPoints() int32 {
	if m != nil {
		return m.Points
	}
	return 0
}

type S2CGetFriendPointsResult struct {
	PointsData []*FriendPoints `protobuf:"bytes,1,rep,name=PointsData" json:"PointsData,omitempty"`
}

func (m *S2CGetFriendPointsResult) Reset()                    { *m = S2CGetFriendPointsResult{} }
func (m *S2CGetFriendPointsResult) String() string            { return proto.CompactTextString(m) }
func (*S2CGetFriendPointsResult) ProtoMessage()               {}
func (*S2CGetFriendPointsResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *S2CGetFriendPointsResult) GetPointsData() []*FriendPoints {
	if m != nil {
		return m.PointsData
	}
	return nil
}

// 客户端给好友发送消息
type C2SFriendChat struct {
	PlayerId int32  `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
	Content  []byte `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (m *C2SFriendChat) Reset()                    { *m = C2SFriendChat{} }
func (m *C2SFriendChat) String() string            { return proto.CompactTextString(m) }
func (*C2SFriendChat) ProtoMessage()               {}
func (*C2SFriendChat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{54} }

func (m *C2SFriendChat) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *C2SFriendChat) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type S2CFriendChatResult struct {
	PlayerId int32  `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
	Content  []byte `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (m *S2CFriendChatResult) Reset()                    { *m = S2CFriendChatResult{} }
func (m *S2CFriendChatResult) String() string            { return proto.CompactTextString(m) }
func (*S2CFriendChatResult) ProtoMessage()               {}
func (*S2CFriendChatResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{55} }

func (m *S2CFriendChatResult) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *S2CFriendChatResult) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

// 获取好友未读消息数量
type C2SFriendGetUnreadMessageNum struct {
	FriendIds []int32 `protobuf:"varint,1,rep,packed,name=FriendIds" json:"FriendIds,omitempty"`
}

func (m *C2SFriendGetUnreadMessageNum) Reset()                    { *m = C2SFriendGetUnreadMessageNum{} }
func (m *C2SFriendGetUnreadMessageNum) String() string            { return proto.CompactTextString(m) }
func (*C2SFriendGetUnreadMessageNum) ProtoMessage()               {}
func (*C2SFriendGetUnreadMessageNum) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{56} }

func (m *C2SFriendGetUnreadMessageNum) GetFriendIds() []int32 {
	if m != nil {
		return m.FriendIds
	}
	return nil
}

type FriendUnreadMessageNumData struct {
	FriendId   int32 `protobuf:"varint,1,opt,name=FriendId" json:"FriendId,omitempty"`
	MessageNum int32 `protobuf:"varint,2,opt,name=MessageNum" json:"MessageNum,omitempty"`
}

func (m *FriendUnreadMessageNumData) Reset()                    { *m = FriendUnreadMessageNumData{} }
func (m *FriendUnreadMessageNumData) String() string            { return proto.CompactTextString(m) }
func (*FriendUnreadMessageNumData) ProtoMessage()               {}
func (*FriendUnreadMessageNumData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57} }

func (m *FriendUnreadMessageNumData) GetFriendId() int32 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

func (m *FriendUnreadMessageNumData) GetMessageNum() int32 {
	if m != nil {
		return m.MessageNum
	}
	return 0
}

type S2CFriendGetUnreadMessageNumResult struct {
	Data []*FriendUnreadMessageNumData `protobuf:"bytes,1,rep,name=Data" json:"Data,omitempty"`
}

func (m *S2CFriendGetUnreadMessageNumResult) Reset()         { *m = S2CFriendGetUnreadMessageNumResult{} }
func (m *S2CFriendGetUnreadMessageNumResult) String() string { return proto.CompactTextString(m) }
func (*S2CFriendGetUnreadMessageNumResult) ProtoMessage()    {}
func (*S2CFriendGetUnreadMessageNumResult) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{58}
}

func (m *S2CFriendGetUnreadMessageNumResult) GetData() []*FriendUnreadMessageNumData {
	if m != nil {
		return m.Data
	}
	return nil
}

// 拉取好友未读聊天消息
type C2SFriendPullUnreadMessage struct {
	FriendId int32 `protobuf:"varint,1,opt,name=FriendId" json:"FriendId,omitempty"`
}

func (m *C2SFriendPullUnreadMessage) Reset()                    { *m = C2SFriendPullUnreadMessage{} }
func (m *C2SFriendPullUnreadMessage) String() string            { return proto.CompactTextString(m) }
func (*C2SFriendPullUnreadMessage) ProtoMessage()               {}
func (*C2SFriendPullUnreadMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{59} }

func (m *C2SFriendPullUnreadMessage) GetFriendId() int32 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

type FriendChatData struct {
	Content  []byte `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
	SendTime int32  `protobuf:"varint,2,opt,name=SendTime" json:"SendTime,omitempty"`
}

func (m *FriendChatData) Reset()                    { *m = FriendChatData{} }
func (m *FriendChatData) String() string            { return proto.CompactTextString(m) }
func (*FriendChatData) ProtoMessage()               {}
func (*FriendChatData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{60} }

func (m *FriendChatData) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *FriendChatData) GetSendTime() int32 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

type S2CFriendPullUnreadMessageResult struct {
	FriendId int32             `protobuf:"varint,1,opt,name=FriendId" json:"FriendId,omitempty"`
	Data     []*FriendChatData `protobuf:"bytes,2,rep,name=Data" json:"Data,omitempty"`
}

func (m *S2CFriendPullUnreadMessageResult) Reset()         { *m = S2CFriendPullUnreadMessageResult{} }
func (m *S2CFriendPullUnreadMessageResult) String() string { return proto.CompactTextString(m) }
func (*S2CFriendPullUnreadMessageResult) ProtoMessage()    {}
func (*S2CFriendPullUnreadMessageResult) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{61}
}

func (m *S2CFriendPullUnreadMessageResult) GetFriendId() int32 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

func (m *S2CFriendPullUnreadMessageResult) GetData() []*FriendChatData {
	if m != nil {
		return m.Data
	}
	return nil
}

// 确认聊天未读消息
type C2SFriendConfirmUnreadMessage struct {
	FriendId   int32 `protobuf:"varint,1,opt,name=FriendId" json:"FriendId,omitempty"`
	MessageNum int32 `protobuf:"varint,2,opt,name=MessageNum" json:"MessageNum,omitempty"`
}

func (m *C2SFriendConfirmUnreadMessage) Reset()                    { *m = C2SFriendConfirmUnreadMessage{} }
func (m *C2SFriendConfirmUnreadMessage) String() string            { return proto.CompactTextString(m) }
func (*C2SFriendConfirmUnreadMessage) ProtoMessage()               {}
func (*C2SFriendConfirmUnreadMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{62} }

func (m *C2SFriendConfirmUnreadMessage) GetFriendId() int32 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

func (m *C2SFriendConfirmUnreadMessage) GetMessageNum() int32 {
	if m != nil {
		return m.MessageNum
	}
	return 0
}

type S2CFriendConfirmUnreadMessageResult struct {
	FriendId   int32 `protobuf:"varint,1,opt,name=FriendId" json:"FriendId,omitempty"`
	MessageNum int32 `protobuf:"varint,2,opt,name=MessageNum" json:"MessageNum,omitempty"`
}

func (m *S2CFriendConfirmUnreadMessageResult) Reset()         { *m = S2CFriendConfirmUnreadMessageResult{} }
func (m *S2CFriendConfirmUnreadMessageResult) String() string { return proto.CompactTextString(m) }
func (*S2CFriendConfirmUnreadMessageResult) ProtoMessage()    {}
func (*S2CFriendConfirmUnreadMessageResult) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{63}
}

func (m *S2CFriendConfirmUnreadMessageResult) GetFriendId() int32 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

func (m *S2CFriendConfirmUnreadMessageResult) GetMessageNum() int32 {
	if m != nil {
		return m.MessageNum
	}
	return 0
}

// 客户端请求好友在线状态
type C2SGetOnlineFriends struct {
	Key int32 `protobuf:"varint,1,opt,name=Key" json:"Key,omitempty"`
}

func (m *C2SGetOnlineFriends) Reset()                    { *m = C2SGetOnlineFriends{} }
func (m *C2SGetOnlineFriends) String() string            { return proto.CompactTextString(m) }
func (*C2SGetOnlineFriends) ProtoMessage()               {}
func (*C2SGetOnlineFriends) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{64} }

func (m *C2SGetOnlineFriends) GetKey() int32 {
	if m != nil {
		return m.Key
	}
	return 0
}

// 服务器返回在线好友
type S2CRetOnlineFriends struct {
	PlayerIds []int32 `protobuf:"varint,1,rep,packed,name=PlayerIds" json:"PlayerIds,omitempty"`
	Key       int32   `protobuf:"varint,2,opt,name=Key" json:"Key,omitempty"`
}

func (m *S2CRetOnlineFriends) Reset()                    { *m = S2CRetOnlineFriends{} }
func (m *S2CRetOnlineFriends) String() string            { return proto.CompactTextString(m) }
func (*S2CRetOnlineFriends) ProtoMessage()               {}
func (*S2CRetOnlineFriends) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{65} }

func (m *S2CRetOnlineFriends) GetPlayerIds() []int32 {
	if m != nil {
		return m.PlayerIds
	}
	return nil
}

func (m *S2CRetOnlineFriends) GetKey() int32 {
	if m != nil {
		return m.Key
	}
	return 0
}

// //////////////// shop ///////////////////////
// 请求商店商品
type C2SShopItems struct {
	ShopId int32 `protobuf:"varint,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
}

func (m *C2SShopItems) Reset()                    { *m = C2SShopItems{} }
func (m *C2SShopItems) String() string            { return proto.CompactTextString(m) }
func (*C2SShopItems) ProtoMessage()               {}
func (*C2SShopItems) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{66} }

func (m *C2SShopItems) GetShopId() int32 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

type S2CShopItem struct {
	ItemId        int32 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	LeftNum       int32 `protobuf:"varint,2,opt,name=left_num,json=leftNum" json:"left_num,omitempty"`
	RemainSeconds int32 `protobuf:"varint,3,opt,name=remain_seconds,json=remainSeconds" json:"remain_seconds,omitempty"`
}

func (m *S2CShopItem) Reset()                    { *m = S2CShopItem{} }
func (m *S2CShopItem) String() string            { return proto.CompactTextString(m) }
func (*S2CShopItem) ProtoMessage()               {}
func (*S2CShopItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{67} }

func (m *S2CShopItem) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *S2CShopItem) GetLeftNum() int32 {
	if m != nil {
		return m.LeftNum
	}
	return 0
}

func (m *S2CShopItem) GetRemainSeconds() int32 {
	if m != nil {
		return m.RemainSeconds
	}
	return 0
}

type S2CShopItemsResult struct {
	ShopId int32          `protobuf:"varint,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Items  []*S2CShopItem `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
}

func (m *S2CShopItemsResult) Reset()                    { *m = S2CShopItemsResult{} }
func (m *S2CShopItemsResult) String() string            { return proto.CompactTextString(m) }
func (*S2CShopItemsResult) ProtoMessage()               {}
func (*S2CShopItemsResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{68} }

func (m *S2CShopItemsResult) GetShopId() int32 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

func (m *S2CShopItemsResult) GetItems() []*S2CShopItem {
	if m != nil {
		return m.Items
	}
	return nil
}

// 购买商店物品
type C2SBuyShopItem struct {
	ItemId  int32 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	ItemNum int32 `protobuf:"varint,2,opt,name=item_num,json=itemNum" json:"item_num,omitempty"`
}

func (m *C2SBuyShopItem) Reset()                    { *m = C2SBuyShopItem{} }
func (m *C2SBuyShopItem) String() string            { return proto.CompactTextString(m) }
func (*C2SBuyShopItem) ProtoMessage()               {}
func (*C2SBuyShopItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{69} }

func (m *C2SBuyShopItem) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *C2SBuyShopItem) GetItemNum() int32 {
	if m != nil {
		return m.ItemNum
	}
	return 0
}

// 购买返回的物品
type S2CBuyShopItemResult struct {
	ShopId  int32     `protobuf:"varint,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	ItemId  int32     `protobuf:"varint,2,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	ItemNum int32     `protobuf:"varint,3,opt,name=item_num,json=itemNum" json:"item_num,omitempty"`
	AddItem *ItemInfo `protobuf:"bytes,4,opt,name=add_item,json=addItem" json:"add_item,omitempty"`
}

func (m *S2CBuyShopItemResult) Reset()                    { *m = S2CBuyShopItemResult{} }
func (m *S2CBuyShopItemResult) String() string            { return proto.CompactTextString(m) }
func (*S2CBuyShopItemResult) ProtoMessage()               {}
func (*S2CBuyShopItemResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{70} }

func (m *S2CBuyShopItemResult) GetShopId() int32 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

func (m *S2CBuyShopItemResult) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *S2CBuyShopItemResult) GetItemNum() int32 {
	if m != nil {
		return m.ItemNum
	}
	return 0
}

func (m *S2CBuyShopItemResult) GetAddItem() *ItemInfo {
	if m != nil {
		return m.AddItem
	}
	return nil
}

// 通知客户端商店需要刷新
type S2CShopNeedRefreshNotify struct {
}

func (m *S2CShopNeedRefreshNotify) Reset()                    { *m = S2CShopNeedRefreshNotify{} }
func (m *S2CShopNeedRefreshNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CShopNeedRefreshNotify) ProtoMessage()               {}
func (*S2CShopNeedRefreshNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{71} }

// 日常任务数据
type DialyTaskData struct {
	TaskId    int32 `protobuf:"varint,1,opt,name=TaskId" json:"TaskId,omitempty"`
	TaskValue int32 `protobuf:"varint,2,opt,name=TaskValue" json:"TaskValue,omitempty"`
	TaskState int32 `protobuf:"varint,3,opt,name=TaskState" json:"TaskState,omitempty"`
}

func (m *DialyTaskData) Reset()                    { *m = DialyTaskData{} }
func (m *DialyTaskData) String() string            { return proto.CompactTextString(m) }
func (*DialyTaskData) ProtoMessage()               {}
func (*DialyTaskData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{72} }

func (m *DialyTaskData) GetTaskId() int32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *DialyTaskData) GetTaskValue() int32 {
	if m != nil {
		return m.TaskValue
	}
	return 0
}

func (m *DialyTaskData) GetTaskState() int32 {
	if m != nil {
		return m.TaskState
	}
	return 0
}

// 客户端向服务器请求日常任务数据
type C2SGetDialyTaskInfo struct {
}

func (m *C2SGetDialyTaskInfo) Reset()                    { *m = C2SGetDialyTaskInfo{} }
func (m *C2SGetDialyTaskInfo) String() string            { return proto.CompactTextString(m) }
func (*C2SGetDialyTaskInfo) ProtoMessage()               {}
func (*C2SGetDialyTaskInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{73} }

// 服务器向客户端发送任务数据
type S2CSyncDialyTask struct {
	TaskList []*DialyTaskData `protobuf:"bytes,1,rep,name=TaskList" json:"TaskList,omitempty"`
}

func (m *S2CSyncDialyTask) Reset()                    { *m = S2CSyncDialyTask{} }
func (m *S2CSyncDialyTask) String() string            { return proto.CompactTextString(m) }
func (*S2CSyncDialyTask) ProtoMessage()               {}
func (*S2CSyncDialyTask) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{74} }

func (m *S2CSyncDialyTask) GetTaskList() []*DialyTaskData {
	if m != nil {
		return m.TaskList
	}
	return nil
}

// 服务器向客户端通知任务值变化
type S2CNotifyTaskValueChg struct {
	TaskId    int32 `protobuf:"varint,1,opt,name=TaskId" json:"TaskId,omitempty"`
	TaskValue int32 `protobuf:"varint,2,opt,name=TaskValue" json:"TaskValue,omitempty"`
	TaskState int32 `protobuf:"varint,3,opt,name=TaskState" json:"TaskState,omitempty"`
}

func (m *S2CNotifyTaskValueChg) Reset()                    { *m = S2CNotifyTaskValueChg{} }
func (m *S2CNotifyTaskValueChg) String() string            { return proto.CompactTextString(m) }
func (*S2CNotifyTaskValueChg) ProtoMessage()               {}
func (*S2CNotifyTaskValueChg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{75} }

func (m *S2CNotifyTaskValueChg) GetTaskId() int32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *S2CNotifyTaskValueChg) GetTaskValue() int32 {
	if m != nil {
		return m.TaskValue
	}
	return 0
}

func (m *S2CNotifyTaskValueChg) GetTaskState() int32 {
	if m != nil {
		return m.TaskState
	}
	return 0
}

// 成就数据
type AchieveData struct {
	AchieveId    int32 `protobuf:"varint,1,opt,name=AchieveId" json:"AchieveId,omitempty"`
	AchieveValue int32 `protobuf:"varint,2,opt,name=AchieveValue" json:"AchieveValue,omitempty"`
	AchieveState int32 `protobuf:"varint,3,opt,name=AchieveState" json:"AchieveState,omitempty"`
}

func (m *AchieveData) Reset()                    { *m = AchieveData{} }
func (m *AchieveData) String() string            { return proto.CompactTextString(m) }
func (*AchieveData) ProtoMessage()               {}
func (*AchieveData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{76} }

func (m *AchieveData) GetAchieveId() int32 {
	if m != nil {
		return m.AchieveId
	}
	return 0
}

func (m *AchieveData) GetAchieveValue() int32 {
	if m != nil {
		return m.AchieveValue
	}
	return 0
}

func (m *AchieveData) GetAchieveState() int32 {
	if m != nil {
		return m.AchieveState
	}
	return 0
}

// 客户端向服务器请求成就数据
type C2SGetAchieve struct {
}

func (m *C2SGetAchieve) Reset()                    { *m = C2SGetAchieve{} }
func (m *C2SGetAchieve) String() string            { return proto.CompactTextString(m) }
func (*C2SGetAchieve) ProtoMessage()               {}
func (*C2SGetAchieve) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{77} }

// 服务器向客户端发送成就数据
type S2CSyncAchieveData struct {
	AchieveList []*AchieveData `protobuf:"bytes,1,rep,name=AchieveList" json:"AchieveList,omitempty"`
}

func (m *S2CSyncAchieveData) Reset()                    { *m = S2CSyncAchieveData{} }
func (m *S2CSyncAchieveData) String() string            { return proto.CompactTextString(m) }
func (*S2CSyncAchieveData) ProtoMessage()               {}
func (*S2CSyncAchieveData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{78} }

func (m *S2CSyncAchieveData) GetAchieveList() []*AchieveData {
	if m != nil {
		return m.AchieveList
	}
	return nil
}

// 服务器向客户端通知成就值变化
type S2CNotifyAchieveValueChg struct {
	AchieveId    int32 `protobuf:"varint,1,opt,name=AchieveId" json:"AchieveId,omitempty"`
	AchieveValue int32 `protobuf:"varint,2,opt,name=AchieveValue" json:"AchieveValue,omitempty"`
	AchieveState int32 `protobuf:"varint,3,opt,name=AchieveState" json:"AchieveState,omitempty"`
}

func (m *S2CNotifyAchieveValueChg) Reset()                    { *m = S2CNotifyAchieveValueChg{} }
func (m *S2CNotifyAchieveValueChg) String() string            { return proto.CompactTextString(m) }
func (*S2CNotifyAchieveValueChg) ProtoMessage()               {}
func (*S2CNotifyAchieveValueChg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{79} }

func (m *S2CNotifyAchieveValueChg) GetAchieveId() int32 {
	if m != nil {
		return m.AchieveId
	}
	return 0
}

func (m *S2CNotifyAchieveValueChg) GetAchieveValue() int32 {
	if m != nil {
		return m.AchieveValue
	}
	return 0
}

func (m *S2CNotifyAchieveValueChg) GetAchieveState() int32 {
	if m != nil {
		return m.AchieveState
	}
	return 0
}

// 客户端向服务器请求日常任务奖励
type C2SGetTaskReward struct {
	TaskId int32 `protobuf:"varint,1,opt,name=TaskId" json:"TaskId,omitempty"`
}

func (m *C2SGetTaskReward) Reset()                    { *m = C2SGetTaskReward{} }
func (m *C2SGetTaskReward) String() string            { return proto.CompactTextString(m) }
func (*C2SGetTaskReward) ProtoMessage()               {}
func (*C2SGetTaskReward) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{80} }

func (m *C2SGetTaskReward) GetTaskId() int32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

// 服务器向客户端发送任务结果
type S2CRetTaskReward struct {
	TaskId  int32 `protobuf:"varint,1,opt,name=TaskId" json:"TaskId,omitempty"`
	Coin    int32 `protobuf:"varint,2,opt,name=Coin" json:"Coin,omitempty"`
	Diamond int32 `protobuf:"varint,3,opt,name=Diamond" json:"Diamond,omitempty"`
	Exp     int32 `protobuf:"varint,4,opt,name=Exp" json:"Exp,omitempty"`
	CurLvl  int32 `protobuf:"varint,5,opt,name=CurLvl" json:"CurLvl,omitempty"`
}

func (m *S2CRetTaskReward) Reset()                    { *m = S2CRetTaskReward{} }
func (m *S2CRetTaskReward) String() string            { return proto.CompactTextString(m) }
func (*S2CRetTaskReward) ProtoMessage()               {}
func (*S2CRetTaskReward) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{81} }

func (m *S2CRetTaskReward) GetTaskId() int32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *S2CRetTaskReward) GetCoin() int32 {
	if m != nil {
		return m.Coin
	}
	return 0
}

func (m *S2CRetTaskReward) GetDiamond() int32 {
	if m != nil {
		return m.Diamond
	}
	return 0
}

func (m *S2CRetTaskReward) GetExp() int32 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *S2CRetTaskReward) GetCurLvl() int32 {
	if m != nil {
		return m.CurLvl
	}
	return 0
}

// 客户端向服务器请求成就奖励
type C2SGetAchieveReward struct {
	AchieveReward int32 `protobuf:"varint,1,opt,name=AchieveReward" json:"AchieveReward,omitempty"`
}

func (m *C2SGetAchieveReward) Reset()                    { *m = C2SGetAchieveReward{} }
func (m *C2SGetAchieveReward) String() string            { return proto.CompactTextString(m) }
func (*C2SGetAchieveReward) ProtoMessage()               {}
func (*C2SGetAchieveReward) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{82} }

func (m *C2SGetAchieveReward) GetAchieveReward() int32 {
	if m != nil {
		return m.AchieveReward
	}
	return 0
}

// 服务器向客户端完成成就
type S2CRetAchieveReward struct {
	TaskId  int32 `protobuf:"varint,1,opt,name=TaskId" json:"TaskId,omitempty"`
	Coin    int32 `protobuf:"varint,2,opt,name=Coin" json:"Coin,omitempty"`
	Diamond int32 `protobuf:"varint,3,opt,name=Diamond" json:"Diamond,omitempty"`
	Exp     int32 `protobuf:"varint,4,opt,name=Exp" json:"Exp,omitempty"`
	CurLvl  int32 `protobuf:"varint,5,opt,name=CurLvl" json:"CurLvl,omitempty"`
}

func (m *S2CRetAchieveReward) Reset()                    { *m = S2CRetAchieveReward{} }
func (m *S2CRetAchieveReward) String() string            { return proto.CompactTextString(m) }
func (*S2CRetAchieveReward) ProtoMessage()               {}
func (*S2CRetAchieveReward) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{83} }

func (m *S2CRetAchieveReward) GetTaskId() int32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *S2CRetAchieveReward) GetCoin() int32 {
	if m != nil {
		return m.Coin
	}
	return 0
}

func (m *S2CRetAchieveReward) GetDiamond() int32 {
	if m != nil {
		return m.Diamond
	}
	return 0
}

func (m *S2CRetAchieveReward) GetExp() int32 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *S2CRetAchieveReward) GetCurLvl() int32 {
	if m != nil {
		return m.CurLvl
	}
	return 0
}

// ----------------------------------------------------------------------------
// 发送世界聊天消息
type C2SWorldChatSend struct {
	Content []byte `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (m *C2SWorldChatSend) Reset()                    { *m = C2SWorldChatSend{} }
func (m *C2SWorldChatSend) String() string            { return proto.CompactTextString(m) }
func (*C2SWorldChatSend) ProtoMessage()               {}
func (*C2SWorldChatSend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{84} }

func (m *C2SWorldChatSend) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type S2CWorldChatSendResult struct {
	Content []byte `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (m *S2CWorldChatSendResult) Reset()                    { *m = S2CWorldChatSendResult{} }
func (m *S2CWorldChatSendResult) String() string            { return proto.CompactTextString(m) }
func (*S2CWorldChatSendResult) ProtoMessage()               {}
func (*S2CWorldChatSendResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{85} }

func (m *S2CWorldChatSendResult) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

// 拉取世界聊天消息
type C2SWorldChatMsgPull struct {
}

func (m *C2SWorldChatMsgPull) Reset()                    { *m = C2SWorldChatMsgPull{} }
func (m *C2SWorldChatMsgPull) String() string            { return proto.CompactTextString(m) }
func (*C2SWorldChatMsgPull) ProtoMessage()               {}
func (*C2SWorldChatMsgPull) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{86} }

type WorldChatItem struct {
	Content     []byte `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
	PlayerId    int32  `protobuf:"varint,2,opt,name=PlayerId" json:"PlayerId,omitempty"`
	PlayerName  string `protobuf:"bytes,3,opt,name=PlayerName" json:"PlayerName,omitempty"`
	PlayerHead  string `protobuf:"bytes,4,opt,name=PlayerHead" json:"PlayerHead,omitempty"`
	PlayerLevel int32  `protobuf:"varint,5,opt,name=PlayerLevel" json:"PlayerLevel,omitempty"`
	IsZaned     int32  `protobuf:"varint,6,opt,name=IsZaned" json:"IsZaned,omitempty"`
	IsFriend    int32  `protobuf:"varint,7,opt,name=IsFriend" json:"IsFriend,omitempty"`
	SendTime    int32  `protobuf:"varint,8,opt,name=SendTime" json:"SendTime,omitempty"`
}

func (m *WorldChatItem) Reset()                    { *m = WorldChatItem{} }
func (m *WorldChatItem) String() string            { return proto.CompactTextString(m) }
func (*WorldChatItem) ProtoMessage()               {}
func (*WorldChatItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{87} }

func (m *WorldChatItem) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *WorldChatItem) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *WorldChatItem) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *WorldChatItem) GetPlayerHead() string {
	if m != nil {
		return m.PlayerHead
	}
	return ""
}

func (m *WorldChatItem) GetPlayerLevel() int32 {
	if m != nil {
		return m.PlayerLevel
	}
	return 0
}

func (m *WorldChatItem) GetIsZaned() int32 {
	if m != nil {
		return m.IsZaned
	}
	return 0
}

func (m *WorldChatItem) GetIsFriend() int32 {
	if m != nil {
		return m.IsFriend
	}
	return 0
}

func (m *WorldChatItem) GetSendTime() int32 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

type S2CWorldChatMsgPullResult struct {
	Items []*WorldChatItem `protobuf:"bytes,1,rep,name=Items" json:"Items,omitempty"`
}

func (m *S2CWorldChatMsgPullResult) Reset()                    { *m = S2CWorldChatMsgPullResult{} }
func (m *S2CWorldChatMsgPullResult) String() string            { return proto.CompactTextString(m) }
func (*S2CWorldChatMsgPullResult) ProtoMessage()               {}
func (*S2CWorldChatMsgPullResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{88} }

func (m *S2CWorldChatMsgPullResult) GetItems() []*WorldChatItem {
	if m != nil {
		return m.Items
	}
	return nil
}

// 返回世界聊天封禁时间
type S2CWorldChatForbid struct {
	EndTime string `protobuf:"bytes,1,opt,name=EndTime" json:"EndTime,omitempty"`
}

func (m *S2CWorldChatForbid) Reset()                    { *m = S2CWorldChatForbid{} }
func (m *S2CWorldChatForbid) String() string            { return proto.CompactTextString(m) }
func (*S2CWorldChatForbid) ProtoMessage()               {}
func (*S2CWorldChatForbid) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{89} }

func (m *S2CWorldChatForbid) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

// 服务器向客户端同步引导数据
type S2CSyncGuideData struct {
	GuideIds []int32 `protobuf:"varint,1,rep,packed,name=GuideIds" json:"GuideIds,omitempty"`
}

func (m *S2CSyncGuideData) Reset()                    { *m = S2CSyncGuideData{} }
func (m *S2CSyncGuideData) String() string            { return proto.CompactTextString(m) }
func (*S2CSyncGuideData) ProtoMessage()               {}
func (*S2CSyncGuideData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{90} }

func (m *S2CSyncGuideData) GetGuideIds() []int32 {
	if m != nil {
		return m.GuideIds
	}
	return nil
}

// 客户端向服务器存储引导数据
type C2SSaveGuideData struct {
	GuideId int32 `protobuf:"varint,1,opt,name=GuideId" json:"GuideId,omitempty"`
}

func (m *C2SSaveGuideData) Reset()                    { *m = C2SSaveGuideData{} }
func (m *C2SSaveGuideData) String() string            { return proto.CompactTextString(m) }
func (*C2SSaveGuideData) ProtoMessage()               {}
func (*C2SSaveGuideData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{91} }

func (m *C2SSaveGuideData) GetGuideId() int32 {
	if m != nil {
		return m.GuideId
	}
	return 0
}

// 服务器向客户端返回引导存储
type S2CRetSaveGuideData struct {
	GuideId int32 `protobuf:"varint,1,opt,name=GuideId" json:"GuideId,omitempty"`
}

func (m *S2CRetSaveGuideData) Reset()                    { *m = S2CRetSaveGuideData{} }
func (m *S2CRetSaveGuideData) String() string            { return proto.CompactTextString(m) }
func (*S2CRetSaveGuideData) ProtoMessage()               {}
func (*S2CRetSaveGuideData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{92} }

func (m *S2CRetSaveGuideData) GetGuideId() int32 {
	if m != nil {
		return m.GuideId
	}
	return 0
}

func init() {
	proto.RegisterType((*C2S_TEST_COMMAND)(nil), "msg.client_message.C2S_TEST_COMMAND")
	proto.RegisterType((*ItemInfo)(nil), "msg.client_message.ItemInfo")
	proto.RegisterType((*FriendInfo)(nil), "msg.client_message.FriendInfo")
	proto.RegisterType((*PlayerStageInfo)(nil), "msg.client_message.PlayerStageInfo")
	proto.RegisterType((*S2CStagePass)(nil), "msg.client_message.S2CStagePass")
	proto.RegisterType((*C2SLoginRequest)(nil), "msg.client_message.C2SLoginRequest")
	proto.RegisterType((*ServerInfo)(nil), "msg.client_message.ServerInfo")
	proto.RegisterType((*S2CLoginResponse)(nil), "msg.client_message.S2CLoginResponse")
	proto.RegisterType((*S2COtherPlaceLogin)(nil), "msg.client_message.S2COtherPlaceLogin")
	proto.RegisterType((*C2SSelectServerRequest)(nil), "msg.client_message.C2SSelectServerRequest")
	proto.RegisterType((*S2CSelectServerResponse)(nil), "msg.client_message.S2CSelectServerResponse")
	proto.RegisterType((*C2S_MSG_DATA)(nil), "msg.client_message.C2S_MSG_DATA")
	proto.RegisterType((*S2C_MSG_DATA)(nil), "msg.client_message.S2C_MSG_DATA")
	proto.RegisterType((*C2SEnterGameRequest)(nil), "msg.client_message.C2SEnterGameRequest")
	proto.RegisterType((*S2CEnterGameResponse)(nil), "msg.client_message.S2CEnterGameResponse")
	proto.RegisterType((*S2CEnterGameCompleteNotify)(nil), "msg.client_message.S2CEnterGameCompleteNotify")
	proto.RegisterType((*C2SRolesRequest)(nil), "msg.client_message.C2SRolesRequest")
	proto.RegisterType((*AttrData)(nil), "msg.client_message.AttrData")
	proto.RegisterType((*Role)(nil), "msg.client_message.Role")
	proto.RegisterType((*S2CRolesResponse)(nil), "msg.client_message.S2CRolesResponse")
	proto.RegisterType((*S2CRolesChangeNotify)(nil), "msg.client_message.S2CRolesChangeNotify")
	proto.RegisterType((*C2SSetTeamRequest)(nil), "msg.client_message.C2SSetTeamRequest")
	proto.RegisterType((*S2CSetTeamResponse)(nil), "msg.client_message.S2CSetTeamResponse")
	proto.RegisterType((*TeamData)(nil), "msg.client_message.TeamData")
	proto.RegisterType((*S2CTeamsResponse)(nil), "msg.client_message.S2CTeamsResponse")
	proto.RegisterType((*BattleMemberItem)(nil), "msg.client_message.BattleMemberItem")
	proto.RegisterType((*BattleMemberBuff)(nil), "msg.client_message.BattleMemberBuff")
	proto.RegisterType((*BattleReportItem)(nil), "msg.client_message.BattleReportItem")
	proto.RegisterType((*BattleRoundReports)(nil), "msg.client_message.BattleRoundReports")
	proto.RegisterType((*C2SBattleResultRequest)(nil), "msg.client_message.C2SBattleResultRequest")
	proto.RegisterType((*S2CBattleResultResponse)(nil), "msg.client_message.S2CBattleResultResponse")
	proto.RegisterType((*C2SFriendSearch)(nil), "msg.client_message.C2SFriendSearch")
	proto.RegisterType((*C2SFriendSearchById)(nil), "msg.client_message.C2SFriendSearchById")
	proto.RegisterType((*S2CFriendSearchResult)(nil), "msg.client_message.S2CFriendSearchResult")
	proto.RegisterType((*C2SGetFriendList)(nil), "msg.client_message.C2SGetFriendList")
	proto.RegisterType((*FriendReq)(nil), "msg.client_message.FriendReq")
	proto.RegisterType((*S2CRetFriendListResult)(nil), "msg.client_message.S2CRetFriendListResult")
	proto.RegisterType((*S2CFriendStateNotify)(nil), "msg.client_message.S2CFriendStateNotify")
	proto.RegisterType((*S2CFriendReqNotify)(nil), "msg.client_message.S2CFriendReqNotify")
	proto.RegisterType((*C2SAddFriendByPId)(nil), "msg.client_message.C2SAddFriendByPId")
	proto.RegisterType((*C2SAddFriendByName)(nil), "msg.client_message.C2SAddFriendByName")
	proto.RegisterType((*S2CAddFriendResult)(nil), "msg.client_message.S2CAddFriendResult")
	proto.RegisterType((*C2SAgreeFriend)(nil), "msg.client_message.C2SAgreeFriend")
	proto.RegisterType((*S2CAgreeFriendResult)(nil), "msg.client_message.S2CAgreeFriendResult")
	proto.RegisterType((*C2SRefuseFriend)(nil), "msg.client_message.C2SRefuseFriend")
	proto.RegisterType((*S2CRefuseFriendResult)(nil), "msg.client_message.S2CRefuseFriendResult")
	proto.RegisterType((*C2SRemoveFriend)(nil), "msg.client_message.C2SRemoveFriend")
	proto.RegisterType((*S2CRemoveFriendResult)(nil), "msg.client_message.S2CRemoveFriendResult")
	proto.RegisterType((*C2SGiveFriendPoints)(nil), "msg.client_message.C2SGiveFriendPoints")
	proto.RegisterType((*FriendPointsResult)(nil), "msg.client_message.FriendPointsResult")
	proto.RegisterType((*S2CGiveFriendPointsResult)(nil), "msg.client_message.S2CGiveFriendPointsResult")
	proto.RegisterType((*C2SGetFriendPoints)(nil), "msg.client_message.C2SGetFriendPoints")
	proto.RegisterType((*FriendPoints)(nil), "msg.client_message.FriendPoints")
	proto.RegisterType((*S2CGetFriendPointsResult)(nil), "msg.client_message.S2CGetFriendPointsResult")
	proto.RegisterType((*C2SFriendChat)(nil), "msg.client_message.C2SFriendChat")
	proto.RegisterType((*S2CFriendChatResult)(nil), "msg.client_message.S2CFriendChatResult")
	proto.RegisterType((*C2SFriendGetUnreadMessageNum)(nil), "msg.client_message.C2SFriendGetUnreadMessageNum")
	proto.RegisterType((*FriendUnreadMessageNumData)(nil), "msg.client_message.FriendUnreadMessageNumData")
	proto.RegisterType((*S2CFriendGetUnreadMessageNumResult)(nil), "msg.client_message.S2CFriendGetUnreadMessageNumResult")
	proto.RegisterType((*C2SFriendPullUnreadMessage)(nil), "msg.client_message.C2SFriendPullUnreadMessage")
	proto.RegisterType((*FriendChatData)(nil), "msg.client_message.FriendChatData")
	proto.RegisterType((*S2CFriendPullUnreadMessageResult)(nil), "msg.client_message.S2CFriendPullUnreadMessageResult")
	proto.RegisterType((*C2SFriendConfirmUnreadMessage)(nil), "msg.client_message.C2SFriendConfirmUnreadMessage")
	proto.RegisterType((*S2CFriendConfirmUnreadMessageResult)(nil), "msg.client_message.S2CFriendConfirmUnreadMessageResult")
	proto.RegisterType((*C2SGetOnlineFriends)(nil), "msg.client_message.C2SGetOnlineFriends")
	proto.RegisterType((*S2CRetOnlineFriends)(nil), "msg.client_message.S2CRetOnlineFriends")
	proto.RegisterType((*C2SShopItems)(nil), "msg.client_message.C2SShopItems")
	proto.RegisterType((*S2CShopItem)(nil), "msg.client_message.S2CShopItem")
	proto.RegisterType((*S2CShopItemsResult)(nil), "msg.client_message.S2CShopItemsResult")
	proto.RegisterType((*C2SBuyShopItem)(nil), "msg.client_message.C2SBuyShopItem")
	proto.RegisterType((*S2CBuyShopItemResult)(nil), "msg.client_message.S2CBuyShopItemResult")
	proto.RegisterType((*S2CShopNeedRefreshNotify)(nil), "msg.client_message.S2CShopNeedRefreshNotify")
	proto.RegisterType((*DialyTaskData)(nil), "msg.client_message.DialyTaskData")
	proto.RegisterType((*C2SGetDialyTaskInfo)(nil), "msg.client_message.C2SGetDialyTaskInfo")
	proto.RegisterType((*S2CSyncDialyTask)(nil), "msg.client_message.S2CSyncDialyTask")
	proto.RegisterType((*S2CNotifyTaskValueChg)(nil), "msg.client_message.S2CNotifyTaskValueChg")
	proto.RegisterType((*AchieveData)(nil), "msg.client_message.AchieveData")
	proto.RegisterType((*C2SGetAchieve)(nil), "msg.client_message.C2SGetAchieve")
	proto.RegisterType((*S2CSyncAchieveData)(nil), "msg.client_message.S2CSyncAchieveData")
	proto.RegisterType((*S2CNotifyAchieveValueChg)(nil), "msg.client_message.S2CNotifyAchieveValueChg")
	proto.RegisterType((*C2SGetTaskReward)(nil), "msg.client_message.C2SGetTaskReward")
	proto.RegisterType((*S2CRetTaskReward)(nil), "msg.client_message.S2CRetTaskReward")
	proto.RegisterType((*C2SGetAchieveReward)(nil), "msg.client_message.C2SGetAchieveReward")
	proto.RegisterType((*S2CRetAchieveReward)(nil), "msg.client_message.S2CRetAchieveReward")
	proto.RegisterType((*C2SWorldChatSend)(nil), "msg.client_message.C2SWorldChatSend")
	proto.RegisterType((*S2CWorldChatSendResult)(nil), "msg.client_message.S2CWorldChatSendResult")
	proto.RegisterType((*C2SWorldChatMsgPull)(nil), "msg.client_message.C2SWorldChatMsgPull")
	proto.RegisterType((*WorldChatItem)(nil), "msg.client_message.WorldChatItem")
	proto.RegisterType((*S2CWorldChatMsgPullResult)(nil), "msg.client_message.S2CWorldChatMsgPullResult")
	proto.RegisterType((*S2CWorldChatForbid)(nil), "msg.client_message.S2CWorldChatForbid")
	proto.RegisterType((*S2CSyncGuideData)(nil), "msg.client_message.S2CSyncGuideData")
	proto.RegisterType((*C2SSaveGuideData)(nil), "msg.client_message.C2SSaveGuideData")
	proto.RegisterType((*S2CRetSaveGuideData)(nil), "msg.client_message.S2CRetSaveGuideData")
	proto.RegisterEnum("msg.client_message.E_ERR", E_ERR_name, E_ERR_value)
}

func init() { proto.RegisterFile("client_message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 3704 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x5a, 0xcb, 0x73, 0x1c, 0xc7,
	0x79, 0xcf, 0x02, 0x58, 0x62, 0xf1, 0x91, 0x04, 0x47, 0x23, 0x90, 0x5a, 0x81, 0x10, 0x05, 0x35,
	0x69, 0x09, 0x91, 0x28, 0x50, 0x86, 0x2a, 0x36, 0xab, 0x62, 0xab, 0x34, 0x98, 0x1d, 0xec, 0x6e,
	0x71, 0x5f, 0xea, 0x19, 0x00, 0x82, 0xa2, 0xaa, 0xa9, 0xe1, 0x4e, 0x03, 0xd8, 0xe2, 0xee, 0x0c,
	0x38, 0x33, 0x80, 0x85, 0x9b, 0x2b, 0x55, 0xc9, 0x3d, 0x39, 0xc4, 0x4e, 0x2c, 0x3f, 0xfe, 0x87,
	0x5c, 0x5c, 0x49, 0x9c, 0xf8, 0x94, 0x43, 0x72, 0xcb, 0x29, 0xa9, 0xbc, 0x98, 0x97, 0x73, 0xca,
	0x25, 0xb9, 0x48, 0x89, 0x1f, 0xa9, 0x7e, 0x4d, 0xf7, 0x2c, 0x76, 0x01, 0xd0, 0x2e, 0x9b, 0x17,
	0xce, 0xf7, 0xf5, 0xef, 0xfb, 0xfa, 0x7b, 0xf5, 0xd7, 0x8f, 0x05, 0x2c, 0xf5, 0x87, 0x03, 0x12,
	0x65, 0xfe, 0x88, 0xa4, 0x69, 0x70, 0x40, 0xd6, 0x8f, 0x92, 0x38, 0x8b, 0x4d, 0x73, 0x94, 0x1e,
	0xac, 0x17, 0x47, 0xd0, 0x43, 0x30, 0xec, 0x0d, 0xd7, 0xf7, 0x1c, 0xd7, 0xf3, 0xed, 0x6e, 0xbb,
	0x6d, 0x75, 0x6a, 0xa6, 0x01, 0xb3, 0xfd, 0x51, 0x58, 0x2d, 0xad, 0x96, 0xd6, 0x16, 0x30, 0xfd,
	0x34, 0x4d, 0x98, 0x0b, 0x92, 0x83, 0xb4, 0x3a, 0xb3, 0x3a, 0xbb, 0xb6, 0x80, 0xd9, 0x37, 0x3a,
	0x84, 0x4a, 0x33, 0x23, 0xa3, 0x66, 0xb4, 0x1f, 0x9b, 0x2b, 0xb0, 0x40, 0xbf, 0xed, 0xfd, 0x83,
	0x26, 0x97, 0x2b, 0x63, 0xc5, 0x30, 0xab, 0x30, 0x4f, 0x89, 0xce, 0xf1, 0xa8, 0x3a, 0xc3, 0xc6,
	0x24, 0x69, 0xde, 0x83, 0xeb, 0x98, 0x8c, 0x82, 0x41, 0xe4, 0x92, 0x7e, 0x1c, 0x85, 0x69, 0x75,
	0x96, 0x8d, 0x17, 0x99, 0xe8, 0x4f, 0x66, 0x01, 0xb6, 0x92, 0x01, 0x89, 0x42, 0x36, 0xd9, 0x32,
	0x54, 0x7a, 0xc3, 0xe0, 0x94, 0x24, 0xf9, 0x5c, 0x39, 0x4d, 0x0d, 0xed, 0x04, 0x23, 0xc2, 0xe6,
	0x59, 0xc0, 0xec, 0x9b, 0xf2, 0x1a, 0x24, 0x08, 0x99, 0xee, 0x05, 0xcc, 0xbe, 0xcd, 0x25, 0x28,
	0xb7, 0xc8, 0x09, 0x19, 0x56, 0xe7, 0x98, 0x02, 0x4e, 0x50, 0xcd, 0x3b, 0x83, 0x23, 0x3e, 0x50,
	0xe6, 0x9a, 0x25, 0x4d, 0x5d, 0x6c, 0x05, 0x69, 0xd6, 0x8a, 0x0f, 0x06, 0x51, 0xf5, 0x0a, 0x77,
	0x31, 0x67, 0x98, 0x08, 0xae, 0x71, 0x0b, 0x7b, 0xf1, 0x20, 0xca, 0xd2, 0xea, 0x3c, 0x03, 0x14,
	0x78, 0xe6, 0x1a, 0xdc, 0x68, 0x91, 0xfd, 0xac, 0x3e, 0x38, 0x21, 0xd2, 0xdd, 0x0a, 0x83, 0x8d,
	0xb3, 0xcd, 0x37, 0xc1, 0xd8, 0x8e, 0x12, 0x12, 0x84, 0x6d, 0x9e, 0x25, 0x1a, 0xb9, 0x05, 0x06,
	0x3d, 0xc3, 0xa7, 0xc9, 0xfa, 0x28, 0x88, 0xaa, 0xc0, 0x86, 0xe9, 0xa7, 0x79, 0x07, 0xa0, 0x99,
	0x7e, 0x14, 0x44, 0x5e, 0x1c, 0x06, 0xa7, 0xd5, 0xab, 0xab, 0xa5, 0xb5, 0x0a, 0xd6, 0x38, 0xd4,
	0xcb, 0x66, 0xda, 0x8d, 0x86, 0x83, 0x88, 0x54, 0xaf, 0xb1, 0xd1, 0x9c, 0x36, 0x5f, 0x87, 0xc5,
	0xad, 0x38, 0xcd, 0x48, 0x42, 0x42, 0x3b, 0xc8, 0xe8, 0xbc, 0x8b, 0x4c, 0xf1, 0x18, 0x97, 0xfa,
	0x62, 0x07, 0x11, 0x67, 0x0a, 0xe0, 0x0d, 0xee, 0xcb, 0x18, 0x1b, 0x7d, 0xbb, 0x04, 0x37, 0x78,
	0x7a, 0xdc, 0x2c, 0x38, 0x20, 0x17, 0x66, 0x70, 0x09, 0xca, 0x6e, 0x3f, 0x4e, 0x88, 0x28, 0x15,
	0x4e, 0xe4, 0x79, 0x9d, 0xd5, 0xf2, 0x6a, 0xc0, 0x6c, 0xeb, 0x44, 0x66, 0x90, 0x7e, 0x52, 0x54,
	0xb3, 0x1f, 0x47, 0x2c, 0x77, 0x0b, 0x98, 0x7d, 0xd3, 0x68, 0xd8, 0xc7, 0x69, 0x16, 0x8f, 0xd8,
	0xc8, 0x15, 0x36, 0xa2, 0x71, 0xd0, 0xdf, 0xcc, 0xc1, 0x35, 0x77, 0xc3, 0x66, 0xc6, 0xf5, 0x82,
	0x34, 0xa5, 0xd5, 0xca, 0x2d, 0x95, 0xb6, 0x49, 0x92, 0x99, 0x96, 0x05, 0x49, 0x9a, 0x9b, 0x46,
	0x09, 0x65, 0xf0, 0xac, 0x6e, 0xf0, 0x32, 0x54, 0xbc, 0xf8, 0x88, 0x0f, 0x70, 0x0b, 0x73, 0xda,
	0x7c, 0x08, 0x95, 0xed, 0x94, 0xd0, 0x35, 0x90, 0x56, 0xcb, 0xab, 0xb3, 0x6b, 0x57, 0x37, 0x56,
	0xd6, 0xcf, 0x2e, 0xcd, 0x75, 0xb9, 0xba, 0x70, 0x8e, 0xa6, 0xb6, 0xd5, 0x49, 0x66, 0xc7, 0x79,
	0x09, 0x4a, 0x92, 0xea, 0xac, 0x93, 0x6c, 0xc0, 0x74, 0xce, 0x5f, 0x46, 0xa7, 0x44, 0x9b, 0x16,
	0x2c, 0xe0, 0x20, 0x7a, 0xc2, 0xcd, 0xa9, 0x30, 0xd1, 0xbb, 0x93, 0x44, 0xc7, 0x92, 0x88, 0x95,
	0x94, 0xe9, 0xc0, 0x55, 0xb1, 0x3e, 0x99, 0x92, 0x85, 0xcb, 0x2b, 0xd1, 0xe5, 0xcc, 0x5b, 0x70,
	0x05, 0x93, 0xf4, 0x78, 0x98, 0xb1, 0xb2, 0x2c, 0x63, 0x41, 0x99, 0x9b, 0x70, 0x5d, 0x5a, 0xbb,
	0x35, 0x48, 0xd2, 0xac, 0x7a, 0xfd, 0x12, 0x0e, 0x16, 0x45, 0x74, 0x1d, 0xef, 0xd2, 0xbc, 0x55,
	0x17, 0x9f, 0x47, 0x07, 0x13, 0xe1, 0x45, 0x9f, 0x39, 0x9f, 0x64, 0x49, 0x60, 0x85, 0x21, 0xcb,
	0x42, 0x5e, 0xf4, 0x05, 0x36, 0xda, 0x83, 0x1b, 0xf6, 0x86, 0xcb, 0x5a, 0x03, 0x26, 0x4f, 0x8f,
	0x49, 0x9a, 0xd1, 0x6a, 0xb5, 0xfa, 0x7d, 0xd9, 0x54, 0xad, 0x7e, 0x9f, 0xad, 0x82, 0x20, 0x4d,
	0xbf, 0x16, 0x27, 0xa1, 0xe8, 0x57, 0x39, 0x4d, 0x13, 0x6d, 0x1f, 0x06, 0x51, 0x44, 0x86, 0xa2,
	0xe4, 0x25, 0x89, 0xde, 0x07, 0x70, 0x49, 0x72, 0x42, 0x12, 0xb6, 0x92, 0x16, 0x61, 0x26, 0xaf,
	0xd3, 0x99, 0x29, 0xfd, 0x8f, 0x62, 0x7a, 0x42, 0xcd, 0x4c, 0xb3, 0x87, 0x32, 0x30, 0xdc, 0x0d,
	0x5b, 0x18, 0x97, 0x1e, 0xc5, 0x51, 0x4a, 0x26, 0x58, 0xb7, 0x04, 0x65, 0x2f, 0x7e, 0x42, 0x22,
	0xa1, 0x8a, 0x13, 0xe6, 0x43, 0x98, 0xe7, 0xb3, 0xd3, 0x56, 0x4d, 0x03, 0x78, 0x67, 0x52, 0x00,
	0x95, 0x81, 0x58, 0xc2, 0xd1, 0x12, 0x98, 0xee, 0x86, 0xdd, 0xcd, 0x0e, 0x49, 0xd2, 0x1b, 0x06,
	0x7d, 0xc2, 0xe6, 0x47, 0x1f, 0xc3, 0x2d, 0x7b, 0xc3, 0x75, 0xc9, 0x90, 0xf4, 0x33, 0x8e, 0x9c,
	0x1e, 0xaf, 0xc9, 0x16, 0x2d, 0x43, 0x45, 0x4c, 0x17, 0x8a, 0x15, 0x98, 0xd3, 0xe8, 0x03, 0x78,
	0x89, 0x2e, 0xed, 0x82, 0xf6, 0xe7, 0x74, 0x78, 0x3c, 0x78, 0x11, 0x5c, 0xa3, 0xfb, 0x65, 0xdb,
	0xad, 0xfb, 0x35, 0xcb, 0xb3, 0x2e, 0x6a, 0x65, 0x13, 0x34, 0x56, 0x61, 0xbe, 0x9d, 0x1e, 0xd8,
	0x71, 0x28, 0x3b, 0x86, 0x24, 0x69, 0xf2, 0x6a, 0x41, 0x16, 0xb0, 0x7e, 0x71, 0x0d, 0xb3, 0x6f,
	0xf4, 0x31, 0xeb, 0x4e, 0x6a, 0xbe, 0x15, 0x58, 0x70, 0x92, 0x24, 0x4e, 0x98, 0xbc, 0xd8, 0x69,
	0x73, 0x06, 0xb5, 0x86, 0x11, 0xed, 0xf4, 0x40, 0x96, 0x94, 0xa4, 0x73, 0xed, 0xb3, 0x9a, 0xf6,
	0xaf, 0xc2, 0x8b, 0xf6, 0x86, 0xeb, 0x44, 0x19, 0x49, 0xea, 0xc1, 0x88, 0x3c, 0x67, 0xec, 0x51,
	0x0d, 0x96, 0xdc, 0x0d, 0x5b, 0x13, 0x9f, 0x1a, 0x5c, 0x3d, 0x4c, 0x33, 0xc5, 0x30, 0xa1, 0x15,
	0x58, 0xd6, 0xb5, 0xd8, 0xf1, 0xe8, 0x68, 0x48, 0x32, 0xd2, 0x89, 0xb3, 0xc1, 0xfe, 0x29, 0x7a,
	0x81, 0x2d, 0x25, 0x1c, 0x0f, 0x49, 0x2a, 0xcc, 0x43, 0x0f, 0xa1, 0x62, 0x65, 0x59, 0x42, 0x3d,
	0xa0, 0x3d, 0x83, 0x7e, 0xe7, 0xd1, 0x17, 0x14, 0x35, 0x78, 0x27, 0x18, 0x1e, 0xe7, 0xdb, 0x08,
	0x23, 0xd0, 0x11, 0xcc, 0x51, 0x4d, 0x67, 0x96, 0x4d, 0x15, 0xe6, 0xbd, 0xe0, 0xf1, 0x90, 0xe4,
	0xd6, 0x49, 0x92, 0x46, 0x8d, 0xf6, 0x39, 0x91, 0x2a, 0xf6, 0x3d, 0xe5, 0xf0, 0xb0, 0x04, 0x65,
	0x3a, 0x37, 0x6f, 0xe9, 0x65, 0xcc, 0x09, 0xb4, 0xc9, 0x16, 0x9b, 0x30, 0x5f, 0x84, 0x67, 0x1d,
	0xca, 0x8c, 0x51, 0x2d, 0xb1, 0x25, 0x54, 0x9d, 0xb4, 0x84, 0x28, 0x00, 0x73, 0x18, 0xfa, 0xfd,
	0x12, 0x8b, 0x33, 0x23, 0x68, 0x1b, 0x38, 0x10, 0xb1, 0x31, 0xef, 0xc3, 0x9c, 0x15, 0x86, 0x17,
	0xeb, 0x61, 0x28, 0xea, 0x24, 0x26, 0xa3, 0xf8, 0x84, 0xf0, 0x73, 0x5c, 0x19, 0x4b, 0xd2, 0xdc,
	0x80, 0xf9, 0xed, 0xa3, 0x30, 0xc8, 0x88, 0x5c, 0xd5, 0xd3, 0x55, 0x49, 0x20, 0xfa, 0x00, 0x5e,
	0x60, 0x2b, 0x37, 0xf3, 0x48, 0x30, 0x92, 0x85, 0x43, 0x77, 0x3d, 0x12, 0x8c, 0xbc, 0xd3, 0x23,
	0x59, 0x9c, 0x39, 0x6d, 0xae, 0xc2, 0x55, 0xfa, 0xdd, 0x26, 0xa3, 0xc7, 0x24, 0x91, 0x26, 0xe8,
	0x2c, 0x84, 0x59, 0x8b, 0xc8, 0x55, 0x8a, 0x68, 0xfd, 0x62, 0x3a, 0x1b, 0x5c, 0x9a, 0xd5, 0xca,
	0x2f, 0xa6, 0x69, 0x8b, 0x65, 0x92, 0x72, 0x54, 0x26, 0x37, 0xa0, 0xcc, 0x18, 0x22, 0x03, 0x13,
	0x77, 0x13, 0x39, 0x3d, 0xe6, 0x50, 0xf4, 0xfd, 0x12, 0x18, 0x9b, 0x41, 0x96, 0x0d, 0x09, 0xd7,
	0x4c, 0x77, 0x9b, 0x33, 0x05, 0x69, 0xc0, 0x6c, 0x2f, 0x96, 0x07, 0x0d, 0xfa, 0x49, 0x11, 0x8d,
	0x9e, 0x28, 0xc3, 0x99, 0x46, 0x8f, 0x96, 0x5b, 0x3b, 0xf8, 0xa4, 0xd1, 0x93, 0x45, 0xc8, 0x08,
	0xba, 0x1c, 0x6a, 0xc1, 0x28, 0x38, 0x20, 0xe2, 0xfc, 0x2a, 0x28, 0xca, 0x77, 0x22, 0x92, 0x1c,
	0x9c, 0x8a, 0x73, 0x83, 0xa0, 0xf4, 0xc2, 0x9f, 0x3f, 0x53, 0xf8, 0xee, 0x20, 0x24, 0xe2, 0x88,
	0xca, 0xbe, 0xd1, 0x7e, 0xd1, 0xf2, 0xcd, 0xe3, 0xfd, 0xfd, 0x1c, 0x57, 0x52, 0x38, 0x66, 0x1b,
	0x19, 0xe5, 0x8b, 0x89, 0x13, 0xd2, 0xa7, 0x59, 0xe5, 0xd3, 0x2d, 0xb8, 0x42, 0x75, 0x34, 0x43,
	0xe1, 0x84, 0xa0, 0xd0, 0xf7, 0x67, 0xe5, 0x44, 0x98, 0x1c, 0xc5, 0x49, 0xc6, 0x42, 0x34, 0x69,
	0x22, 0x7a, 0x56, 0x7b, 0x32, 0x18, 0x0e, 0xd5, 0xba, 0x15, 0xa4, 0xf9, 0x10, 0xe6, 0xb6, 0x53,
	0x92, 0xb0, 0xd9, 0xae, 0x6e, 0xdc, 0x9b, 0x94, 0x98, 0xf1, 0x24, 0x60, 0x26, 0x61, 0xbe, 0x0f,
	0x95, 0x4d, 0xd2, 0x18, 0x64, 0xb4, 0x0c, 0xe6, 0x58, 0x5a, 0x2f, 0x27, 0x9d, 0x4b, 0x51, 0x0d,
	0x56, 0x18, 0x52, 0x5f, 0xe4, 0xf9, 0xee, 0x42, 0x0d, 0x14, 0x8c, 0x73, 0x29, 0x73, 0x0b, 0xae,
	0xf2, 0xb5, 0xc9, 0x95, 0x5c, 0x79, 0x0e, 0x25, 0xba, 0x20, 0xbf, 0x0a, 0xd8, 0xc9, 0x20, 0x1b,
	0xf4, 0x83, 0x21, 0xcb, 0x30, 0xbb, 0x0a, 0x48, 0x0e, 0xbb, 0x99, 0xa5, 0x9b, 0xc3, 0xb8, 0xff,
	0x84, 0xe5, 0xb9, 0x82, 0x25, 0xc9, 0x2f, 0x09, 0xee, 0xf1, 0x68, 0x14, 0x47, 0xec, 0xea, 0xc1,
	0x2e, 0x09, 0x9c, 0xa6, 0x63, 0x8d, 0x20, 0xb5, 0xe3, 0xd1, 0xe3, 0x98, 0xdd, 0x3b, 0x2a, 0x38,
	0xa7, 0xd1, 0xef, 0xce, 0x80, 0x29, 0x52, 0x17, 0x1f, 0x47, 0x21, 0xcf, 0x5f, 0x4a, 0x45, 0x18,
	0x4d, 0x2f, 0x0a, 0x62, 0xe9, 0x49, 0xda, 0x7c, 0x8f, 0xf6, 0x25, 0x06, 0x63, 0xcb, 0xee, 0x5c,
	0x47, 0x55, 0x3d, 0x60, 0x29, 0x34, 0x1e, 0xac, 0xd9, 0x9f, 0x37, 0x58, 0x2d, 0x58, 0xe4, 0xdd,
	0x35, 0x94, 0x5d, 0xe0, 0x79, 0xd2, 0x3f, 0x26, 0x8b, 0x42, 0x76, 0xb2, 0x91, 0x56, 0xd3, 0x73,
	0xac, 0x6c, 0x92, 0xf7, 0xe0, 0xba, 0x95, 0x65, 0x41, 0xff, 0x89, 0x9c, 0xa6, 0xc4, 0x9a, 0x4d,
	0x91, 0x49, 0x51, 0x5b, 0x83, 0x83, 0xc3, 0x6c, 0x6c, 0xdb, 0x2c, 0x32, 0xd1, 0x0f, 0x66, 0xd8,
	0x11, 0xa7, 0x38, 0x8d, 0x68, 0x4e, 0x4b, 0x50, 0x6e, 0xa6, 0xbb, 0x83, 0x88, 0x05, 0xbc, 0x82,
	0x39, 0x61, 0x7e, 0x05, 0xae, 0xb4, 0x4f, 0x69, 0x27, 0xba, 0x38, 0xd8, 0x9a, 0x77, 0x42, 0xc6,
	0xac, 0x01, 0x78, 0x41, 0x72, 0xc0, 0x5b, 0xf4, 0x65, 0x43, 0xcd, 0x34, 0x68, 0x72, 0x66, 0x03,
	0xae, 0xb1, 0xed, 0x5e, 0xa6, 0x7d, 0xee, 0x39, 0xd2, 0x5e, 0x90, 0x34, 0xdf, 0x83, 0x2b, 0xac,
	0x8e, 0xe4, 0x42, 0x7b, 0xfd, 0x1c, 0x1d, 0x5a, 0x3d, 0x62, 0x21, 0x85, 0xee, 0xb2, 0xd3, 0x05,
	0xbf, 0x84, 0xb8, 0x24, 0x48, 0xfa, 0x87, 0xb4, 0x4d, 0x3d, 0x22, 0xa7, 0xf2, 0xf0, 0xf2, 0x88,
	0x9c, 0xa2, 0x2f, 0xb2, 0x53, 0x92, 0x0e, 0xda, 0x3c, 0x6d, 0x86, 0xe7, 0x1d, 0xfd, 0x50, 0x17,
	0x6e, 0xba, 0x1b, 0xb6, 0x2e, 0x22, 0xee, 0x32, 0x5f, 0xca, 0xef, 0x38, 0xa5, 0xe9, 0xe7, 0x67,
	0xf5, 0xd8, 0x21, 0xef, 0x40, 0xe8, 0x1d, 0xf6, 0x4e, 0x53, 0x27, 0x19, 0x1f, 0x6b, 0x0d, 0xd2,
	0x8c, 0x9e, 0x05, 0x1b, 0x41, 0xca, 0x6f, 0xdb, 0x22, 0xc9, 0x8a, 0x81, 0x08, 0x2c, 0x70, 0x2c,
	0x26, 0x4f, 0x9f, 0xfb, 0xcd, 0x64, 0xf2, 0xa5, 0x56, 0xbe, 0xa4, 0xcc, 0xa9, 0x97, 0x14, 0xf4,
	0x77, 0x25, 0xb8, 0x45, 0x0f, 0x27, 0xba, 0x65, 0xc2, 0xd7, 0x3b, 0xf2, 0xd9, 0x46, 0xdb, 0x71,
	0x35, 0x8e, 0xf9, 0x9e, 0x1c, 0xa7, 0x32, 0xa2, 0x1c, 0x2f, 0x8a, 0x87, 0x26, 0x61, 0x7e, 0x11,
	0xe6, 0x30, 0x79, 0x2a, 0x57, 0xfc, 0x2b, 0xd3, 0x25, 0x31, 0x79, 0x8a, 0x19, 0xd4, 0xbc, 0x0f,
	0x2f, 0xc8, 0xc7, 0x16, 0xfe, 0x2a, 0x43, 0x1b, 0x12, 0xdf, 0x7c, 0xce, 0x0e, 0xa0, 0x43, 0x76,
	0xee, 0x12, 0x59, 0xcc, 0x02, 0x79, 0x26, 0xa5, 0x81, 0x67, 0xa4, 0xe6, 0x97, 0x62, 0x98, 0x1b,
	0x30, 0x47, 0x4d, 0x65, 0xf1, 0xbc, 0xd8, 0x21, 0x86, 0x45, 0x0e, 0x3b, 0xfa, 0xe4, 0xd6, 0x8a,
	0x79, 0x1e, 0xc0, 0x2c, 0x26, 0x4f, 0xd9, 0x0c, 0x17, 0xfa, 0x47, 0x91, 0xe8, 0x01, 0x3b, 0x94,
	0x59, 0x61, 0xc8, 0xf9, 0x9b, 0xa7, 0xbd, 0x0b, 0xea, 0x74, 0x0d, 0xcc, 0xa2, 0x80, 0x7c, 0x31,
	0x63, 0x15, 0x51, 0x52, 0x15, 0x81, 0xde, 0x61, 0x16, 0xe6, 0x48, 0x91, 0xe2, 0xf3, 0x74, 0xdf,
	0x87, 0x45, 0xaa, 0xfb, 0x20, 0x21, 0x84, 0xcb, 0x9c, 0x8b, 0xfe, 0x21, 0x3f, 0xe4, 0x6a, 0xf0,
	0x8b, 0xa7, 0x78, 0x8e, 0xd2, 0x9d, 0x7c, 0x66, 0x97, 0x05, 0x5d, 0xd6, 0x9e, 0x06, 0xf5, 0x47,
	0xc0, 0x2b, 0xe7, 0x3d, 0x02, 0xce, 0x8f, 0x3d, 0x02, 0xa2, 0xb7, 0xf9, 0x55, 0x85, 0xec, 0x1f,
	0xa7, 0x97, 0xf1, 0xb8, 0xce, 0x7a, 0x84, 0x0e, 0x17, 0x1e, 0x4f, 0x08, 0xff, 0xb9, 0x17, 0x28,
	0x39, 0x2f, 0xdd, 0xca, 0x2e, 0x31, 0xef, 0xbb, 0x62, 0x5e, 0x05, 0xbf, 0x44, 0x32, 0x79, 0x0f,
	0xa4, 0xcb, 0xa3, 0xf0, 0xa6, 0xb9, 0x0c, 0x15, 0x51, 0xcb, 0xa1, 0xd8, 0xc6, 0x72, 0x1a, 0xfd,
	0x65, 0x09, 0x4c, 0x1d, 0xac, 0x66, 0xd1, 0x44, 0x4a, 0xba, 0x08, 0x3d, 0x10, 0x8a, 0x07, 0x54,
	0xee, 0xa3, 0xa0, 0x68, 0xf6, 0xd8, 0x3d, 0x56, 0xe6, 0x94, 0x11, 0x67, 0x5f, 0x8f, 0xe7, 0x26,
	0xbc, 0x1e, 0xd3, 0x93, 0x7d, 0x33, 0x65, 0x2f, 0x9f, 0xd4, 0x7a, 0x96, 0xea, 0x0a, 0xd6, 0x59,
	0xb4, 0x4f, 0x6d, 0x06, 0xfd, 0x27, 0x62, 0x66, 0x9e, 0x73, 0x8d, 0x83, 0x7e, 0xaf, 0x04, 0x2f,
	0xbb, 0x1b, 0xf6, 0xb8, 0xf3, 0xc2, 0x9f, 0x2d, 0x00, 0x4e, 0xb3, 0xdb, 0x75, 0x69, 0xfa, 0x36,
	0x74, 0x56, 0x16, 0x6b, 0x92, 0x93, 0x5b, 0xd3, 0xcc, 0xb4, 0xd6, 0xf4, 0x0e, 0x5b, 0xb8, 0xf9,
	0x7e, 0x70, 0x89, 0x74, 0x6c, 0x16, 0x9f, 0xa8, 0x7f, 0x9e, 0x3c, 0xa0, 0x8f, 0xa1, 0x4a, 0x03,
	0x51, 0x9c, 0x55, 0xc4, 0xe1, 0xfd, 0x09, 0x71, 0x58, 0xbd, 0x30, 0x0e, 0x9a, 0x0c, 0x72, 0xe0,
	0x7a, 0xbe, 0xcf, 0xda, 0x87, 0xc1, 0xf9, 0x4b, 0xbf, 0x0a, 0xf3, 0x76, 0x1c, 0x65, 0x24, 0xca,
	0x98, 0x8d, 0xd7, 0xb0, 0x24, 0xd1, 0x23, 0x78, 0x31, 0xef, 0xa5, 0x54, 0xcd, 0x25, 0xfa, 0xc8,
	0x74, 0x65, 0x5f, 0x81, 0x95, 0xdc, 0xa6, 0x3a, 0xc9, 0xce, 0x3c, 0xbf, 0xaf, 0xc8, 0x5d, 0xb6,
	0x19, 0xca, 0x83, 0x9c, 0x62, 0xa0, 0x0f, 0x61, 0x99, 0x13, 0xe3, 0x72, 0xf2, 0x3e, 0x3a, 0x35,
	0x03, 0x77, 0x00, 0xb4, 0xc7, 0x7f, 0x9e, 0x05, 0x8d, 0x83, 0x0e, 0x01, 0xe5, 0x4e, 0x4e, 0xb0,
	0x2b, 0x7f, 0x39, 0x9d, 0xd3, 0xb2, 0xb1, 0x3e, 0x3d, 0x1b, 0x93, 0xec, 0x13, 0x6f, 0x44, 0x0f,
	0x61, 0x39, 0x8f, 0x40, 0xef, 0x78, 0x38, 0x2c, 0x40, 0xcf, 0xf3, 0x01, 0x6d, 0xc1, 0xa2, 0xca,
	0x02, 0xf3, 0x58, 0x8b, 0x73, 0xa9, 0x10, 0x67, 0xfe, 0x8c, 0x17, 0x85, 0xde, 0x60, 0x24, 0x9f,
	0x6c, 0x72, 0x1a, 0x9d, 0xc0, 0x6a, 0xee, 0xeb, 0x19, 0x0b, 0x2e, 0xd1, 0x55, 0xbe, 0x24, 0xa2,
	0xc0, 0x4f, 0x18, 0x68, 0x7a, 0x14, 0xa4, 0x9d, 0xc2, 0xf3, 0xdf, 0x82, 0x57, 0x54, 0x3d, 0xc6,
	0xd1, 0xfe, 0x20, 0x19, 0x5d, 0xda, 0xf9, 0x0b, 0x13, 0x18, 0xc0, 0x5d, 0x55, 0xa5, 0x13, 0x94,
	0x5f, 0xc2, 0xaf, 0x8b, 0xa6, 0x78, 0x83, 0xf7, 0x6c, 0x92, 0xf1, 0x1f, 0x77, 0xb8, 0x5c, 0xaa,
	0x1f, 0x70, 0xcb, 0xfc, 0x80, 0xeb, 0xb0, 0x15, 0x83, 0xc7, 0x81, 0x2b, 0xb0, 0x20, 0x57, 0x48,
	0x5e, 0xdb, 0x39, 0x43, 0xaa, 0x99, 0x51, 0x6a, 0xde, 0x60, 0x6f, 0xa3, 0xee, 0x61, 0x7c, 0xc4,
	0xdf, 0xf3, 0x5f, 0x82, 0xf9, 0xf4, 0x30, 0x3e, 0xf2, 0x07, 0xf9, 0xe3, 0x1c, 0x25, 0x9b, 0x21,
	0x3a, 0x84, 0xab, 0xee, 0x86, 0x2d, 0x81, 0x14, 0x37, 0xc8, 0xc8, 0x48, 0xc3, 0x51, 0xb2, 0x19,
	0x9a, 0x2f, 0x43, 0x65, 0x48, 0xf6, 0x33, 0x3f, 0x52, 0xbf, 0x1c, 0x52, 0x9a, 0xae, 0xbb, 0x2f,
	0xc0, 0x62, 0xc2, 0xda, 0xbc, 0x9f, 0x16, 0x7f, 0x3a, 0x4c, 0x0a, 0x3f, 0x1d, 0x86, 0xfc, 0x49,
	0x49, 0x9a, 0x24, 0x82, 0x3a, 0xcd, 0x30, 0xf3, 0x37, 0xa0, 0xcc, 0x7f, 0x42, 0xe1, 0xa5, 0xf2,
	0xea, 0xc4, 0xc7, 0x6d, 0xa5, 0x0f, 0x73, 0x34, 0xaa, 0xb1, 0x93, 0xce, 0xe6, 0xf1, 0xe9, 0xa5,
	0x5c, 0x62, 0x03, 0x9a, 0x4b, 0x03, 0xfe, 0x63, 0x28, 0xfa, 0x94, 0x9f, 0x80, 0x34, 0x35, 0x17,
	0x99, 0xab, 0xcd, 0x32, 0x33, 0x75, 0x96, 0xd9, 0xc2, 0x2c, 0xe6, 0x97, 0xa1, 0x12, 0x84, 0xa1,
	0x4f, 0x49, 0xb6, 0x5f, 0x5e, 0xf4, 0x1b, 0xc8, 0x7c, 0x10, 0xb2, 0x9f, 0x67, 0xd0, 0x32, 0xeb,
	0xfd, 0xd4, 0xb4, 0x0e, 0x21, 0x21, 0x26, 0xfb, 0x09, 0x49, 0x0f, 0xc5, 0x23, 0x6d, 0x1f, 0xae,
	0xd7, 0x06, 0xc1, 0xf0, 0xd4, 0x0b, 0xd2, 0x27, 0xf2, 0x59, 0x96, 0x7e, 0xab, 0x67, 0x59, 0x4e,
	0xd1, 0x92, 0xa2, 0x5f, 0xfa, 0xd3, 0xac, 0x62, 0xc8, 0x51, 0x76, 0x94, 0x16, 0x76, 0x2b, 0x06,
	0xba, 0x29, 0xcb, 0x39, 0x9f, 0x8a, 0x1d, 0x9d, 0x3f, 0x60, 0xef, 0x72, 0xee, 0x69, 0xd4, 0xcf,
	0xf9, 0xe6, 0x57, 0xa1, 0x42, 0xff, 0x67, 0xf7, 0x0a, 0xde, 0xfb, 0x5e, 0x9b, 0xe4, 0x64, 0xc1,
	0x66, 0x9c, 0x8b, 0xa0, 0x27, 0xec, 0x84, 0xc4, 0x7d, 0xcb, 0xad, 0xb3, 0x0f, 0x0f, 0x7e, 0x29,
	0x6e, 0xa5, 0x70, 0xd5, 0xea, 0x1f, 0x0e, 0xc8, 0x09, 0x61, 0x91, 0x5b, 0x81, 0x05, 0x41, 0xaa,
	0x9f, 0xd2, 0x73, 0x86, 0x89, 0xe0, 0x9a, 0x20, 0xf4, 0xb9, 0x0a, 0x3c, 0x0d, 0xa3, 0xcf, 0x58,
	0xe0, 0xa1, 0x1b, 0x6c, 0xab, 0xad, 0x93, 0x4c, 0x70, 0xd1, 0x2e, 0x5f, 0x28, 0xa7, 0x51, 0x5f,
	0x37, 0xc6, 0xca, 0x6d, 0xd3, 0x42, 0x39, 0x71, 0x55, 0x68, 0x52, 0x58, 0x97, 0x41, 0x5f, 0x2f,
	0xb1, 0xba, 0xe1, 0xc1, 0xd4, 0xed, 0xa4, 0xf1, 0xfc, 0xd5, 0x38, 0xfb, 0xa6, 0xbc, 0x3b, 0xd3,
	0xa0, 0x63, 0xf2, 0xb5, 0x20, 0x09, 0xa7, 0x65, 0x12, 0xfd, 0x76, 0x89, 0x3f, 0xd8, 0x5f, 0x06,
	0x4c, 0x0f, 0xea, 0xec, 0x57, 0x40, 0x6e, 0x18, 0xfb, 0xa6, 0x5b, 0x5c, 0x6d, 0x10, 0x8c, 0xe2,
	0x48, 0xfe, 0x1c, 0x25, 0x49, 0xda, 0x30, 0x9d, 0x4f, 0x8e, 0xe4, 0xef, 0xd5, 0xce, 0x27, 0x47,
	0x54, 0xaf, 0x7d, 0x9c, 0xb4, 0x4e, 0xe4, 0x5f, 0x1b, 0x08, 0x0a, 0xfd, 0xa6, 0xac, 0x74, 0xe1,
	0x86, 0x30, 0xe3, 0x1e, 0x5c, 0x2f, 0x30, 0x84, 0x35, 0x45, 0x26, 0xfa, 0x9d, 0x92, 0xec, 0xe6,
	0x45, 0xe9, 0x5f, 0xb5, 0x13, 0xf7, 0x59, 0xd4, 0x77, 0xe3, 0x64, 0xc8, 0xf6, 0x55, 0xba, 0x9b,
	0x4f, 0xdf, 0xff, 0xd1, 0x06, 0x7b, 0x45, 0x28, 0xa0, 0x45, 0xf7, 0x9b, 0x2e, 0xc3, 0x1b, 0x42,
	0x2e, 0xd3, 0x4e, 0x0f, 0xe8, 0xe9, 0x00, 0x7d, 0x5e, 0x82, 0xeb, 0x39, 0x93, 0x75, 0xe3, 0x73,
	0x8f, 0x1d, 0xd3, 0xae, 0x55, 0x74, 0x7b, 0xe5, 0xdf, 0xda, 0x5f, 0x1e, 0x68, 0x1c, 0x35, 0xae,
	0xbd, 0x89, 0x68, 0x1c, 0x7a, 0xf1, 0xe0, 0x94, 0xfe, 0x07, 0x25, 0x3a, 0x8b, 0x3f, 0xbf, 0x7e,
	0x14, 0x44, 0x24, 0x94, 0x3f, 0xe7, 0x0b, 0x92, 0x3f, 0xbf, 0xf2, 0x7d, 0x58, 0xdc, 0x33, 0x73,
	0xba, 0x70, 0x54, 0xaa, 0x8c, 0x1d, 0x95, 0x3c, 0x76, 0x53, 0x19, 0x0f, 0x89, 0x88, 0xe4, 0x97,
	0xa1, 0xcc, 0x7f, 0xa0, 0x3f, 0xa7, 0x25, 0x16, 0x02, 0x87, 0x39, 0x1e, 0xad, 0xb3, 0xe6, 0x90,
	0x0f, 0x6d, 0xc5, 0xc9, 0xe3, 0x01, 0x4b, 0xa6, 0x23, 0xcc, 0xe0, 0x37, 0x55, 0x49, 0xa2, 0xf5,
	0xbc, 0x25, 0xd7, 0x8f, 0x07, 0x21, 0x91, 0x87, 0x5d, 0x46, 0xa8, 0xb3, 0x44, 0x4e, 0x8b, 0x52,
	0x71, 0x83, 0x13, 0xa2, 0xf0, 0x55, 0x98, 0x17, 0xe3, 0xf2, 0xcf, 0x30, 0x04, 0x89, 0x1e, 0xc8,
	0xfa, 0xbe, 0xa4, 0xc0, 0x9b, 0x7f, 0x7c, 0x03, 0xca, 0x8e, 0xef, 0x60, 0x6c, 0x56, 0x60, 0xae,
	0xd3, 0xed, 0x38, 0xc6, 0xaf, 0x99, 0x37, 0xa1, 0xd2, 0xec, 0x78, 0x0e, 0xee, 0x58, 0x2d, 0xe3,
	0x67, 0xf2, 0x5f, 0xc9, 0xfc, 0x75, 0x58, 0xe9, 0xb5, 0xac, 0x3d, 0x07, 0xfb, 0x96, 0x6d, 0xfb,
	0x5d, 0xec, 0xf7, 0x2c, 0xd7, 0xdd, 0xed, 0xe2, 0x1a, 0x15, 0xef, 0x62, 0xe3, 0xa7, 0x0a, 0xfa,
	0x0a, 0x18, 0x02, 0xda, 0xe9, 0x7a, 0xbe, 0xf3, 0x61, 0xd3, 0xf5, 0x8c, 0x9f, 0xa8, 0xe1, 0xbb,
	0x70, 0x4b, 0x6a, 0x6a, 0x61, 0xc7, 0xaa, 0xed, 0xf9, 0xad, 0x6e, 0xbd, 0xd9, 0x71, 0x6a, 0xc6,
	0x8f, 0x15, 0xe8, 0x0b, 0x50, 0x15, 0xa0, 0xae, 0xd7, 0x70, 0xb0, 0xdf, 0x6b, 0x59, 0xb6, 0xc3,
	0x81, 0xc6, 0xff, 0x29, 0xd8, 0xab, 0x60, 0x0a, 0x98, 0xd7, 0x7d, 0xe4, 0x74, 0x84, 0x2d, 0xff,
	0xab, 0x00, 0x6f, 0xc1, 0x1d, 0x01, 0x70, 0x9d, 0x96, 0x63, 0x7b, 0xbe, 0xeb, 0xe0, 0x1d, 0x61,
	0xd9, 0x56, 0x77, 0xbb, 0x53, 0x33, 0x3e, 0x9f, 0x04, 0x96, 0x96, 0x71, 0x21, 0xa7, 0x26, 0xc4,
	0x8c, 0xcf, 0x14, 0xf8, 0x6d, 0x58, 0xcd, 0x35, 0x7b, 0xbe, 0xe5, 0x79, 0x96, 0xfd, 0xc8, 0x6f,
	0x3b, 0xed, 0x4d, 0x07, 0xbb, 0xfe, 0x96, 0xd5, 0x6c, 0x39, 0x35, 0xe3, 0x9b, 0x9f, 0xe5, 0xf0,
	0x75, 0x78, 0x4d, 0x83, 0xd7, 0x9c, 0x2d, 0xa7, 0xe3, 0x3a, 0xe3, 0xf8, 0x6f, 0x7c, 0x36, 0x21,
	0x00, 0xd2, 0x96, 0x8f, 0xac, 0x8e, 0xef, 0x75, 0x6b, 0xd6, 0x9e, 0xf1, 0xec, 0xbf, 0x3f, 0x97,
	0xb0, 0x07, 0x80, 0x04, 0x0c, 0x3b, 0x1d, 0xab, 0xed, 0xf8, 0x1d, 0x67, 0xd7, 0xb7, 0xad, 0x8e,
	0xe7, 0xbb, 0x94, 0xf2, 0xba, 0x7e, 0xb7, 0x55, 0x33, 0xfe, 0x59, 0x09, 0xa8, 0x3c, 0x8e, 0x0b,
	0x38, 0xed, 0x9e, 0xb7, 0x67, 0xfc, 0x93, 0x82, 0xde, 0x87, 0x57, 0x8b, 0x50, 0xec, 0xb4, 0xbb,
	0x3b, 0x0e, 0xd5, 0x28, 0x0d, 0xfe, 0x47, 0x85, 0x5e, 0x83, 0xdb, 0x45, 0xb4, 0xd7, 0xed, 0xfa,
	0xad, 0x6e, 0xa7, 0xee, 0x53, 0xca, 0xf8, 0x07, 0x85, 0x54, 0x91, 0x93, 0x26, 0xd0, 0x32, 0xe9,
	0x74, 0xb7, 0xeb, 0x0d, 0xbf, 0xd6, 0xb4, 0xda, 0xdd, 0x4e, 0xcd, 0xf8, 0x7b, 0x05, 0xbf, 0x07,
	0x2f, 0xd9, 0x0d, 0x0b, 0xd7, 0x1d, 0xbf, 0x8b, 0x6b, 0x0e, 0x66, 0xbf, 0xf6, 0x0b, 0x63, 0x7f,
	0xf8, 0x1f, 0xff, 0x23, 0x51, 0xaf, 0xc3, 0xcb, 0x67, 0x51, 0xcd, 0xce, 0x8e, 0xd5, 0x6a, 0xd6,
	0x8c, 0xbf, 0x50, 0xb8, 0xb7, 0xe0, 0x4e, 0x01, 0xe7, 0x36, 0xeb, 0x1d, 0xcb, 0xdb, 0xc6, 0x4e,
	0x0e, 0xfe, 0x73, 0x05, 0x46, 0x70, 0xb3, 0x08, 0xee, 0x88, 0x89, 0x7f, 0xa0, 0x30, 0x6b, 0x70,
	0x7b, 0x1c, 0x43, 0x33, 0x56, 0xdb, 0xf3, 0xb7, 0x5d, 0xa7, 0x66, 0xfc, 0x99, 0x42, 0xbe, 0x01,
	0xcb, 0x05, 0xe4, 0x8e, 0x83, 0x9b, 0x5b, 0x7b, 0x32, 0x94, 0x7f, 0xaa, 0x80, 0x77, 0xe1, 0xd6,
	0x16, 0x6e, 0x3a, 0x9d, 0x9a, 0xdf, 0x76, 0x5c, 0xd7, 0xaa, 0x3b, 0x7e, 0x67, 0xbb, 0xed, 0xb7,
	0xad, 0x0f, 0x8d, 0xef, 0xfd, 0xed, 0x7f, 0x69, 0x05, 0x22, 0x40, 0x9d, 0xae, 0xbf, 0xdd, 0xa1,
	0x35, 0x22, 0xe1, 0xc6, 0x77, 0x15, 0xec, 0x6d, 0x58, 0x15, 0x30, 0xaf, 0xe1, 0xf8, 0x63, 0x25,
	0xc5, 0x47, 0x8c, 0xef, 0x28, 0xf8, 0x1a, 0xdc, 0x3e, 0x0b, 0xc7, 0xce, 0x07, 0xdb, 0x8e, 0xeb,
	0x39, 0x35, 0xe3, 0xdb, 0x93, 0x90, 0xa2, 0x2c, 0x04, 0x25, 0xdc, 0xf9, 0x54, 0x21, 0xdf, 0x84,
	0x57, 0xc4, 0x58, 0xbd, 0xb9, 0xe3, 0xf8, 0xbd, 0x6e, 0xb3, 0xe3, 0xb9, 0xfe, 0x16, 0xd3, 0xda,
	0xf1, 0x5a, 0x7b, 0xc6, 0xb7, 0x14, 0xf6, 0x01, 0x20, 0x39, 0x7f, 0xb7, 0xeb, 0xb7, 0xad, 0x8e,
	0x34, 0x52, 0x97, 0x35, 0xfe, 0x68, 0x92, 0x7f, 0xba, 0xf2, 0xb6, 0xf5, 0x21, 0x8b, 0x59, 0xab,
	0xd9, 0x6e, 0x7a, 0xc6, 0x1f, 0x2a, 0xf8, 0x6b, 0xb0, 0xa4, 0xa2, 0x46, 0x5d, 0x14, 0x21, 0xf8,
	0xa6, 0x82, 0xdc, 0x83, 0x97, 0xc6, 0xa2, 0x2f, 0x2b, 0xd9, 0xf8, 0x86, 0x42, 0xbd, 0x0a, 0xa6,
	0x40, 0xd9, 0x0d, 0xcb, 0x93, 0x5e, 0xff, 0x81, 0x02, 0xdc, 0x86, 0x45, 0xb7, 0xd1, 0xed, 0x69,
	0x9d, 0xe6, 0xeb, 0x7f, 0xfd, 0x9f, 0x5a, 0x61, 0xb1, 0xc1, 0xde, 0x36, 0xb6, 0x1b, 0x96, 0xeb,
	0xe4, 0x61, 0xfb, 0xd9, 0x5f, 0xe5, 0x98, 0x55, 0x78, 0x91, 0x61, 0x9a, 0x9e, 0xd3, 0xd6, 0xb4,
	0xfc, 0x54, 0x21, 0x5e, 0x87, 0x97, 0x19, 0x82, 0x79, 0xe9, 0xd4, 0x7c, 0x6f, 0xaf, 0xa7, 0xca,
	0xf8, 0x27, 0x0a, 0xf7, 0x1a, 0x2c, 0x15, 0x35, 0xf1, 0xc5, 0x66, 0xfc, 0x58, 0x41, 0x6e, 0xc3,
	0xa2, 0x67, 0xb9, 0x8f, 0xb4, 0x79, 0xbe, 0xf7, 0xa3, 0x7c, 0x05, 0xde, 0x81, 0x17, 0xf2, 0x41,
	0xbb, 0xdb, 0xee, 0xb5, 0x1c, 0xcf, 0x31, 0xbe, 0xab, 0xc6, 0x57, 0xe0, 0x46, 0x3e, 0x8e, 0x9d,
	0x5d, 0x0b, 0xd7, 0x8c, 0xef, 0xa8, 0x51, 0x04, 0x37, 0xd9, 0xa8, 0x2c, 0x3a, 0x8e, 0xa0, 0xc5,
	0x74, 0x16, 0xd3, 0x72, 0x76, 0x9c, 0x96, 0x6e, 0xe2, 0xa7, 0x0a, 0x73, 0x17, 0x6e, 0x31, 0x4c,
	0x0f, 0x3b, 0x3b, 0x45, 0x53, 0xbe, 0xf5, 0x23, 0xbd, 0x67, 0xed, 0x76, 0x71, 0xab, 0xc6, 0x92,
	0xe2, 0xb2, 0x24, 0xba, 0x75, 0xdf, 0xee, 0x76, 0x5b, 0xcd, 0x4e, 0xdd, 0xaf, 0x75, 0x77, 0x3b,
	0xc6, 0xbf, 0x3f, 0xfb, 0x5c, 0x6b, 0xca, 0x13, 0xd0, 0x9b, 0x7b, 0x9e, 0xe3, 0xaa, 0xa4, 0xff,
	0xdb, 0x33, 0xbd, 0x73, 0x29, 0x3c, 0xef, 0xb2, 0x54, 0x68, 0xb7, 0xe9, 0x35, 0x68, 0x3d, 0x6d,
	0x61, 0xc7, 0x31, 0xfe, 0xf5, 0x99, 0xde, 0x12, 0x15, 0xbc, 0xb7, 0xdd, 0x6a, 0x15, 0x0d, 0xf9,
	0x17, 0x85, 0x7c, 0x0b, 0xee, 0x4c, 0x32, 0xc4, 0xf1, 0xb7, 0xba, 0x78, 0xb3, 0x59, 0x73, 0x3a,
	0xc6, 0xb3, 0x1c, 0xfc, 0xf8, 0x0a, 0xfb, 0xa3, 0xe5, 0x77, 0xff, 0x3f, 0x00, 0x00, 0xff, 0xff,
	0x9d, 0xcc, 0x9a, 0xd5, 0xcc, 0x2c, 0x00, 0x00,
}
