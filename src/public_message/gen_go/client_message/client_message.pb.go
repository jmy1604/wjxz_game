// Code generated by protoc-gen-go. DO NOT EDIT.
// source: client_message.proto

/*
Package msg_client_message is a generated protocol buffer package.

It is generated from these files:
	client_message.proto

It has these top-level messages:
	S2CStateNotify
	C2SHeartbeat
	C2SDataSyncRequest
	C2S_TEST_COMMAND
	ItemInfo
	FriendInfo
	C2SLoginRequest
	ServerInfo
	S2CLoginResponse
	S2COtherPlaceLogin
	C2SSelectServerRequest
	S2CSelectServerResponse
	C2S_MSG_DATA
	S2C_MSG_DATA
	C2SEnterGameRequest
	S2CEnterGameResponse
	S2CEnterGameCompleteNotify
	C2SLeaveGameRequest
	S2CLeaveGameResponse
	S2CPlayerInfoResponse
	C2SRolesRequest
	AttrData
	Role
	S2CRolesResponse
	S2CRolesChangeNotify
	C2SSetTeamRequest
	S2CSetTeamResponse
	TeamData
	S2CTeamsResponse
	BattleMemberItem
	BattleFighter
	BattleMemberBuff
	BattleReportItem
	BattleRoundReports
	C2SBattleResultRequest
	S2CBattleResultResponse
	C2SBattleRecordListRequest
	BattleRecordData
	S2CBattleRecordListResponse
	C2SBattleRecordRequest
	S2CBattleRecordResponse
	C2SBattleRecordDeleteRequest
	S2CBattleRecordDeleteResponse
	C2SCampaignDataRequest
	S2CCampaignDataResponse
	C2SCampaignHangupIncomeRequest
	S2CCampaignHangupIncomeResponse
	C2SBattleSetHangupCampaignRequest
	S2CBattleSetHangupCampaignResponse
	C2SItemsSyncRequest
	S2CItemsSync
	S2CItemsUpdate
	C2SItemFusionRequest
	S2CItemFusionResponse
	C2SItemSellRequest
	S2CItemSellResponse
	C2SRoleLevelUpRequest
	S2CRoleLevelUpResponse
	C2SRoleRankUpRequest
	S2CRoleRankUpResponse
	C2SRoleDecomposeRequest
	S2CRoleDecomposeResponse
	C2SRoleFusionRequest
	S2CRoleFusionResponse
	C2SMailSendRequest
	S2CMailSendResponse
	C2SMailListRequest
	MailBasicData
	S2CMailListResponse
	C2SMailDetailRequest
	MailDetail
	S2CMailDetailResponse
	C2SMailGetAttachedItemsRequest
	S2CMailGetAttachedItemsResponse
	C2SMailDeleteRequest
	S2CMailDeleteResponse
	C2STalentUpRequest
	S2CTalentUpResponse
	C2STalentListRequest
	TalentInfo
	S2CTalentListResponse
	C2STowerDataRequest
	S2CTowerDataResponse
	C2STowerRecordsInfoRequest
	TowerFightRecord
	S2CTowerRecordsInfoResponse
	C2STowerRecordDataRequest
	S2CTowerRecordDataResponse
	C2STowerRankingListRequest
	TowerRankInfo
	S2CTowerRankingListResponse
	C2SFriendSearch
	C2SFriendSearchById
	S2CFriendSearchResult
	C2SGetFriendList
	FriendReq
	S2CRetFriendListResult
	S2CFriendStateNotify
	S2CFriendReqNotify
	C2SAddFriendByPId
	C2SAddFriendByName
	S2CAddFriendResult
	C2SAgreeFriend
	S2CAgreeFriendResult
	C2SRefuseFriend
	S2CRefuseFriendResult
	C2SRemoveFriend
	S2CRemoveFriendResult
	C2SGiveFriendPoints
	FriendPointsResult
	S2CGiveFriendPointsResult
	C2SGetFriendPoints
	FriendPoints
	S2CGetFriendPointsResult
	C2SFriendChat
	S2CFriendChatResult
	C2SFriendGetUnreadMessageNum
	FriendUnreadMessageNumData
	S2CFriendGetUnreadMessageNumResult
	C2SFriendPullUnreadMessage
	FriendChatData
	S2CFriendPullUnreadMessageResult
	C2SFriendConfirmUnreadMessage
	S2CFriendConfirmUnreadMessageResult
	C2SGetOnlineFriends
	S2CRetOnlineFriends
	C2SShopItems
	S2CShopItem
	S2CShopItemsResult
	C2SBuyShopItem
	S2CBuyShopItemResult
	S2CShopNeedRefreshNotify
	DialyTaskData
	C2SGetDialyTaskInfo
	S2CSyncDialyTask
	S2CNotifyTaskValueChg
	AchieveData
	C2SGetAchieve
	S2CSyncAchieveData
	S2CNotifyAchieveValueChg
	C2SGetTaskReward
	S2CRetTaskReward
	C2SGetAchieveReward
	S2CRetAchieveReward
	C2SWorldChatSend
	S2CWorldChatSendResult
	C2SWorldChatMsgPull
	WorldChatItem
	S2CWorldChatMsgPullResult
	S2CWorldChatForbid
	S2CSyncGuideData
	C2SSaveGuideData
	S2CRetSaveGuideData
*/
package msg_client_message

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type E_ERR int32

const (
	E_ERR_NONE                           E_ERR = 0
	E_ERR_INTERNAL                       E_ERR = -1
	E_ERR_PLAYER_ACC_OR_PASSWORD_ERROR   E_ERR = -2
	E_ERR_PLAYER_NOT_EXIST               E_ERR = -3
	E_ERR_PLAYER_ALREADY_LOGINED         E_ERR = -4
	E_ERR_PLAYER_OTHER_PLACE_LOGIN       E_ERR = -5
	E_ERR_PLAYER_TOKEN_ERROR             E_ERR = -6
	E_ERR_PLAYER_SELECT_SERVER_NOT_FOUND E_ERR = -7
	E_ERR_PLAYER_ALREADY_SELECTED_SERVER E_ERR = -8
	E_ERR_PLAYER_IS_OFFLINE              E_ERR = -9
	// 战斗
	E_ERR_PLAYER_SET_ATTACK_MEMBERS_FAILED      E_ERR = -10000
	E_ERR_PLAYER_SET_DEFENSE_MEMBERS_FAILED     E_ERR = -10001
	E_ERR_PLAYER_IS_DEFENSING                   E_ERR = -10002
	E_ERR_PLAYER_BATTLE_RECORD_NOT_FOUND        E_ERR = -10003
	E_ERR_PLAYER_BATTLE_RECORD_FORBIDDEN_DELETE E_ERR = -10004
	E_ERR_PLAYER_BATTLE_RECORD_DATA_INVALID     E_ERR = -10005
	// 物品装备
	E_ERR_PLAYER_ITEM_NOT_FOUND                  E_ERR = -11000
	E_ERR_PLAYER_ITEM_TABLE_ID_NOT_FOUND         E_ERR = -11001
	E_ERR_PLAYER_ITEM_NUM_NOT_ENOUGH             E_ERR = -11002
	E_ERR_PLAYER_ITEM_TYPE_NOT_MATCH             E_ERR = -11003
	E_ERR_PLAYER_EQUIP_SLOT_EMPTY                E_ERR = -11004
	E_ERR_PLAYER_EQUIP_TYPE_INVALID              E_ERR = -11005
	E_ERR_PLAYER_ITEM_FUSION_FAILED              E_ERR = -11006
	E_ERR_PLAYER_ITEM_COUNT_NOT_ENOUGH_TO_FUSION E_ERR = -11007
	// 角色
	E_ERR_PLAYER_ROLE_NOT_FOUND                   E_ERR = -12000
	E_ERR_PLAYER_ROLE_TABLE_ID_NOT_FOUND          E_ERR = -12001
	E_ERR_PLAYER_ROLE_LEVEL_DATA_NOT_FOUND        E_ERR = -12002
	E_ERR_PLAYER_ROLE_LEVEL_IS_MAX                E_ERR = -12003
	E_ERR_PLAYER_ROLE_RANK_IS_MAX                 E_ERR = -12004
	E_ERR_PLAYER_ROLE_RANKUP_DATA_NOT_FOUND       E_ERR = -12005
	E_ERR_PLAYER_ROLE_IN_TEAM_CANT_DECOMPOSE      E_ERR = -12006
	E_ERR_PLAYER_ROLE_FUSION_FAILED               E_ERR = -12007
	E_ERR_PLAYER_FUSION_NEED_ROLE_NOT_FOUND       E_ERR = -12008
	E_ERR_PLAYER_FUSION_ROLE_INVALID              E_ERR = -12009
	E_ERR_PLAYER_FUSION_ROLE_TABLE_DATA_NOT_FOUND E_ERR = -12010
	E_ERR_PLAYER_FUSION_MAIN_ROLE_NOT_FOUND       E_ERR = -12011
	E_ERR_PLAYER_FUSION_ROLE_MATERIAL_NOT_ENOUGH  E_ERR = -12012
	E_ERR_PLAYER_FUSION_MAIN_CARD_INVALID         E_ERR = -12013
	// 关卡
	E_ERR_PLAYER_ALREADY_FIGHT_CAMPAIGN        E_ERR = -13001
	E_ERR_PLAYER_CAMPAIGN_MUST_PlAY_NEXT       E_ERR = -13002
	E_ERR_PLAYER_NOT_FOUND_CAMPAIGN_TABLE_DATA E_ERR = -13003
	E_ERR_PLAYER_CANT_FIGHT_THE_CAMPAIGN       E_ERR = -13004
	// 邮件
	E_ERR_PLAYER_MAIL_OVER_MAX_COUNT     E_ERR = -14000
	E_ERR_PLAYER_MAIL_NOT_FOUND          E_ERR = -14001
	E_ERR_PLAYER_MAIL_NO_ATTACHED_ITEM   E_ERR = -14002
	E_ERR_PLAYER_MAIL_SEND_FAILED        E_ERR = -14003
	E_ERR_PLAYER_MAIL_RECEIVER_NOT_FOUND E_ERR = -14004
	E_ERR_PLAYER_MAIL_TRIBE_IS_COOLDOWN  E_ERR = -14005
	// 天赋
	E_ERR_PLAYER_TALENT_NOT_FOUND              E_ERR = -15000
	E_ERR_PLAYER_TALENT_LEVEL_IS_MAX           E_ERR = -15001
	E_ERR_PLAYER_TALENT_UP_NOT_ENOUGH_RESOURCE E_ERR = -15002
	// 爬塔
	E_ERR_PLAYER_TOWER_ALREADY_FIGHTED        E_ERR = -16000
	E_ERR_PLAYER_TOWER_NOT_FOUND              E_ERR = -16001
	E_ERR_PLAYER_TOWER_NOT_ENOUGH_STAMINA     E_ERR = -16002
	E_ERR_PLAYER_TOWER_FIGHT_RECORD_NOT_FOUND E_ERR = -16003
	E_ERR_PLAYER_TOWER_ALREADY_HIGHEST        E_ERR = -16004
	E_ERR_PLAYER_TOWER_CANT_FIGHT             E_ERR = -16005
	// 玩家
	E_ERR_CHARGE_ORDER_DATA_EMPTY            E_ERR = -200000
	E_ERR_CHARGE_ORDER_DATA_INVALID          E_ERR = -200001
	E_ERR_CHARGE_ORDER_SIGNATURE_INVALID     E_ERR = -200002
	E_ERR_CHARGE_ORDER_SN_EMPTY              E_ERR = -200003
	E_ERR_CHARGE_ORDER_SN_ALREDY_USED        E_ERR = -200004
	E_ERR_CHARGE_ORDER_VERIFY_FAILED         E_ERR = -200005
	E_ERR_FRIEND_MESSAGE_NUM_MAX             E_ERR = -300000
	E_ERR_FRIEND_NO_UNREAD_MESSAGE           E_ERR = -300001
	E_ERR_FRIEND_THE_PLAYER_ALREADY_FRIEND   E_ERR = -300002
	E_ERR_FRIEND_THE_PLAYER_REQUESTED        E_ERR = -300003
	E_ERR_FRIEND_REMOVE_FRIEND_FAILED        E_ERR = -300004
	E_ERR_FRIEND_GIVE_POINTS_FREQUENTLY      E_ERR = -300005
	E_ERR_FRIEND_TOO_MANY_FRIEND_GIVE_POINTS E_ERR = -300006
	E_ERR_FRIEND_GIVE_POINTS_MAX_NUM_LIMIT   E_ERR = -300007
	E_ERR_FRIEND_NO_THE_FRIEND               E_ERR = -300008
	E_ERR_FRIEND_MESSAGE_TOO_LONG            E_ERR = -300009
	E_ERR_FRIEND_CHAT_FAILED                 E_ERR = -300010
	E_ERR_SHOP_NOT_FOUND                     E_ERR = -400000
	E_ERR_SHOP_PURCHASED_FAILED              E_ERR = -400001
	E_ERR_SHOP_ITEM_NOT_FOUND                E_ERR = -400002
	E_ERR_SHOP_LIMITED_TYPE_INVALID          E_ERR = -400003
	E_ERR_SHOP_ITEM_NOT_ENOUGH               E_ERR = -400004
	// 任务错误码
	E_ERR_TASK_NOT_FOUND         E_ERR = -101600
	E_ERR_TASK_NOT_COMPLETE      E_ERR = -101601
	E_ERR_TASK_NOT_REWARD        E_ERR = -101602
	E_ERR_TASK_ALREADY_REWARDED  E_ERR = -101603
	E_ERR_TASK_LEVEL_NOT_ENOUGH  E_ERR = -101604
	E_ERR_TASK_PREV_NOT_COMPLETE E_ERR = -101605
	// 世界聊天
	E_ERR_WORLDCHAT_SEND_MSG_COOLING_DOWN   E_ERR = -102300
	E_ERR_WORLDCHAT_SEND_MSG_BYTES_TOO_LONG E_ERR = -102301
	E_ERR_WORLDCHAT_CANT_SEND_WITH_NO_FREE  E_ERR = -102302
	E_ERR_WORLDCHAT_PULL_COOLING_DOWN       E_ERR = -102303
	E_ERR_WORLDCHAT_SEND_MSG_BE_FORBIDEN    E_ERR = -102304
)

var E_ERR_name = map[int32]string{
	0:       "NONE",
	-1:      "INTERNAL",
	-2:      "PLAYER_ACC_OR_PASSWORD_ERROR",
	-3:      "PLAYER_NOT_EXIST",
	-4:      "PLAYER_ALREADY_LOGINED",
	-5:      "PLAYER_OTHER_PLACE_LOGIN",
	-6:      "PLAYER_TOKEN_ERROR",
	-7:      "PLAYER_SELECT_SERVER_NOT_FOUND",
	-8:      "PLAYER_ALREADY_SELECTED_SERVER",
	-9:      "PLAYER_IS_OFFLINE",
	-10000:  "PLAYER_SET_ATTACK_MEMBERS_FAILED",
	-10001:  "PLAYER_SET_DEFENSE_MEMBERS_FAILED",
	-10002:  "PLAYER_IS_DEFENSING",
	-10003:  "PLAYER_BATTLE_RECORD_NOT_FOUND",
	-10004:  "PLAYER_BATTLE_RECORD_FORBIDDEN_DELETE",
	-10005:  "PLAYER_BATTLE_RECORD_DATA_INVALID",
	-11000:  "PLAYER_ITEM_NOT_FOUND",
	-11001:  "PLAYER_ITEM_TABLE_ID_NOT_FOUND",
	-11002:  "PLAYER_ITEM_NUM_NOT_ENOUGH",
	-11003:  "PLAYER_ITEM_TYPE_NOT_MATCH",
	-11004:  "PLAYER_EQUIP_SLOT_EMPTY",
	-11005:  "PLAYER_EQUIP_TYPE_INVALID",
	-11006:  "PLAYER_ITEM_FUSION_FAILED",
	-11007:  "PLAYER_ITEM_COUNT_NOT_ENOUGH_TO_FUSION",
	-12000:  "PLAYER_ROLE_NOT_FOUND",
	-12001:  "PLAYER_ROLE_TABLE_ID_NOT_FOUND",
	-12002:  "PLAYER_ROLE_LEVEL_DATA_NOT_FOUND",
	-12003:  "PLAYER_ROLE_LEVEL_IS_MAX",
	-12004:  "PLAYER_ROLE_RANK_IS_MAX",
	-12005:  "PLAYER_ROLE_RANKUP_DATA_NOT_FOUND",
	-12006:  "PLAYER_ROLE_IN_TEAM_CANT_DECOMPOSE",
	-12007:  "PLAYER_ROLE_FUSION_FAILED",
	-12008:  "PLAYER_FUSION_NEED_ROLE_NOT_FOUND",
	-12009:  "PLAYER_FUSION_ROLE_INVALID",
	-12010:  "PLAYER_FUSION_ROLE_TABLE_DATA_NOT_FOUND",
	-12011:  "PLAYER_FUSION_MAIN_ROLE_NOT_FOUND",
	-12012:  "PLAYER_FUSION_ROLE_MATERIAL_NOT_ENOUGH",
	-12013:  "PLAYER_FUSION_MAIN_CARD_INVALID",
	-13001:  "PLAYER_ALREADY_FIGHT_CAMPAIGN",
	-13002:  "PLAYER_CAMPAIGN_MUST_PlAY_NEXT",
	-13003:  "PLAYER_NOT_FOUND_CAMPAIGN_TABLE_DATA",
	-13004:  "PLAYER_CANT_FIGHT_THE_CAMPAIGN",
	-14000:  "PLAYER_MAIL_OVER_MAX_COUNT",
	-14001:  "PLAYER_MAIL_NOT_FOUND",
	-14002:  "PLAYER_MAIL_NO_ATTACHED_ITEM",
	-14003:  "PLAYER_MAIL_SEND_FAILED",
	-14004:  "PLAYER_MAIL_RECEIVER_NOT_FOUND",
	-14005:  "PLAYER_MAIL_TRIBE_IS_COOLDOWN",
	-15000:  "PLAYER_TALENT_NOT_FOUND",
	-15001:  "PLAYER_TALENT_LEVEL_IS_MAX",
	-15002:  "PLAYER_TALENT_UP_NOT_ENOUGH_RESOURCE",
	-16000:  "PLAYER_TOWER_ALREADY_FIGHTED",
	-16001:  "PLAYER_TOWER_NOT_FOUND",
	-16002:  "PLAYER_TOWER_NOT_ENOUGH_STAMINA",
	-16003:  "PLAYER_TOWER_FIGHT_RECORD_NOT_FOUND",
	-16004:  "PLAYER_TOWER_ALREADY_HIGHEST",
	-16005:  "PLAYER_TOWER_CANT_FIGHT",
	-200000: "CHARGE_ORDER_DATA_EMPTY",
	-200001: "CHARGE_ORDER_DATA_INVALID",
	-200002: "CHARGE_ORDER_SIGNATURE_INVALID",
	-200003: "CHARGE_ORDER_SN_EMPTY",
	-200004: "CHARGE_ORDER_SN_ALREDY_USED",
	-200005: "CHARGE_ORDER_VERIFY_FAILED",
	-300000: "FRIEND_MESSAGE_NUM_MAX",
	-300001: "FRIEND_NO_UNREAD_MESSAGE",
	-300002: "FRIEND_THE_PLAYER_ALREADY_FRIEND",
	-300003: "FRIEND_THE_PLAYER_REQUESTED",
	-300004: "FRIEND_REMOVE_FRIEND_FAILED",
	-300005: "FRIEND_GIVE_POINTS_FREQUENTLY",
	-300006: "FRIEND_TOO_MANY_FRIEND_GIVE_POINTS",
	-300007: "FRIEND_GIVE_POINTS_MAX_NUM_LIMIT",
	-300008: "FRIEND_NO_THE_FRIEND",
	-300009: "FRIEND_MESSAGE_TOO_LONG",
	-300010: "FRIEND_CHAT_FAILED",
	-400000: "SHOP_NOT_FOUND",
	-400001: "SHOP_PURCHASED_FAILED",
	-400002: "SHOP_ITEM_NOT_FOUND",
	-400003: "SHOP_LIMITED_TYPE_INVALID",
	-400004: "SHOP_ITEM_NOT_ENOUGH",
	-101600: "TASK_NOT_FOUND",
	-101601: "TASK_NOT_COMPLETE",
	-101602: "TASK_NOT_REWARD",
	-101603: "TASK_ALREADY_REWARDED",
	-101604: "TASK_LEVEL_NOT_ENOUGH",
	-101605: "TASK_PREV_NOT_COMPLETE",
	-102300: "WORLDCHAT_SEND_MSG_COOLING_DOWN",
	-102301: "WORLDCHAT_SEND_MSG_BYTES_TOO_LONG",
	-102302: "WORLDCHAT_CANT_SEND_WITH_NO_FREE",
	-102303: "WORLDCHAT_PULL_COOLING_DOWN",
	-102304: "WORLDCHAT_SEND_MSG_BE_FORBIDEN",
}
var E_ERR_value = map[string]int32{
	"NONE":                                    0,
	"INTERNAL":                                -1,
	"PLAYER_ACC_OR_PASSWORD_ERROR":            -2,
	"PLAYER_NOT_EXIST":                        -3,
	"PLAYER_ALREADY_LOGINED":                  -4,
	"PLAYER_OTHER_PLACE_LOGIN":                -5,
	"PLAYER_TOKEN_ERROR":                      -6,
	"PLAYER_SELECT_SERVER_NOT_FOUND":          -7,
	"PLAYER_ALREADY_SELECTED_SERVER":          -8,
	"PLAYER_IS_OFFLINE":                       -9,
	"PLAYER_SET_ATTACK_MEMBERS_FAILED":        -10000,
	"PLAYER_SET_DEFENSE_MEMBERS_FAILED":       -10001,
	"PLAYER_IS_DEFENSING":                     -10002,
	"PLAYER_BATTLE_RECORD_NOT_FOUND":          -10003,
	"PLAYER_BATTLE_RECORD_FORBIDDEN_DELETE":   -10004,
	"PLAYER_BATTLE_RECORD_DATA_INVALID":       -10005,
	"PLAYER_ITEM_NOT_FOUND":                   -11000,
	"PLAYER_ITEM_TABLE_ID_NOT_FOUND":          -11001,
	"PLAYER_ITEM_NUM_NOT_ENOUGH":              -11002,
	"PLAYER_ITEM_TYPE_NOT_MATCH":              -11003,
	"PLAYER_EQUIP_SLOT_EMPTY":                 -11004,
	"PLAYER_EQUIP_TYPE_INVALID":               -11005,
	"PLAYER_ITEM_FUSION_FAILED":               -11006,
	"PLAYER_ITEM_COUNT_NOT_ENOUGH_TO_FUSION":  -11007,
	"PLAYER_ROLE_NOT_FOUND":                   -12000,
	"PLAYER_ROLE_TABLE_ID_NOT_FOUND":          -12001,
	"PLAYER_ROLE_LEVEL_DATA_NOT_FOUND":        -12002,
	"PLAYER_ROLE_LEVEL_IS_MAX":                -12003,
	"PLAYER_ROLE_RANK_IS_MAX":                 -12004,
	"PLAYER_ROLE_RANKUP_DATA_NOT_FOUND":       -12005,
	"PLAYER_ROLE_IN_TEAM_CANT_DECOMPOSE":      -12006,
	"PLAYER_ROLE_FUSION_FAILED":               -12007,
	"PLAYER_FUSION_NEED_ROLE_NOT_FOUND":       -12008,
	"PLAYER_FUSION_ROLE_INVALID":              -12009,
	"PLAYER_FUSION_ROLE_TABLE_DATA_NOT_FOUND": -12010,
	"PLAYER_FUSION_MAIN_ROLE_NOT_FOUND":       -12011,
	"PLAYER_FUSION_ROLE_MATERIAL_NOT_ENOUGH":  -12012,
	"PLAYER_FUSION_MAIN_CARD_INVALID":         -12013,
	"PLAYER_ALREADY_FIGHT_CAMPAIGN":           -13001,
	"PLAYER_CAMPAIGN_MUST_PlAY_NEXT":          -13002,
	"PLAYER_NOT_FOUND_CAMPAIGN_TABLE_DATA":    -13003,
	"PLAYER_CANT_FIGHT_THE_CAMPAIGN":          -13004,
	"PLAYER_MAIL_OVER_MAX_COUNT":              -14000,
	"PLAYER_MAIL_NOT_FOUND":                   -14001,
	"PLAYER_MAIL_NO_ATTACHED_ITEM":            -14002,
	"PLAYER_MAIL_SEND_FAILED":                 -14003,
	"PLAYER_MAIL_RECEIVER_NOT_FOUND":          -14004,
	"PLAYER_MAIL_TRIBE_IS_COOLDOWN":           -14005,
	"PLAYER_TALENT_NOT_FOUND":                 -15000,
	"PLAYER_TALENT_LEVEL_IS_MAX":              -15001,
	"PLAYER_TALENT_UP_NOT_ENOUGH_RESOURCE":    -15002,
	"PLAYER_TOWER_ALREADY_FIGHTED":            -16000,
	"PLAYER_TOWER_NOT_FOUND":                  -16001,
	"PLAYER_TOWER_NOT_ENOUGH_STAMINA":         -16002,
	"PLAYER_TOWER_FIGHT_RECORD_NOT_FOUND":     -16003,
	"PLAYER_TOWER_ALREADY_HIGHEST":            -16004,
	"PLAYER_TOWER_CANT_FIGHT":                 -16005,
	"CHARGE_ORDER_DATA_EMPTY":                 -200000,
	"CHARGE_ORDER_DATA_INVALID":               -200001,
	"CHARGE_ORDER_SIGNATURE_INVALID":          -200002,
	"CHARGE_ORDER_SN_EMPTY":                   -200003,
	"CHARGE_ORDER_SN_ALREDY_USED":             -200004,
	"CHARGE_ORDER_VERIFY_FAILED":              -200005,
	"FRIEND_MESSAGE_NUM_MAX":                  -300000,
	"FRIEND_NO_UNREAD_MESSAGE":                -300001,
	"FRIEND_THE_PLAYER_ALREADY_FRIEND":        -300002,
	"FRIEND_THE_PLAYER_REQUESTED":             -300003,
	"FRIEND_REMOVE_FRIEND_FAILED":             -300004,
	"FRIEND_GIVE_POINTS_FREQUENTLY":           -300005,
	"FRIEND_TOO_MANY_FRIEND_GIVE_POINTS":      -300006,
	"FRIEND_GIVE_POINTS_MAX_NUM_LIMIT":        -300007,
	"FRIEND_NO_THE_FRIEND":                    -300008,
	"FRIEND_MESSAGE_TOO_LONG":                 -300009,
	"FRIEND_CHAT_FAILED":                      -300010,
	"SHOP_NOT_FOUND":                          -400000,
	"SHOP_PURCHASED_FAILED":                   -400001,
	"SHOP_ITEM_NOT_FOUND":                     -400002,
	"SHOP_LIMITED_TYPE_INVALID":               -400003,
	"SHOP_ITEM_NOT_ENOUGH":                    -400004,
	"TASK_NOT_FOUND":                          -101600,
	"TASK_NOT_COMPLETE":                       -101601,
	"TASK_NOT_REWARD":                         -101602,
	"TASK_ALREADY_REWARDED":                   -101603,
	"TASK_LEVEL_NOT_ENOUGH":                   -101604,
	"TASK_PREV_NOT_COMPLETE":                  -101605,
	"WORLDCHAT_SEND_MSG_COOLING_DOWN":         -102300,
	"WORLDCHAT_SEND_MSG_BYTES_TOO_LONG":       -102301,
	"WORLDCHAT_CANT_SEND_WITH_NO_FREE":        -102302,
	"WORLDCHAT_PULL_COOLING_DOWN":             -102303,
	"WORLDCHAT_SEND_MSG_BE_FORBIDEN":          -102304,
}

func (x E_ERR) String() string {
	return proto.EnumName(E_ERR_name, int32(x))
}
func (E_ERR) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// 红点状态
type MODULE int32

const (
	MODULE_STATE_NONE                 MODULE = 0
	MODULE_STATE_HANGUP_RANDOM_INCOME MODULE = 1
	MODULE_STATE_NEW_MAIL             MODULE = 2
)

var MODULE_name = map[int32]string{
	0: "STATE_NONE",
	1: "STATE_HANGUP_RANDOM_INCOME",
	2: "STATE_NEW_MAIL",
}
var MODULE_value = map[string]int32{
	"STATE_NONE":                 0,
	"STATE_HANGUP_RANDOM_INCOME": 1,
	"STATE_NEW_MAIL":             2,
}

func (x MODULE) String() string {
	return proto.EnumName(MODULE_name, int32(x))
}
func (MODULE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// 红点提示通知
type S2CStateNotify struct {
	States       []int32 `protobuf:"varint,1,rep,packed,name=States" json:"States,omitempty"`
	CancelStates []int32 `protobuf:"varint,2,rep,packed,name=CancelStates" json:"CancelStates,omitempty"`
}

func (m *S2CStateNotify) Reset()                    { *m = S2CStateNotify{} }
func (m *S2CStateNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CStateNotify) ProtoMessage()               {}
func (*S2CStateNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *S2CStateNotify) GetStates() []int32 {
	if m != nil {
		return m.States
	}
	return nil
}

func (m *S2CStateNotify) GetCancelStates() []int32 {
	if m != nil {
		return m.CancelStates
	}
	return nil
}

// 心跳
type C2SHeartbeat struct {
}

func (m *C2SHeartbeat) Reset()                    { *m = C2SHeartbeat{} }
func (m *C2SHeartbeat) String() string            { return proto.CompactTextString(m) }
func (*C2SHeartbeat) ProtoMessage()               {}
func (*C2SHeartbeat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// 请求数据同步
type C2SDataSyncRequest struct {
	Base      bool `protobuf:"varint,1,opt,name=Base" json:"Base,omitempty"`
	Items     bool `protobuf:"varint,2,opt,name=Items" json:"Items,omitempty"`
	Roles     bool `protobuf:"varint,3,opt,name=Roles" json:"Roles,omitempty"`
	Teams     bool `protobuf:"varint,4,opt,name=Teams" json:"Teams,omitempty"`
	Campaigns bool `protobuf:"varint,5,opt,name=Campaigns" json:"Campaigns,omitempty"`
}

func (m *C2SDataSyncRequest) Reset()                    { *m = C2SDataSyncRequest{} }
func (m *C2SDataSyncRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SDataSyncRequest) ProtoMessage()               {}
func (*C2SDataSyncRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *C2SDataSyncRequest) GetBase() bool {
	if m != nil {
		return m.Base
	}
	return false
}

func (m *C2SDataSyncRequest) GetItems() bool {
	if m != nil {
		return m.Items
	}
	return false
}

func (m *C2SDataSyncRequest) GetRoles() bool {
	if m != nil {
		return m.Roles
	}
	return false
}

func (m *C2SDataSyncRequest) GetTeams() bool {
	if m != nil {
		return m.Teams
	}
	return false
}

func (m *C2SDataSyncRequest) GetCampaigns() bool {
	if m != nil {
		return m.Campaigns
	}
	return false
}

// 测试用消息
type C2S_TEST_COMMAND struct {
	Cmd  string   `protobuf:"bytes,1,opt,name=cmd" json:"cmd,omitempty"`
	Args []string `protobuf:"bytes,2,rep,name=args" json:"args,omitempty"`
}

func (m *C2S_TEST_COMMAND) Reset()                    { *m = C2S_TEST_COMMAND{} }
func (m *C2S_TEST_COMMAND) String() string            { return proto.CompactTextString(m) }
func (*C2S_TEST_COMMAND) ProtoMessage()               {}
func (*C2S_TEST_COMMAND) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *C2S_TEST_COMMAND) GetCmd() string {
	if m != nil {
		return m.Cmd
	}
	return ""
}

func (m *C2S_TEST_COMMAND) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

// 物品
type ItemInfo struct {
	ItemCfgId int32 `protobuf:"varint,1,opt,name=ItemCfgId" json:"ItemCfgId,omitempty"`
	ItemNum   int32 `protobuf:"varint,2,opt,name=ItemNum" json:"ItemNum,omitempty"`
}

func (m *ItemInfo) Reset()                    { *m = ItemInfo{} }
func (m *ItemInfo) String() string            { return proto.CompactTextString(m) }
func (*ItemInfo) ProtoMessage()               {}
func (*ItemInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ItemInfo) GetItemCfgId() int32 {
	if m != nil {
		return m.ItemCfgId
	}
	return 0
}

func (m *ItemInfo) GetItemNum() int32 {
	if m != nil {
		return m.ItemNum
	}
	return 0
}

// 好友信息
type FriendInfo struct {
	PlayerId         int32  `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
	Name             string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Head             string `protobuf:"bytes,3,opt,name=Head" json:"Head,omitempty"`
	Level            int32  `protobuf:"varint,4,opt,name=Level" json:"Level,omitempty"`
	VipLevel         int32  `protobuf:"varint,5,opt,name=VipLevel" json:"VipLevel,omitempty"`
	LastLogin        int32  `protobuf:"varint,6,opt,name=LastLogin" json:"LastLogin,omitempty"`
	FriendPoints     int32  `protobuf:"varint,7,opt,name=FriendPoints" json:"FriendPoints,omitempty"`
	LeftGiveSeconds  int32  `protobuf:"varint,8,opt,name=LeftGiveSeconds" json:"LeftGiveSeconds,omitempty"`
	UnreadMessageNum int32  `protobuf:"varint,9,opt,name=UnreadMessageNum" json:"UnreadMessageNum,omitempty"`
	Zan              int32  `protobuf:"varint,10,opt,name=Zan" json:"Zan,omitempty"`
	IsZanToday       bool   `protobuf:"varint,11,opt,name=IsZanToday" json:"IsZanToday,omitempty"`
	IsOnline         bool   `protobuf:"varint,12,opt,name=IsOnline" json:"IsOnline,omitempty"`
}

func (m *FriendInfo) Reset()                    { *m = FriendInfo{} }
func (m *FriendInfo) String() string            { return proto.CompactTextString(m) }
func (*FriendInfo) ProtoMessage()               {}
func (*FriendInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *FriendInfo) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *FriendInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FriendInfo) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

func (m *FriendInfo) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *FriendInfo) GetVipLevel() int32 {
	if m != nil {
		return m.VipLevel
	}
	return 0
}

func (m *FriendInfo) GetLastLogin() int32 {
	if m != nil {
		return m.LastLogin
	}
	return 0
}

func (m *FriendInfo) GetFriendPoints() int32 {
	if m != nil {
		return m.FriendPoints
	}
	return 0
}

func (m *FriendInfo) GetLeftGiveSeconds() int32 {
	if m != nil {
		return m.LeftGiveSeconds
	}
	return 0
}

func (m *FriendInfo) GetUnreadMessageNum() int32 {
	if m != nil {
		return m.UnreadMessageNum
	}
	return 0
}

func (m *FriendInfo) GetZan() int32 {
	if m != nil {
		return m.Zan
	}
	return 0
}

func (m *FriendInfo) GetIsZanToday() bool {
	if m != nil {
		return m.IsZanToday
	}
	return false
}

func (m *FriendInfo) GetIsOnline() bool {
	if m != nil {
		return m.IsOnline
	}
	return false
}

// 登陆
type C2SLoginRequest struct {
	Acc      string `protobuf:"bytes,1,opt,name=Acc" json:"Acc,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=Password" json:"Password,omitempty"`
	Channel  string `protobuf:"bytes,3,opt,name=Channel" json:"Channel,omitempty"`
}

func (m *C2SLoginRequest) Reset()                    { *m = C2SLoginRequest{} }
func (m *C2SLoginRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SLoginRequest) ProtoMessage()               {}
func (*C2SLoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *C2SLoginRequest) GetAcc() string {
	if m != nil {
		return m.Acc
	}
	return ""
}

func (m *C2SLoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *C2SLoginRequest) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

// 服务器信息
type ServerInfo struct {
	Id   int32  `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	IP   string `protobuf:"bytes,3,opt,name=IP" json:"IP,omitempty"`
}

func (m *ServerInfo) Reset()                    { *m = ServerInfo{} }
func (m *ServerInfo) String() string            { return proto.CompactTextString(m) }
func (*ServerInfo) ProtoMessage()               {}
func (*ServerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ServerInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ServerInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ServerInfo) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

// 登陆返回
type S2CLoginResponse struct {
	Acc     string        `protobuf:"bytes,1,opt,name=Acc" json:"Acc,omitempty"`
	Token   string        `protobuf:"bytes,2,opt,name=Token" json:"Token,omitempty"`
	Servers []*ServerInfo `protobuf:"bytes,3,rep,name=Servers" json:"Servers,omitempty"`
}

func (m *S2CLoginResponse) Reset()                    { *m = S2CLoginResponse{} }
func (m *S2CLoginResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CLoginResponse) ProtoMessage()               {}
func (*S2CLoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *S2CLoginResponse) GetAcc() string {
	if m != nil {
		return m.Acc
	}
	return ""
}

func (m *S2CLoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *S2CLoginResponse) GetServers() []*ServerInfo {
	if m != nil {
		return m.Servers
	}
	return nil
}

// / 其它地方登录
type S2COtherPlaceLogin struct {
}

func (m *S2COtherPlaceLogin) Reset()                    { *m = S2COtherPlaceLogin{} }
func (m *S2COtherPlaceLogin) String() string            { return proto.CompactTextString(m) }
func (*S2COtherPlaceLogin) ProtoMessage()               {}
func (*S2COtherPlaceLogin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

// 选择服务器
type C2SSelectServerRequest struct {
	Acc      string `protobuf:"bytes,1,opt,name=Acc" json:"Acc,omitempty"`
	Token    string `protobuf:"bytes,2,opt,name=Token" json:"Token,omitempty"`
	ServerId int32  `protobuf:"varint,3,opt,name=ServerId" json:"ServerId,omitempty"`
}

func (m *C2SSelectServerRequest) Reset()                    { *m = C2SSelectServerRequest{} }
func (m *C2SSelectServerRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SSelectServerRequest) ProtoMessage()               {}
func (*C2SSelectServerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *C2SSelectServerRequest) GetAcc() string {
	if m != nil {
		return m.Acc
	}
	return ""
}

func (m *C2SSelectServerRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *C2SSelectServerRequest) GetServerId() int32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

// 选择服务器返回
type S2CSelectServerResponse struct {
	Acc   string `protobuf:"bytes,1,opt,name=Acc" json:"Acc,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=Token" json:"Token,omitempty"`
	IP    string `protobuf:"bytes,3,opt,name=IP" json:"IP,omitempty"`
}

func (m *S2CSelectServerResponse) Reset()                    { *m = S2CSelectServerResponse{} }
func (m *S2CSelectServerResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CSelectServerResponse) ProtoMessage()               {}
func (*S2CSelectServerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *S2CSelectServerResponse) GetAcc() string {
	if m != nil {
		return m.Acc
	}
	return ""
}

func (m *S2CSelectServerResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *S2CSelectServerResponse) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

type C2S_MSG_DATA struct {
	PlayerId int32  `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
	Token    string `protobuf:"bytes,2,opt,name=Token" json:"Token,omitempty"`
	MsgCode  int32  `protobuf:"varint,3,opt,name=MsgCode" json:"MsgCode,omitempty"`
	Data     []byte `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (m *C2S_MSG_DATA) Reset()                    { *m = C2S_MSG_DATA{} }
func (m *C2S_MSG_DATA) String() string            { return proto.CompactTextString(m) }
func (*C2S_MSG_DATA) ProtoMessage()               {}
func (*C2S_MSG_DATA) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *C2S_MSG_DATA) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *C2S_MSG_DATA) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *C2S_MSG_DATA) GetMsgCode() int32 {
	if m != nil {
		return m.MsgCode
	}
	return 0
}

func (m *C2S_MSG_DATA) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type S2C_MSG_DATA struct {
	ErrorCode  int32  `protobuf:"varint,1,opt,name=ErrorCode" json:"ErrorCode,omitempty"`
	ErrorMsg   string `protobuf:"bytes,2,opt,name=ErrorMsg" json:"ErrorMsg,omitempty"`
	Data       []byte `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	CurrMsgNum int32  `protobuf:"varint,4,opt,name=CurrMsgNum" json:"CurrMsgNum,omitempty"`
}

func (m *S2C_MSG_DATA) Reset()                    { *m = S2C_MSG_DATA{} }
func (m *S2C_MSG_DATA) String() string            { return proto.CompactTextString(m) }
func (*S2C_MSG_DATA) ProtoMessage()               {}
func (*S2C_MSG_DATA) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *S2C_MSG_DATA) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *S2C_MSG_DATA) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

func (m *S2C_MSG_DATA) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *S2C_MSG_DATA) GetCurrMsgNum() int32 {
	if m != nil {
		return m.CurrMsgNum
	}
	return 0
}

// 进入游戏服务器
type C2SEnterGameRequest struct {
	Acc   string `protobuf:"bytes,1,opt,name=Acc" json:"Acc,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=Token" json:"Token,omitempty"`
}

func (m *C2SEnterGameRequest) Reset()                    { *m = C2SEnterGameRequest{} }
func (m *C2SEnterGameRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SEnterGameRequest) ProtoMessage()               {}
func (*C2SEnterGameRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *C2SEnterGameRequest) GetAcc() string {
	if m != nil {
		return m.Acc
	}
	return ""
}

func (m *C2SEnterGameRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// 返回
type S2CEnterGameResponse struct {
	Acc      string `protobuf:"bytes,1,opt,name=Acc" json:"Acc,omitempty"`
	PlayerId int32  `protobuf:"varint,2,opt,name=PlayerId" json:"PlayerId,omitempty"`
}

func (m *S2CEnterGameResponse) Reset()                    { *m = S2CEnterGameResponse{} }
func (m *S2CEnterGameResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CEnterGameResponse) ProtoMessage()               {}
func (*S2CEnterGameResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *S2CEnterGameResponse) GetAcc() string {
	if m != nil {
		return m.Acc
	}
	return ""
}

func (m *S2CEnterGameResponse) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

// 通知客户端进入游戏服务器完成
type S2CEnterGameCompleteNotify struct {
}

func (m *S2CEnterGameCompleteNotify) Reset()                    { *m = S2CEnterGameCompleteNotify{} }
func (m *S2CEnterGameCompleteNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CEnterGameCompleteNotify) ProtoMessage()               {}
func (*S2CEnterGameCompleteNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

// 离开游戏服务器
type C2SLeaveGameRequest struct {
}

func (m *C2SLeaveGameRequest) Reset()                    { *m = C2SLeaveGameRequest{} }
func (m *C2SLeaveGameRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SLeaveGameRequest) ProtoMessage()               {}
func (*C2SLeaveGameRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

// 返回
type S2CLeaveGameResponse struct {
}

func (m *S2CLeaveGameResponse) Reset()                    { *m = S2CLeaveGameResponse{} }
func (m *S2CLeaveGameResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CLeaveGameResponse) ProtoMessage()               {}
func (*S2CLeaveGameResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

// 玩家信息
type S2CPlayerInfoResponse struct {
	Level    int32  `protobuf:"varint,1,opt,name=Level" json:"Level,omitempty"`
	Exp      int32  `protobuf:"varint,2,opt,name=Exp" json:"Exp,omitempty"`
	Gold     int32  `protobuf:"varint,3,opt,name=Gold" json:"Gold,omitempty"`
	Diamond  int32  `protobuf:"varint,4,opt,name=Diamond" json:"Diamond,omitempty"`
	Icon     string `protobuf:"bytes,5,opt,name=Icon" json:"Icon,omitempty"`
	VipLevel int32  `protobuf:"varint,6,opt,name=VipLevel" json:"VipLevel,omitempty"`
}

func (m *S2CPlayerInfoResponse) Reset()                    { *m = S2CPlayerInfoResponse{} }
func (m *S2CPlayerInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CPlayerInfoResponse) ProtoMessage()               {}
func (*S2CPlayerInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *S2CPlayerInfoResponse) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *S2CPlayerInfoResponse) GetExp() int32 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *S2CPlayerInfoResponse) GetGold() int32 {
	if m != nil {
		return m.Gold
	}
	return 0
}

func (m *S2CPlayerInfoResponse) GetDiamond() int32 {
	if m != nil {
		return m.Diamond
	}
	return 0
}

func (m *S2CPlayerInfoResponse) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *S2CPlayerInfoResponse) GetVipLevel() int32 {
	if m != nil {
		return m.VipLevel
	}
	return 0
}

// 请求角色
type C2SRolesRequest struct {
}

func (m *C2SRolesRequest) Reset()                    { *m = C2SRolesRequest{} }
func (m *C2SRolesRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SRolesRequest) ProtoMessage()               {}
func (*C2SRolesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

type AttrData struct {
	AttrId int32 `protobuf:"varint,1,opt,name=AttrId" json:"AttrId,omitempty"`
	Value  int32 `protobuf:"varint,2,opt,name=Value" json:"Value,omitempty"`
}

func (m *AttrData) Reset()                    { *m = AttrData{} }
func (m *AttrData) String() string            { return proto.CompactTextString(m) }
func (*AttrData) ProtoMessage()               {}
func (*AttrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *AttrData) GetAttrId() int32 {
	if m != nil {
		return m.AttrId
	}
	return 0
}

func (m *AttrData) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Role struct {
	Id      int32   `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	TableId int32   `protobuf:"varint,2,opt,name=TableId" json:"TableId,omitempty"`
	Rank    int32   `protobuf:"varint,3,opt,name=Rank" json:"Rank,omitempty"`
	Level   int32   `protobuf:"varint,4,opt,name=Level" json:"Level,omitempty"`
	Attrs   []int32 `protobuf:"varint,5,rep,packed,name=Attrs" json:"Attrs,omitempty"`
}

func (m *Role) Reset()                    { *m = Role{} }
func (m *Role) String() string            { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()               {}
func (*Role) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *Role) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Role) GetTableId() int32 {
	if m != nil {
		return m.TableId
	}
	return 0
}

func (m *Role) GetRank() int32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *Role) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *Role) GetAttrs() []int32 {
	if m != nil {
		return m.Attrs
	}
	return nil
}

// 请求角色返回
type S2CRolesResponse struct {
	Roles []*Role `protobuf:"bytes,1,rep,name=Roles" json:"Roles,omitempty"`
}

func (m *S2CRolesResponse) Reset()                    { *m = S2CRolesResponse{} }
func (m *S2CRolesResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CRolesResponse) ProtoMessage()               {}
func (*S2CRolesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *S2CRolesResponse) GetRoles() []*Role {
	if m != nil {
		return m.Roles
	}
	return nil
}

// 角色信息更新通知
type S2CRolesChangeNotify struct {
	Adds    []*Role `protobuf:"bytes,1,rep,name=Adds" json:"Adds,omitempty"`
	Removes []int32 `protobuf:"varint,2,rep,packed,name=Removes" json:"Removes,omitempty"`
	Updates []*Role `protobuf:"bytes,3,rep,name=Updates" json:"Updates,omitempty"`
}

func (m *S2CRolesChangeNotify) Reset()                    { *m = S2CRolesChangeNotify{} }
func (m *S2CRolesChangeNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CRolesChangeNotify) ProtoMessage()               {}
func (*S2CRolesChangeNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *S2CRolesChangeNotify) GetAdds() []*Role {
	if m != nil {
		return m.Adds
	}
	return nil
}

func (m *S2CRolesChangeNotify) GetRemoves() []int32 {
	if m != nil {
		return m.Removes
	}
	return nil
}

func (m *S2CRolesChangeNotify) GetUpdates() []*Role {
	if m != nil {
		return m.Updates
	}
	return nil
}

// ----------------------------------- 战斗 -----------------------------------
// 设置阵容
type C2SSetTeamRequest struct {
	TeamType    int32   `protobuf:"varint,1,opt,name=TeamType" json:"TeamType,omitempty"`
	TeamMembers []int32 `protobuf:"varint,2,rep,packed,name=TeamMembers" json:"TeamMembers,omitempty"`
}

func (m *C2SSetTeamRequest) Reset()                    { *m = C2SSetTeamRequest{} }
func (m *C2SSetTeamRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SSetTeamRequest) ProtoMessage()               {}
func (*C2SSetTeamRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *C2SSetTeamRequest) GetTeamType() int32 {
	if m != nil {
		return m.TeamType
	}
	return 0
}

func (m *C2SSetTeamRequest) GetTeamMembers() []int32 {
	if m != nil {
		return m.TeamMembers
	}
	return nil
}

type S2CSetTeamResponse struct {
	TeamType    int32   `protobuf:"varint,1,opt,name=TeamType" json:"TeamType,omitempty"`
	TeamMembers []int32 `protobuf:"varint,2,rep,packed,name=TeamMembers" json:"TeamMembers,omitempty"`
}

func (m *S2CSetTeamResponse) Reset()                    { *m = S2CSetTeamResponse{} }
func (m *S2CSetTeamResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CSetTeamResponse) ProtoMessage()               {}
func (*S2CSetTeamResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *S2CSetTeamResponse) GetTeamType() int32 {
	if m != nil {
		return m.TeamType
	}
	return 0
}

func (m *S2CSetTeamResponse) GetTeamMembers() []int32 {
	if m != nil {
		return m.TeamMembers
	}
	return nil
}

type TeamData struct {
	TeamType    int32   `protobuf:"varint,1,opt,name=TeamType" json:"TeamType,omitempty"`
	TeamMembers []int32 `protobuf:"varint,2,rep,packed,name=TeamMembers" json:"TeamMembers,omitempty"`
}

func (m *TeamData) Reset()                    { *m = TeamData{} }
func (m *TeamData) String() string            { return proto.CompactTextString(m) }
func (*TeamData) ProtoMessage()               {}
func (*TeamData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *TeamData) GetTeamType() int32 {
	if m != nil {
		return m.TeamType
	}
	return 0
}

func (m *TeamData) GetTeamMembers() []int32 {
	if m != nil {
		return m.TeamMembers
	}
	return nil
}

// 阵容数据
type S2CTeamsResponse struct {
	Teams []*TeamData `protobuf:"bytes,1,rep,name=Teams" json:"Teams,omitempty"`
}

func (m *S2CTeamsResponse) Reset()                    { *m = S2CTeamsResponse{} }
func (m *S2CTeamsResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CTeamsResponse) ProtoMessage()               {}
func (*S2CTeamsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *S2CTeamsResponse) GetTeams() []*TeamData {
	if m != nil {
		return m.Teams
	}
	return nil
}

// 阵营成员
type BattleMemberItem struct {
	Id      int32 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	Pos     int32 `protobuf:"varint,2,opt,name=Pos" json:"Pos,omitempty"`
	HP      int32 `protobuf:"varint,3,opt,name=HP" json:"HP,omitempty"`
	MaxHP   int32 `protobuf:"varint,4,opt,name=MaxHP" json:"MaxHP,omitempty"`
	Energy  int32 `protobuf:"varint,5,opt,name=Energy" json:"Energy,omitempty"`
	TableId int32 `protobuf:"varint,6,opt,name=TableId" json:"TableId,omitempty"`
	Rank    int32 `protobuf:"varint,7,opt,name=Rank" json:"Rank,omitempty"`
	Level   int32 `protobuf:"varint,8,opt,name=Level" json:"Level,omitempty"`
	Side    int32 `protobuf:"varint,9,opt,name=Side" json:"Side,omitempty"`
}

func (m *BattleMemberItem) Reset()                    { *m = BattleMemberItem{} }
func (m *BattleMemberItem) String() string            { return proto.CompactTextString(m) }
func (*BattleMemberItem) ProtoMessage()               {}
func (*BattleMemberItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *BattleMemberItem) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BattleMemberItem) GetPos() int32 {
	if m != nil {
		return m.Pos
	}
	return 0
}

func (m *BattleMemberItem) GetHP() int32 {
	if m != nil {
		return m.HP
	}
	return 0
}

func (m *BattleMemberItem) GetMaxHP() int32 {
	if m != nil {
		return m.MaxHP
	}
	return 0
}

func (m *BattleMemberItem) GetEnergy() int32 {
	if m != nil {
		return m.Energy
	}
	return 0
}

func (m *BattleMemberItem) GetTableId() int32 {
	if m != nil {
		return m.TableId
	}
	return 0
}

func (m *BattleMemberItem) GetRank() int32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *BattleMemberItem) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *BattleMemberItem) GetSide() int32 {
	if m != nil {
		return m.Side
	}
	return 0
}

// 战斗成员
type BattleFighter struct {
	Pos        int32 `protobuf:"varint,1,opt,name=Pos" json:"Pos,omitempty"`
	HP         int32 `protobuf:"varint,2,opt,name=HP" json:"HP,omitempty"`
	MaxHP      int32 `protobuf:"varint,3,opt,name=MaxHP" json:"MaxHP,omitempty"`
	Damage     int32 `protobuf:"varint,4,opt,name=Damage" json:"Damage,omitempty"`
	Energy     int32 `protobuf:"varint,5,opt,name=Energy" json:"Energy,omitempty"`
	Side       int32 `protobuf:"varint,6,opt,name=Side" json:"Side,omitempty"`
	IsCritical bool  `protobuf:"varint,7,opt,name=IsCritical" json:"IsCritical,omitempty"`
	IsBlock    bool  `protobuf:"varint,8,opt,name=IsBlock" json:"IsBlock,omitempty"`
	IsAbsorb   bool  `protobuf:"varint,9,opt,name=IsAbsorb" json:"IsAbsorb,omitempty"`
	AntiType   int32 `protobuf:"varint,10,opt,name=AntiType" json:"AntiType,omitempty"`
	Shield     int32 `protobuf:"varint,11,opt,name=Shield" json:"Shield,omitempty"`
}

func (m *BattleFighter) Reset()                    { *m = BattleFighter{} }
func (m *BattleFighter) String() string            { return proto.CompactTextString(m) }
func (*BattleFighter) ProtoMessage()               {}
func (*BattleFighter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *BattleFighter) GetPos() int32 {
	if m != nil {
		return m.Pos
	}
	return 0
}

func (m *BattleFighter) GetHP() int32 {
	if m != nil {
		return m.HP
	}
	return 0
}

func (m *BattleFighter) GetMaxHP() int32 {
	if m != nil {
		return m.MaxHP
	}
	return 0
}

func (m *BattleFighter) GetDamage() int32 {
	if m != nil {
		return m.Damage
	}
	return 0
}

func (m *BattleFighter) GetEnergy() int32 {
	if m != nil {
		return m.Energy
	}
	return 0
}

func (m *BattleFighter) GetSide() int32 {
	if m != nil {
		return m.Side
	}
	return 0
}

func (m *BattleFighter) GetIsCritical() bool {
	if m != nil {
		return m.IsCritical
	}
	return false
}

func (m *BattleFighter) GetIsBlock() bool {
	if m != nil {
		return m.IsBlock
	}
	return false
}

func (m *BattleFighter) GetIsAbsorb() bool {
	if m != nil {
		return m.IsAbsorb
	}
	return false
}

func (m *BattleFighter) GetAntiType() int32 {
	if m != nil {
		return m.AntiType
	}
	return 0
}

func (m *BattleFighter) GetShield() int32 {
	if m != nil {
		return m.Shield
	}
	return 0
}

type BattleMemberBuff struct {
	Side   int32 `protobuf:"varint,1,opt,name=Side" json:"Side,omitempty"`
	Pos    int32 `protobuf:"varint,2,opt,name=Pos" json:"Pos,omitempty"`
	BuffId int32 `protobuf:"varint,3,opt,name=BuffId" json:"BuffId,omitempty"`
}

func (m *BattleMemberBuff) Reset()                    { *m = BattleMemberBuff{} }
func (m *BattleMemberBuff) String() string            { return proto.CompactTextString(m) }
func (*BattleMemberBuff) ProtoMessage()               {}
func (*BattleMemberBuff) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *BattleMemberBuff) GetSide() int32 {
	if m != nil {
		return m.Side
	}
	return 0
}

func (m *BattleMemberBuff) GetPos() int32 {
	if m != nil {
		return m.Pos
	}
	return 0
}

func (m *BattleMemberBuff) GetBuffId() int32 {
	if m != nil {
		return m.BuffId
	}
	return 0
}

// 战报项(一次攻击的结果)
type BattleReportItem struct {
	Side        int32               `protobuf:"varint,1,opt,name=Side" json:"Side,omitempty"`
	SkillId     int32               `protobuf:"varint,2,opt,name=SkillId" json:"SkillId,omitempty"`
	User        *BattleFighter      `protobuf:"bytes,3,opt,name=User" json:"User,omitempty"`
	BeHiters    []*BattleFighter    `protobuf:"bytes,4,rep,name=BeHiters" json:"BeHiters,omitempty"`
	SummonNpcs  []*BattleMemberItem `protobuf:"bytes,5,rep,name=SummonNpcs" json:"SummonNpcs,omitempty"`
	AddBuffs    []*BattleMemberBuff `protobuf:"bytes,6,rep,name=AddBuffs" json:"AddBuffs,omitempty"`
	RemoveBuffs []*BattleMemberBuff `protobuf:"bytes,7,rep,name=RemoveBuffs" json:"RemoveBuffs,omitempty"`
	IsSummon    bool                `protobuf:"varint,8,opt,name=IsSummon" json:"IsSummon,omitempty"`
	HasCombo    bool                `protobuf:"varint,9,opt,name=HasCombo" json:"HasCombo,omitempty"`
}

func (m *BattleReportItem) Reset()                    { *m = BattleReportItem{} }
func (m *BattleReportItem) String() string            { return proto.CompactTextString(m) }
func (*BattleReportItem) ProtoMessage()               {}
func (*BattleReportItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *BattleReportItem) GetSide() int32 {
	if m != nil {
		return m.Side
	}
	return 0
}

func (m *BattleReportItem) GetSkillId() int32 {
	if m != nil {
		return m.SkillId
	}
	return 0
}

func (m *BattleReportItem) GetUser() *BattleFighter {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *BattleReportItem) GetBeHiters() []*BattleFighter {
	if m != nil {
		return m.BeHiters
	}
	return nil
}

func (m *BattleReportItem) GetSummonNpcs() []*BattleMemberItem {
	if m != nil {
		return m.SummonNpcs
	}
	return nil
}

func (m *BattleReportItem) GetAddBuffs() []*BattleMemberBuff {
	if m != nil {
		return m.AddBuffs
	}
	return nil
}

func (m *BattleReportItem) GetRemoveBuffs() []*BattleMemberBuff {
	if m != nil {
		return m.RemoveBuffs
	}
	return nil
}

func (m *BattleReportItem) GetIsSummon() bool {
	if m != nil {
		return m.IsSummon
	}
	return false
}

func (m *BattleReportItem) GetHasCombo() bool {
	if m != nil {
		return m.HasCombo
	}
	return false
}

// 一回合战报
type BattleRoundReports struct {
	RoundNum            int32               `protobuf:"varint,1,opt,name=RoundNum" json:"RoundNum,omitempty"`
	Reports             []*BattleReportItem `protobuf:"bytes,2,rep,name=Reports" json:"Reports,omitempty"`
	RemoveBuffs         []*BattleMemberBuff `protobuf:"bytes,3,rep,name=RemoveBuffs" json:"RemoveBuffs,omitempty"`
	ChangedFighters     []*BattleFighter    `protobuf:"bytes,4,rep,name=ChangedFighters" json:"ChangedFighters,omitempty"`
	MyMembersEnergy     map[int32]int32     `protobuf:"bytes,5,rep,name=MyMembersEnergy" json:"MyMembersEnergy,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	TargetMembersEnergy map[int32]int32     `protobuf:"bytes,6,rep,name=TargetMembersEnergy" json:"TargetMembersEnergy,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *BattleRoundReports) Reset()                    { *m = BattleRoundReports{} }
func (m *BattleRoundReports) String() string            { return proto.CompactTextString(m) }
func (*BattleRoundReports) ProtoMessage()               {}
func (*BattleRoundReports) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *BattleRoundReports) GetRoundNum() int32 {
	if m != nil {
		return m.RoundNum
	}
	return 0
}

func (m *BattleRoundReports) GetReports() []*BattleReportItem {
	if m != nil {
		return m.Reports
	}
	return nil
}

func (m *BattleRoundReports) GetRemoveBuffs() []*BattleMemberBuff {
	if m != nil {
		return m.RemoveBuffs
	}
	return nil
}

func (m *BattleRoundReports) GetChangedFighters() []*BattleFighter {
	if m != nil {
		return m.ChangedFighters
	}
	return nil
}

func (m *BattleRoundReports) GetMyMembersEnergy() map[int32]int32 {
	if m != nil {
		return m.MyMembersEnergy
	}
	return nil
}

func (m *BattleRoundReports) GetTargetMembersEnergy() map[int32]int32 {
	if m != nil {
		return m.TargetMembersEnergy
	}
	return nil
}

// 请求战斗结果
type C2SBattleResultRequest struct {
	AttackMembers []int32 `protobuf:"varint,1,rep,packed,name=AttackMembers" json:"AttackMembers,omitempty"`
	FightPlayerId int32   `protobuf:"varint,2,opt,name=FightPlayerId" json:"FightPlayerId,omitempty"`
	CampaignId    int32   `protobuf:"varint,3,opt,name=CampaignId" json:"CampaignId,omitempty"`
	BattleType    int32   `protobuf:"varint,4,opt,name=BattleType" json:"BattleType,omitempty"`
	BattleParam   int32   `protobuf:"varint,5,opt,name=BattleParam" json:"BattleParam,omitempty"`
}

func (m *C2SBattleResultRequest) Reset()                    { *m = C2SBattleResultRequest{} }
func (m *C2SBattleResultRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SBattleResultRequest) ProtoMessage()               {}
func (*C2SBattleResultRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *C2SBattleResultRequest) GetAttackMembers() []int32 {
	if m != nil {
		return m.AttackMembers
	}
	return nil
}

func (m *C2SBattleResultRequest) GetFightPlayerId() int32 {
	if m != nil {
		return m.FightPlayerId
	}
	return 0
}

func (m *C2SBattleResultRequest) GetCampaignId() int32 {
	if m != nil {
		return m.CampaignId
	}
	return 0
}

func (m *C2SBattleResultRequest) GetBattleType() int32 {
	if m != nil {
		return m.BattleType
	}
	return 0
}

func (m *C2SBattleResultRequest) GetBattleParam() int32 {
	if m != nil {
		return m.BattleParam
	}
	return 0
}

type S2CBattleResultResponse struct {
	IsWin               bool                  `protobuf:"varint,1,opt,name=IsWin" json:"IsWin,omitempty"`
	MyTeam              []*BattleMemberItem   `protobuf:"bytes,2,rep,name=MyTeam" json:"MyTeam,omitempty"`
	TargetTeam          []*BattleMemberItem   `protobuf:"bytes,3,rep,name=TargetTeam" json:"TargetTeam,omitempty"`
	EnterReports        []*BattleReportItem   `protobuf:"bytes,4,rep,name=EnterReports" json:"EnterReports,omitempty"`
	Rounds              []*BattleRoundReports `protobuf:"bytes,5,rep,name=Rounds" json:"Rounds,omitempty"`
	MyMemberDamages     map[int32]int32       `protobuf:"bytes,6,rep,name=MyMemberDamages" json:"MyMemberDamages,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	TargetMemberDamages map[int32]int32       `protobuf:"bytes,7,rep,name=TargetMemberDamages" json:"TargetMemberDamages,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	MyMemberCures       map[int32]int32       `protobuf:"bytes,8,rep,name=MyMemberCures" json:"MyMemberCures,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	TargetMemberCures   map[int32]int32       `protobuf:"bytes,9,rep,name=TargetMemberCures" json:"TargetMemberCures,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	HasNextWave         bool                  `protobuf:"varint,10,opt,name=HasNextWave" json:"HasNextWave,omitempty"`
	NextCampaignId      int32                 `protobuf:"varint,11,opt,name=NextCampaignId" json:"NextCampaignId,omitempty"`
}

func (m *S2CBattleResultResponse) Reset()                    { *m = S2CBattleResultResponse{} }
func (m *S2CBattleResultResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CBattleResultResponse) ProtoMessage()               {}
func (*S2CBattleResultResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *S2CBattleResultResponse) GetIsWin() bool {
	if m != nil {
		return m.IsWin
	}
	return false
}

func (m *S2CBattleResultResponse) GetMyTeam() []*BattleMemberItem {
	if m != nil {
		return m.MyTeam
	}
	return nil
}

func (m *S2CBattleResultResponse) GetTargetTeam() []*BattleMemberItem {
	if m != nil {
		return m.TargetTeam
	}
	return nil
}

func (m *S2CBattleResultResponse) GetEnterReports() []*BattleReportItem {
	if m != nil {
		return m.EnterReports
	}
	return nil
}

func (m *S2CBattleResultResponse) GetRounds() []*BattleRoundReports {
	if m != nil {
		return m.Rounds
	}
	return nil
}

func (m *S2CBattleResultResponse) GetMyMemberDamages() map[int32]int32 {
	if m != nil {
		return m.MyMemberDamages
	}
	return nil
}

func (m *S2CBattleResultResponse) GetTargetMemberDamages() map[int32]int32 {
	if m != nil {
		return m.TargetMemberDamages
	}
	return nil
}

func (m *S2CBattleResultResponse) GetMyMemberCures() map[int32]int32 {
	if m != nil {
		return m.MyMemberCures
	}
	return nil
}

func (m *S2CBattleResultResponse) GetTargetMemberCures() map[int32]int32 {
	if m != nil {
		return m.TargetMemberCures
	}
	return nil
}

func (m *S2CBattleResultResponse) GetHasNextWave() bool {
	if m != nil {
		return m.HasNextWave
	}
	return false
}

func (m *S2CBattleResultResponse) GetNextCampaignId() int32 {
	if m != nil {
		return m.NextCampaignId
	}
	return 0
}

// 请求录像列表
type C2SBattleRecordListRequest struct {
}

func (m *C2SBattleRecordListRequest) Reset()                    { *m = C2SBattleRecordListRequest{} }
func (m *C2SBattleRecordListRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SBattleRecordListRequest) ProtoMessage()               {}
func (*C2SBattleRecordListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

type BattleRecordData struct {
	RecordId     int32  `protobuf:"varint,1,opt,name=RecordId" json:"RecordId,omitempty"`
	AttackerId   int32  `protobuf:"varint,2,opt,name=AttackerId" json:"AttackerId,omitempty"`
	AttackerName string `protobuf:"bytes,3,opt,name=AttackerName" json:"AttackerName,omitempty"`
	DefenserId   int32  `protobuf:"varint,4,opt,name=DefenserId" json:"DefenserId,omitempty"`
	DefenserName string `protobuf:"bytes,5,opt,name=DefenserName" json:"DefenserName,omitempty"`
	RecordTime   int32  `protobuf:"varint,6,opt,name=RecordTime" json:"RecordTime,omitempty"`
}

func (m *BattleRecordData) Reset()                    { *m = BattleRecordData{} }
func (m *BattleRecordData) String() string            { return proto.CompactTextString(m) }
func (*BattleRecordData) ProtoMessage()               {}
func (*BattleRecordData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *BattleRecordData) GetRecordId() int32 {
	if m != nil {
		return m.RecordId
	}
	return 0
}

func (m *BattleRecordData) GetAttackerId() int32 {
	if m != nil {
		return m.AttackerId
	}
	return 0
}

func (m *BattleRecordData) GetAttackerName() string {
	if m != nil {
		return m.AttackerName
	}
	return ""
}

func (m *BattleRecordData) GetDefenserId() int32 {
	if m != nil {
		return m.DefenserId
	}
	return 0
}

func (m *BattleRecordData) GetDefenserName() string {
	if m != nil {
		return m.DefenserName
	}
	return ""
}

func (m *BattleRecordData) GetRecordTime() int32 {
	if m != nil {
		return m.RecordTime
	}
	return 0
}

type S2CBattleRecordListResponse struct {
	Records []*BattleRecordData `protobuf:"bytes,1,rep,name=Records" json:"Records,omitempty"`
}

func (m *S2CBattleRecordListResponse) Reset()                    { *m = S2CBattleRecordListResponse{} }
func (m *S2CBattleRecordListResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CBattleRecordListResponse) ProtoMessage()               {}
func (*S2CBattleRecordListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *S2CBattleRecordListResponse) GetRecords() []*BattleRecordData {
	if m != nil {
		return m.Records
	}
	return nil
}

// 请求录像
type C2SBattleRecordRequest struct {
	Id int32 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
}

func (m *C2SBattleRecordRequest) Reset()                    { *m = C2SBattleRecordRequest{} }
func (m *C2SBattleRecordRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SBattleRecordRequest) ProtoMessage()               {}
func (*C2SBattleRecordRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *C2SBattleRecordRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type S2CBattleRecordResponse struct {
	Id           int32  `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	AttackerId   int32  `protobuf:"varint,2,opt,name=AttackerId" json:"AttackerId,omitempty"`
	AttackerName string `protobuf:"bytes,3,opt,name=AttackerName" json:"AttackerName,omitempty"`
	DefenserId   int32  `protobuf:"varint,4,opt,name=DefenserId" json:"DefenserId,omitempty"`
	DefenserName string `protobuf:"bytes,5,opt,name=DefenserName" json:"DefenserName,omitempty"`
	RecordData   []byte `protobuf:"bytes,6,opt,name=RecordData,proto3" json:"RecordData,omitempty"`
	RecordTime   int32  `protobuf:"varint,7,opt,name=RecordTime" json:"RecordTime,omitempty"`
}

func (m *S2CBattleRecordResponse) Reset()                    { *m = S2CBattleRecordResponse{} }
func (m *S2CBattleRecordResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CBattleRecordResponse) ProtoMessage()               {}
func (*S2CBattleRecordResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *S2CBattleRecordResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *S2CBattleRecordResponse) GetAttackerId() int32 {
	if m != nil {
		return m.AttackerId
	}
	return 0
}

func (m *S2CBattleRecordResponse) GetAttackerName() string {
	if m != nil {
		return m.AttackerName
	}
	return ""
}

func (m *S2CBattleRecordResponse) GetDefenserId() int32 {
	if m != nil {
		return m.DefenserId
	}
	return 0
}

func (m *S2CBattleRecordResponse) GetDefenserName() string {
	if m != nil {
		return m.DefenserName
	}
	return ""
}

func (m *S2CBattleRecordResponse) GetRecordData() []byte {
	if m != nil {
		return m.RecordData
	}
	return nil
}

func (m *S2CBattleRecordResponse) GetRecordTime() int32 {
	if m != nil {
		return m.RecordTime
	}
	return 0
}

// 删除录像
type C2SBattleRecordDeleteRequest struct {
	RecordId int32 `protobuf:"varint,1,opt,name=RecordId" json:"RecordId,omitempty"`
}

func (m *C2SBattleRecordDeleteRequest) Reset()                    { *m = C2SBattleRecordDeleteRequest{} }
func (m *C2SBattleRecordDeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SBattleRecordDeleteRequest) ProtoMessage()               {}
func (*C2SBattleRecordDeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *C2SBattleRecordDeleteRequest) GetRecordId() int32 {
	if m != nil {
		return m.RecordId
	}
	return 0
}

type S2CBattleRecordDeleteResponse struct {
	RecordId int32 `protobuf:"varint,1,opt,name=RecordId" json:"RecordId,omitempty"`
}

func (m *S2CBattleRecordDeleteResponse) Reset()                    { *m = S2CBattleRecordDeleteResponse{} }
func (m *S2CBattleRecordDeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CBattleRecordDeleteResponse) ProtoMessage()               {}
func (*S2CBattleRecordDeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *S2CBattleRecordDeleteResponse) GetRecordId() int32 {
	if m != nil {
		return m.RecordId
	}
	return 0
}

// ---------------------------------- 关卡 ------------------------------------
// 请求战役关卡数据
type C2SCampaignDataRequest struct {
}

func (m *C2SCampaignDataRequest) Reset()                    { *m = C2SCampaignDataRequest{} }
func (m *C2SCampaignDataRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SCampaignDataRequest) ProtoMessage()               {}
func (*C2SCampaignDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

type S2CCampaignDataResponse struct {
	PassedCampaignIds []int32     `protobuf:"varint,1,rep,packed,name=PassedCampaignIds" json:"PassedCampaignIds,omitempty"`
	UnlockCampaignId  int32       `protobuf:"varint,2,opt,name=UnlockCampaignId" json:"UnlockCampaignId,omitempty"`
	HangupCampaignId  int32       `protobuf:"varint,3,opt,name=HangupCampaignId" json:"HangupCampaignId,omitempty"`
	StaticIncomes     []*ItemInfo `protobuf:"bytes,4,rep,name=StaticIncomes" json:"StaticIncomes,omitempty"`
}

func (m *S2CCampaignDataResponse) Reset()                    { *m = S2CCampaignDataResponse{} }
func (m *S2CCampaignDataResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CCampaignDataResponse) ProtoMessage()               {}
func (*S2CCampaignDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *S2CCampaignDataResponse) GetPassedCampaignIds() []int32 {
	if m != nil {
		return m.PassedCampaignIds
	}
	return nil
}

func (m *S2CCampaignDataResponse) GetUnlockCampaignId() int32 {
	if m != nil {
		return m.UnlockCampaignId
	}
	return 0
}

func (m *S2CCampaignDataResponse) GetHangupCampaignId() int32 {
	if m != nil {
		return m.HangupCampaignId
	}
	return 0
}

func (m *S2CCampaignDataResponse) GetStaticIncomes() []*ItemInfo {
	if m != nil {
		return m.StaticIncomes
	}
	return nil
}

// 请求战役挂机收益
type C2SCampaignHangupIncomeRequest struct {
	IncomeType int32 `protobuf:"varint,1,opt,name=IncomeType" json:"IncomeType,omitempty"`
}

func (m *C2SCampaignHangupIncomeRequest) Reset()                    { *m = C2SCampaignHangupIncomeRequest{} }
func (m *C2SCampaignHangupIncomeRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SCampaignHangupIncomeRequest) ProtoMessage()               {}
func (*C2SCampaignHangupIncomeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *C2SCampaignHangupIncomeRequest) GetIncomeType() int32 {
	if m != nil {
		return m.IncomeType
	}
	return 0
}

// 关卡战斗结果奖励
type S2CCampaignHangupIncomeResponse struct {
	IncomeType int32       `protobuf:"varint,1,opt,name=IncomeType" json:"IncomeType,omitempty"`
	Rewards    []*ItemInfo `protobuf:"bytes,2,rep,name=Rewards" json:"Rewards,omitempty"`
}

func (m *S2CCampaignHangupIncomeResponse) Reset()         { *m = S2CCampaignHangupIncomeResponse{} }
func (m *S2CCampaignHangupIncomeResponse) String() string { return proto.CompactTextString(m) }
func (*S2CCampaignHangupIncomeResponse) ProtoMessage()    {}
func (*S2CCampaignHangupIncomeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{46}
}

func (m *S2CCampaignHangupIncomeResponse) GetIncomeType() int32 {
	if m != nil {
		return m.IncomeType
	}
	return 0
}

func (m *S2CCampaignHangupIncomeResponse) GetRewards() []*ItemInfo {
	if m != nil {
		return m.Rewards
	}
	return nil
}

// 设置挂机战役关卡
type C2SBattleSetHangupCampaignRequest struct {
	CampaignId int32 `protobuf:"varint,1,opt,name=CampaignId" json:"CampaignId,omitempty"`
}

func (m *C2SBattleSetHangupCampaignRequest) Reset()         { *m = C2SBattleSetHangupCampaignRequest{} }
func (m *C2SBattleSetHangupCampaignRequest) String() string { return proto.CompactTextString(m) }
func (*C2SBattleSetHangupCampaignRequest) ProtoMessage()    {}
func (*C2SBattleSetHangupCampaignRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{47}
}

func (m *C2SBattleSetHangupCampaignRequest) GetCampaignId() int32 {
	if m != nil {
		return m.CampaignId
	}
	return 0
}

// 设置挂机战役关卡返回
type S2CBattleSetHangupCampaignResponse struct {
	CampaignId int32 `protobuf:"varint,1,opt,name=CampaignId" json:"CampaignId,omitempty"`
}

func (m *S2CBattleSetHangupCampaignResponse) Reset()         { *m = S2CBattleSetHangupCampaignResponse{} }
func (m *S2CBattleSetHangupCampaignResponse) String() string { return proto.CompactTextString(m) }
func (*S2CBattleSetHangupCampaignResponse) ProtoMessage()    {}
func (*S2CBattleSetHangupCampaignResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{48}
}

func (m *S2CBattleSetHangupCampaignResponse) GetCampaignId() int32 {
	if m != nil {
		return m.CampaignId
	}
	return 0
}

// ----------------------------------- 物品 ------------------------------------
// 请求同步物品数据
type C2SItemsSyncRequest struct {
}

func (m *C2SItemsSyncRequest) Reset()                    { *m = C2SItemsSyncRequest{} }
func (m *C2SItemsSyncRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SItemsSyncRequest) ProtoMessage()               {}
func (*C2SItemsSyncRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

// 进入游戏同步物品数据
type S2CItemsSync struct {
	Items []*ItemInfo `protobuf:"bytes,1,rep,name=Items" json:"Items,omitempty"`
}

func (m *S2CItemsSync) Reset()                    { *m = S2CItemsSync{} }
func (m *S2CItemsSync) String() string            { return proto.CompactTextString(m) }
func (*S2CItemsSync) ProtoMessage()               {}
func (*S2CItemsSync) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *S2CItemsSync) GetItems() []*ItemInfo {
	if m != nil {
		return m.Items
	}
	return nil
}

// 物品数据更新
type S2CItemsUpdate struct {
	ItemsAdd []*ItemInfo `protobuf:"bytes,1,rep,name=ItemsAdd" json:"ItemsAdd,omitempty"`
}

func (m *S2CItemsUpdate) Reset()                    { *m = S2CItemsUpdate{} }
func (m *S2CItemsUpdate) String() string            { return proto.CompactTextString(m) }
func (*S2CItemsUpdate) ProtoMessage()               {}
func (*S2CItemsUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func (m *S2CItemsUpdate) GetItemsAdd() []*ItemInfo {
	if m != nil {
		return m.ItemsAdd
	}
	return nil
}

// 物品合成
type C2SItemFusionRequest struct {
	PieceId   int32 `protobuf:"varint,1,opt,name=PieceId" json:"PieceId,omitempty"`
	FusionNum int32 `protobuf:"varint,2,opt,name=FusionNum" json:"FusionNum,omitempty"`
}

func (m *C2SItemFusionRequest) Reset()                    { *m = C2SItemFusionRequest{} }
func (m *C2SItemFusionRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SItemFusionRequest) ProtoMessage()               {}
func (*C2SItemFusionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

func (m *C2SItemFusionRequest) GetPieceId() int32 {
	if m != nil {
		return m.PieceId
	}
	return 0
}

func (m *C2SItemFusionRequest) GetFusionNum() int32 {
	if m != nil {
		return m.FusionNum
	}
	return 0
}

type S2CItemFusionResponse struct {
	Items []*ItemInfo `protobuf:"bytes,1,rep,name=Items" json:"Items,omitempty"`
}

func (m *S2CItemFusionResponse) Reset()                    { *m = S2CItemFusionResponse{} }
func (m *S2CItemFusionResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CItemFusionResponse) ProtoMessage()               {}
func (*S2CItemFusionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *S2CItemFusionResponse) GetItems() []*ItemInfo {
	if m != nil {
		return m.Items
	}
	return nil
}

// 出售物品
type C2SItemSellRequest struct {
	ItemId  int32 `protobuf:"varint,1,opt,name=ItemId" json:"ItemId,omitempty"`
	ItemNum int32 `protobuf:"varint,2,opt,name=ItemNum" json:"ItemNum,omitempty"`
}

func (m *C2SItemSellRequest) Reset()                    { *m = C2SItemSellRequest{} }
func (m *C2SItemSellRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SItemSellRequest) ProtoMessage()               {}
func (*C2SItemSellRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{54} }

func (m *C2SItemSellRequest) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *C2SItemSellRequest) GetItemNum() int32 {
	if m != nil {
		return m.ItemNum
	}
	return 0
}

type S2CItemSellResponse struct {
	ItemId  int32 `protobuf:"varint,1,opt,name=ItemId" json:"ItemId,omitempty"`
	ItemNum int32 `protobuf:"varint,2,opt,name=ItemNum" json:"ItemNum,omitempty"`
}

func (m *S2CItemSellResponse) Reset()                    { *m = S2CItemSellResponse{} }
func (m *S2CItemSellResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CItemSellResponse) ProtoMessage()               {}
func (*S2CItemSellResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{55} }

func (m *S2CItemSellResponse) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *S2CItemSellResponse) GetItemNum() int32 {
	if m != nil {
		return m.ItemNum
	}
	return 0
}

// ----------------------------------- 角色 ------------------------------------
// 角色升级
type C2SRoleLevelUpRequest struct {
	RoleId int32 `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
}

func (m *C2SRoleLevelUpRequest) Reset()                    { *m = C2SRoleLevelUpRequest{} }
func (m *C2SRoleLevelUpRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SRoleLevelUpRequest) ProtoMessage()               {}
func (*C2SRoleLevelUpRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{56} }

func (m *C2SRoleLevelUpRequest) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

type S2CRoleLevelUpResponse struct {
	RoleId int32 `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
	Level  int32 `protobuf:"varint,2,opt,name=Level" json:"Level,omitempty"`
}

func (m *S2CRoleLevelUpResponse) Reset()                    { *m = S2CRoleLevelUpResponse{} }
func (m *S2CRoleLevelUpResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CRoleLevelUpResponse) ProtoMessage()               {}
func (*S2CRoleLevelUpResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57} }

func (m *S2CRoleLevelUpResponse) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

func (m *S2CRoleLevelUpResponse) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

// 角色升阶
type C2SRoleRankUpRequest struct {
	RoleId int32 `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
}

func (m *C2SRoleRankUpRequest) Reset()                    { *m = C2SRoleRankUpRequest{} }
func (m *C2SRoleRankUpRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SRoleRankUpRequest) ProtoMessage()               {}
func (*C2SRoleRankUpRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{58} }

func (m *C2SRoleRankUpRequest) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

type S2CRoleRankUpResponse struct {
	RoleId int32 `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
	Rank   int32 `protobuf:"varint,2,opt,name=Rank" json:"Rank,omitempty"`
}

func (m *S2CRoleRankUpResponse) Reset()                    { *m = S2CRoleRankUpResponse{} }
func (m *S2CRoleRankUpResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CRoleRankUpResponse) ProtoMessage()               {}
func (*S2CRoleRankUpResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{59} }

func (m *S2CRoleRankUpResponse) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

func (m *S2CRoleRankUpResponse) GetRank() int32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

// 角色分解
type C2SRoleDecomposeRequest struct {
	RoleId int32 `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
}

func (m *C2SRoleDecomposeRequest) Reset()                    { *m = C2SRoleDecomposeRequest{} }
func (m *C2SRoleDecomposeRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SRoleDecomposeRequest) ProtoMessage()               {}
func (*C2SRoleDecomposeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{60} }

func (m *C2SRoleDecomposeRequest) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

type S2CRoleDecomposeResponse struct {
	RoleId   int32       `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
	GetItems []*ItemInfo `protobuf:"bytes,2,rep,name=GetItems" json:"GetItems,omitempty"`
}

func (m *S2CRoleDecomposeResponse) Reset()                    { *m = S2CRoleDecomposeResponse{} }
func (m *S2CRoleDecomposeResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CRoleDecomposeResponse) ProtoMessage()               {}
func (*S2CRoleDecomposeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{61} }

func (m *S2CRoleDecomposeResponse) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

func (m *S2CRoleDecomposeResponse) GetGetItems() []*ItemInfo {
	if m != nil {
		return m.GetItems
	}
	return nil
}

// 角色合成
type C2SRoleFusionRequest struct {
	FusionId     int32   `protobuf:"varint,1,opt,name=FusionId" json:"FusionId,omitempty"`
	MainCardId   int32   `protobuf:"varint,2,opt,name=MainCardId" json:"MainCardId,omitempty"`
	Cost1CardIds []int32 `protobuf:"varint,3,rep,packed,name=Cost1CardIds" json:"Cost1CardIds,omitempty"`
	Cost2CardIds []int32 `protobuf:"varint,4,rep,packed,name=Cost2CardIds" json:"Cost2CardIds,omitempty"`
	Cost3CardIds []int32 `protobuf:"varint,5,rep,packed,name=Cost3CardIds" json:"Cost3CardIds,omitempty"`
}

func (m *C2SRoleFusionRequest) Reset()                    { *m = C2SRoleFusionRequest{} }
func (m *C2SRoleFusionRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SRoleFusionRequest) ProtoMessage()               {}
func (*C2SRoleFusionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{62} }

func (m *C2SRoleFusionRequest) GetFusionId() int32 {
	if m != nil {
		return m.FusionId
	}
	return 0
}

func (m *C2SRoleFusionRequest) GetMainCardId() int32 {
	if m != nil {
		return m.MainCardId
	}
	return 0
}

func (m *C2SRoleFusionRequest) GetCost1CardIds() []int32 {
	if m != nil {
		return m.Cost1CardIds
	}
	return nil
}

func (m *C2SRoleFusionRequest) GetCost2CardIds() []int32 {
	if m != nil {
		return m.Cost2CardIds
	}
	return nil
}

func (m *C2SRoleFusionRequest) GetCost3CardIds() []int32 {
	if m != nil {
		return m.Cost3CardIds
	}
	return nil
}

type S2CRoleFusionResponse struct {
	NewCardId int32 `protobuf:"varint,1,opt,name=NewCardId" json:"NewCardId,omitempty"`
	RoleId    int32 `protobuf:"varint,2,opt,name=RoleId" json:"RoleId,omitempty"`
}

func (m *S2CRoleFusionResponse) Reset()                    { *m = S2CRoleFusionResponse{} }
func (m *S2CRoleFusionResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CRoleFusionResponse) ProtoMessage()               {}
func (*S2CRoleFusionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{63} }

func (m *S2CRoleFusionResponse) GetNewCardId() int32 {
	if m != nil {
		return m.NewCardId
	}
	return 0
}

func (m *S2CRoleFusionResponse) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

// --------------------------------- 邮件 -------------------------------------
// 发送邮件
type C2SMailSendRequest struct {
	ReceiverId    int32       `protobuf:"varint,1,opt,name=ReceiverId" json:"ReceiverId,omitempty"`
	MailType      int32       `protobuf:"varint,2,opt,name=MailType" json:"MailType,omitempty"`
	MailTitle     string      `protobuf:"bytes,3,opt,name=MailTitle" json:"MailTitle,omitempty"`
	MailContent   string      `protobuf:"bytes,4,opt,name=MailContent" json:"MailContent,omitempty"`
	AttachedItems []*ItemInfo `protobuf:"bytes,5,rep,name=AttachedItems" json:"AttachedItems,omitempty"`
}

func (m *C2SMailSendRequest) Reset()                    { *m = C2SMailSendRequest{} }
func (m *C2SMailSendRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SMailSendRequest) ProtoMessage()               {}
func (*C2SMailSendRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{64} }

func (m *C2SMailSendRequest) GetReceiverId() int32 {
	if m != nil {
		return m.ReceiverId
	}
	return 0
}

func (m *C2SMailSendRequest) GetMailType() int32 {
	if m != nil {
		return m.MailType
	}
	return 0
}

func (m *C2SMailSendRequest) GetMailTitle() string {
	if m != nil {
		return m.MailTitle
	}
	return ""
}

func (m *C2SMailSendRequest) GetMailContent() string {
	if m != nil {
		return m.MailContent
	}
	return ""
}

func (m *C2SMailSendRequest) GetAttachedItems() []*ItemInfo {
	if m != nil {
		return m.AttachedItems
	}
	return nil
}

type S2CMailSendResponse struct {
	MailId int32 `protobuf:"varint,1,opt,name=MailId" json:"MailId,omitempty"`
}

func (m *S2CMailSendResponse) Reset()                    { *m = S2CMailSendResponse{} }
func (m *S2CMailSendResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CMailSendResponse) ProtoMessage()               {}
func (*S2CMailSendResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{65} }

func (m *S2CMailSendResponse) GetMailId() int32 {
	if m != nil {
		return m.MailId
	}
	return 0
}

// 获取邮件列表
type C2SMailListRequest struct {
}

func (m *C2SMailListRequest) Reset()                    { *m = C2SMailListRequest{} }
func (m *C2SMailListRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SMailListRequest) ProtoMessage()               {}
func (*C2SMailListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{66} }

type MailBasicData struct {
	Id         int32  `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	Type       int32  `protobuf:"varint,2,opt,name=Type" json:"Type,omitempty"`
	Title      string `protobuf:"bytes,3,opt,name=Title" json:"Title,omitempty"`
	SenderName string `protobuf:"bytes,4,opt,name=SenderName" json:"SenderName,omitempty"`
	SendTime   int32  `protobuf:"varint,5,opt,name=SendTime" json:"SendTime,omitempty"`
	IsRead     bool   `protobuf:"varint,6,opt,name=IsRead" json:"IsRead,omitempty"`
}

func (m *MailBasicData) Reset()                    { *m = MailBasicData{} }
func (m *MailBasicData) String() string            { return proto.CompactTextString(m) }
func (*MailBasicData) ProtoMessage()               {}
func (*MailBasicData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{67} }

func (m *MailBasicData) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MailBasicData) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *MailBasicData) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MailBasicData) GetSenderName() string {
	if m != nil {
		return m.SenderName
	}
	return ""
}

func (m *MailBasicData) GetSendTime() int32 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

func (m *MailBasicData) GetIsRead() bool {
	if m != nil {
		return m.IsRead
	}
	return false
}

type S2CMailListResponse struct {
	Mails []*MailBasicData `protobuf:"bytes,1,rep,name=Mails" json:"Mails,omitempty"`
}

func (m *S2CMailListResponse) Reset()                    { *m = S2CMailListResponse{} }
func (m *S2CMailListResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CMailListResponse) ProtoMessage()               {}
func (*S2CMailListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{68} }

func (m *S2CMailListResponse) GetMails() []*MailBasicData {
	if m != nil {
		return m.Mails
	}
	return nil
}

// 请求邮件具体内容
type C2SMailDetailRequest struct {
	Ids []int32 `protobuf:"varint,1,rep,packed,name=Ids" json:"Ids,omitempty"`
}

func (m *C2SMailDetailRequest) Reset()                    { *m = C2SMailDetailRequest{} }
func (m *C2SMailDetailRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SMailDetailRequest) ProtoMessage()               {}
func (*C2SMailDetailRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{69} }

func (m *C2SMailDetailRequest) GetIds() []int32 {
	if m != nil {
		return m.Ids
	}
	return nil
}

type MailDetail struct {
	Id            int32       `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	Content       string      `protobuf:"bytes,2,opt,name=Content" json:"Content,omitempty"`
	AttachedItems []*ItemInfo `protobuf:"bytes,3,rep,name=AttachedItems" json:"AttachedItems,omitempty"`
}

func (m *MailDetail) Reset()                    { *m = MailDetail{} }
func (m *MailDetail) String() string            { return proto.CompactTextString(m) }
func (*MailDetail) ProtoMessage()               {}
func (*MailDetail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{70} }

func (m *MailDetail) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MailDetail) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *MailDetail) GetAttachedItems() []*ItemInfo {
	if m != nil {
		return m.AttachedItems
	}
	return nil
}

type S2CMailDetailResponse struct {
	Mails []*MailDetail `protobuf:"bytes,1,rep,name=Mails" json:"Mails,omitempty"`
}

func (m *S2CMailDetailResponse) Reset()                    { *m = S2CMailDetailResponse{} }
func (m *S2CMailDetailResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CMailDetailResponse) ProtoMessage()               {}
func (*S2CMailDetailResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{71} }

func (m *S2CMailDetailResponse) GetMails() []*MailDetail {
	if m != nil {
		return m.Mails
	}
	return nil
}

// 获取邮件附加物品
type C2SMailGetAttachedItemsRequest struct {
	MailId int32 `protobuf:"varint,1,opt,name=MailId" json:"MailId,omitempty"`
}

func (m *C2SMailGetAttachedItemsRequest) Reset()                    { *m = C2SMailGetAttachedItemsRequest{} }
func (m *C2SMailGetAttachedItemsRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SMailGetAttachedItemsRequest) ProtoMessage()               {}
func (*C2SMailGetAttachedItemsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{72} }

func (m *C2SMailGetAttachedItemsRequest) GetMailId() int32 {
	if m != nil {
		return m.MailId
	}
	return 0
}

type S2CMailGetAttachedItemsResponse struct {
	MailId        int32       `protobuf:"varint,1,opt,name=MailId" json:"MailId,omitempty"`
	AttachedItems []*ItemInfo `protobuf:"bytes,2,rep,name=AttachedItems" json:"AttachedItems,omitempty"`
}

func (m *S2CMailGetAttachedItemsResponse) Reset()         { *m = S2CMailGetAttachedItemsResponse{} }
func (m *S2CMailGetAttachedItemsResponse) String() string { return proto.CompactTextString(m) }
func (*S2CMailGetAttachedItemsResponse) ProtoMessage()    {}
func (*S2CMailGetAttachedItemsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{73}
}

func (m *S2CMailGetAttachedItemsResponse) GetMailId() int32 {
	if m != nil {
		return m.MailId
	}
	return 0
}

func (m *S2CMailGetAttachedItemsResponse) GetAttachedItems() []*ItemInfo {
	if m != nil {
		return m.AttachedItems
	}
	return nil
}

// 删除邮件
type C2SMailDeleteRequest struct {
	MailIds []int32 `protobuf:"varint,1,rep,packed,name=MailIds" json:"MailIds,omitempty"`
}

func (m *C2SMailDeleteRequest) Reset()                    { *m = C2SMailDeleteRequest{} }
func (m *C2SMailDeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SMailDeleteRequest) ProtoMessage()               {}
func (*C2SMailDeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{74} }

func (m *C2SMailDeleteRequest) GetMailIds() []int32 {
	if m != nil {
		return m.MailIds
	}
	return nil
}

type S2CMailDeleteResponse struct {
	MailIds []int32 `protobuf:"varint,1,rep,packed,name=MailIds" json:"MailIds,omitempty"`
}

func (m *S2CMailDeleteResponse) Reset()                    { *m = S2CMailDeleteResponse{} }
func (m *S2CMailDeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CMailDeleteResponse) ProtoMessage()               {}
func (*S2CMailDeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{75} }

func (m *S2CMailDeleteResponse) GetMailIds() []int32 {
	if m != nil {
		return m.MailIds
	}
	return nil
}

// -------------------------------- 玩家 -------------------------------------
// 天赋升级
type C2STalentUpRequest struct {
	TalentId int32 `protobuf:"varint,1,opt,name=TalentId" json:"TalentId,omitempty"`
}

func (m *C2STalentUpRequest) Reset()                    { *m = C2STalentUpRequest{} }
func (m *C2STalentUpRequest) String() string            { return proto.CompactTextString(m) }
func (*C2STalentUpRequest) ProtoMessage()               {}
func (*C2STalentUpRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{76} }

func (m *C2STalentUpRequest) GetTalentId() int32 {
	if m != nil {
		return m.TalentId
	}
	return 0
}

type S2CTalentUpResponse struct {
	TalentId int32 `protobuf:"varint,1,opt,name=TalentId" json:"TalentId,omitempty"`
	Level    int32 `protobuf:"varint,2,opt,name=Level" json:"Level,omitempty"`
}

func (m *S2CTalentUpResponse) Reset()                    { *m = S2CTalentUpResponse{} }
func (m *S2CTalentUpResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CTalentUpResponse) ProtoMessage()               {}
func (*S2CTalentUpResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{77} }

func (m *S2CTalentUpResponse) GetTalentId() int32 {
	if m != nil {
		return m.TalentId
	}
	return 0
}

func (m *S2CTalentUpResponse) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

// 请求天赋列表
type C2STalentListRequest struct {
}

func (m *C2STalentListRequest) Reset()                    { *m = C2STalentListRequest{} }
func (m *C2STalentListRequest) String() string            { return proto.CompactTextString(m) }
func (*C2STalentListRequest) ProtoMessage()               {}
func (*C2STalentListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{78} }

type TalentInfo struct {
	Id    int32 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	Level int32 `protobuf:"varint,2,opt,name=Level" json:"Level,omitempty"`
}

func (m *TalentInfo) Reset()                    { *m = TalentInfo{} }
func (m *TalentInfo) String() string            { return proto.CompactTextString(m) }
func (*TalentInfo) ProtoMessage()               {}
func (*TalentInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{79} }

func (m *TalentInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TalentInfo) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

type S2CTalentListResponse struct {
	Talents []*TalentInfo `protobuf:"bytes,1,rep,name=Talents" json:"Talents,omitempty"`
}

func (m *S2CTalentListResponse) Reset()                    { *m = S2CTalentListResponse{} }
func (m *S2CTalentListResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CTalentListResponse) ProtoMessage()               {}
func (*S2CTalentListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{80} }

func (m *S2CTalentListResponse) GetTalents() []*TalentInfo {
	if m != nil {
		return m.Talents
	}
	return nil
}

// --------------------------------- 爬塔 ------------------------------------
// 请求爬塔数据
type C2STowerDataRequest struct {
}

func (m *C2STowerDataRequest) Reset()                    { *m = C2STowerDataRequest{} }
func (m *C2STowerDataRequest) String() string            { return proto.CompactTextString(m) }
func (*C2STowerDataRequest) ProtoMessage()               {}
func (*C2STowerDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{81} }

type S2CTowerDataResponse struct {
	CurrTowerId    int32 `protobuf:"varint,1,opt,name=CurrTowerId" json:"CurrTowerId,omitempty"`
	TowerKeys      int32 `protobuf:"varint,2,opt,name=TowerKeys" json:"TowerKeys,omitempty"`
	LastGetKeyTime int32 `protobuf:"varint,3,opt,name=LastGetKeyTime" json:"LastGetKeyTime,omitempty"`
}

func (m *S2CTowerDataResponse) Reset()                    { *m = S2CTowerDataResponse{} }
func (m *S2CTowerDataResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CTowerDataResponse) ProtoMessage()               {}
func (*S2CTowerDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{82} }

func (m *S2CTowerDataResponse) GetCurrTowerId() int32 {
	if m != nil {
		return m.CurrTowerId
	}
	return 0
}

func (m *S2CTowerDataResponse) GetTowerKeys() int32 {
	if m != nil {
		return m.TowerKeys
	}
	return 0
}

func (m *S2CTowerDataResponse) GetLastGetKeyTime() int32 {
	if m != nil {
		return m.LastGetKeyTime
	}
	return 0
}

// 请求爬塔某层录像
type C2STowerRecordsInfoRequest struct {
	TowerId int32 `protobuf:"varint,1,opt,name=TowerId" json:"TowerId,omitempty"`
}

func (m *C2STowerRecordsInfoRequest) Reset()                    { *m = C2STowerRecordsInfoRequest{} }
func (m *C2STowerRecordsInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*C2STowerRecordsInfoRequest) ProtoMessage()               {}
func (*C2STowerRecordsInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{83} }

func (m *C2STowerRecordsInfoRequest) GetTowerId() int32 {
	if m != nil {
		return m.TowerId
	}
	return 0
}

type TowerFightRecord struct {
	TowerFightId int32  `protobuf:"varint,1,opt,name=TowerFightId" json:"TowerFightId,omitempty"`
	AttackerId   int32  `protobuf:"varint,2,opt,name=AttackerId" json:"AttackerId,omitempty"`
	AttackerName string `protobuf:"bytes,3,opt,name=AttackerName" json:"AttackerName,omitempty"`
	CreateTime   int32  `protobuf:"varint,4,opt,name=CreateTime" json:"CreateTime,omitempty"`
}

func (m *TowerFightRecord) Reset()                    { *m = TowerFightRecord{} }
func (m *TowerFightRecord) String() string            { return proto.CompactTextString(m) }
func (*TowerFightRecord) ProtoMessage()               {}
func (*TowerFightRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{84} }

func (m *TowerFightRecord) GetTowerFightId() int32 {
	if m != nil {
		return m.TowerFightId
	}
	return 0
}

func (m *TowerFightRecord) GetAttackerId() int32 {
	if m != nil {
		return m.AttackerId
	}
	return 0
}

func (m *TowerFightRecord) GetAttackerName() string {
	if m != nil {
		return m.AttackerName
	}
	return ""
}

func (m *TowerFightRecord) GetCreateTime() int32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

type S2CTowerRecordsInfoResponse struct {
	Records []*TowerFightRecord `protobuf:"bytes,1,rep,name=Records" json:"Records,omitempty"`
}

func (m *S2CTowerRecordsInfoResponse) Reset()                    { *m = S2CTowerRecordsInfoResponse{} }
func (m *S2CTowerRecordsInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CTowerRecordsInfoResponse) ProtoMessage()               {}
func (*S2CTowerRecordsInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{85} }

func (m *S2CTowerRecordsInfoResponse) GetRecords() []*TowerFightRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

// 请求爬塔的某个录像具体数据
type C2STowerRecordDataRequest struct {
	TowerFightId int32 `protobuf:"varint,1,opt,name=TowerFightId" json:"TowerFightId,omitempty"`
}

func (m *C2STowerRecordDataRequest) Reset()                    { *m = C2STowerRecordDataRequest{} }
func (m *C2STowerRecordDataRequest) String() string            { return proto.CompactTextString(m) }
func (*C2STowerRecordDataRequest) ProtoMessage()               {}
func (*C2STowerRecordDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{86} }

func (m *C2STowerRecordDataRequest) GetTowerFightId() int32 {
	if m != nil {
		return m.TowerFightId
	}
	return 0
}

type S2CTowerRecordDataResponse struct {
	RecordData []byte `protobuf:"bytes,1,opt,name=RecordData,proto3" json:"RecordData,omitempty"`
}

func (m *S2CTowerRecordDataResponse) Reset()                    { *m = S2CTowerRecordDataResponse{} }
func (m *S2CTowerRecordDataResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CTowerRecordDataResponse) ProtoMessage()               {}
func (*S2CTowerRecordDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{87} }

func (m *S2CTowerRecordDataResponse) GetRecordData() []byte {
	if m != nil {
		return m.RecordData
	}
	return nil
}

// 请求爬塔排行榜
type C2STowerRankingListRequest struct {
}

func (m *C2STowerRankingListRequest) Reset()                    { *m = C2STowerRankingListRequest{} }
func (m *C2STowerRankingListRequest) String() string            { return proto.CompactTextString(m) }
func (*C2STowerRankingListRequest) ProtoMessage()               {}
func (*C2STowerRankingListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{88} }

type TowerRankInfo struct {
	PlayerId   int32  `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
	PlayerName string `protobuf:"bytes,2,opt,name=PlayerName" json:"PlayerName,omitempty"`
	TowerId    int32  `protobuf:"varint,3,opt,name=TowerId" json:"TowerId,omitempty"`
}

func (m *TowerRankInfo) Reset()                    { *m = TowerRankInfo{} }
func (m *TowerRankInfo) String() string            { return proto.CompactTextString(m) }
func (*TowerRankInfo) ProtoMessage()               {}
func (*TowerRankInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{89} }

func (m *TowerRankInfo) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *TowerRankInfo) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *TowerRankInfo) GetTowerId() int32 {
	if m != nil {
		return m.TowerId
	}
	return 0
}

type S2CTowerRankingListResponse struct {
	Ranks []*TowerRankInfo `protobuf:"bytes,1,rep,name=Ranks" json:"Ranks,omitempty"`
}

func (m *S2CTowerRankingListResponse) Reset()                    { *m = S2CTowerRankingListResponse{} }
func (m *S2CTowerRankingListResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CTowerRankingListResponse) ProtoMessage()               {}
func (*S2CTowerRankingListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{90} }

func (m *S2CTowerRankingListResponse) GetRanks() []*TowerRankInfo {
	if m != nil {
		return m.Ranks
	}
	return nil
}

// 按昵称查找好友信息
type C2SFriendSearch struct {
	Key string `protobuf:"bytes,1,opt,name=Key" json:"Key,omitempty"`
}

func (m *C2SFriendSearch) Reset()                    { *m = C2SFriendSearch{} }
func (m *C2SFriendSearch) String() string            { return proto.CompactTextString(m) }
func (*C2SFriendSearch) ProtoMessage()               {}
func (*C2SFriendSearch) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{91} }

func (m *C2SFriendSearch) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

// 按ID查找好友
type C2SFriendSearchById struct {
	PlayerId int32 `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
}

func (m *C2SFriendSearchById) Reset()                    { *m = C2SFriendSearchById{} }
func (m *C2SFriendSearchById) String() string            { return proto.CompactTextString(m) }
func (*C2SFriendSearchById) ProtoMessage()               {}
func (*C2SFriendSearchById) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{92} }

func (m *C2SFriendSearchById) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

// 返回好友信息
type S2CFriendSearchResult struct {
	Result []*FriendInfo `protobuf:"bytes,1,rep,name=Result" json:"Result,omitempty"`
}

func (m *S2CFriendSearchResult) Reset()                    { *m = S2CFriendSearchResult{} }
func (m *S2CFriendSearchResult) String() string            { return proto.CompactTextString(m) }
func (*S2CFriendSearchResult) ProtoMessage()               {}
func (*S2CFriendSearchResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{93} }

func (m *S2CFriendSearchResult) GetResult() []*FriendInfo {
	if m != nil {
		return m.Result
	}
	return nil
}

// 客户端向服务器获取好友相关列表
type C2SGetFriendList struct {
	HasFoster bool `protobuf:"varint,1,opt,name=HasFoster" json:"HasFoster,omitempty"`
}

func (m *C2SGetFriendList) Reset()                    { *m = C2SGetFriendList{} }
func (m *C2SGetFriendList) String() string            { return proto.CompactTextString(m) }
func (*C2SGetFriendList) ProtoMessage()               {}
func (*C2SGetFriendList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{94} }

func (m *C2SGetFriendList) GetHasFoster() bool {
	if m != nil {
		return m.HasFoster
	}
	return false
}

// 加好友请求信息
type FriendReq struct {
	PlayerId int32  `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Score    int32  `protobuf:"varint,3,opt,name=Score" json:"Score,omitempty"`
	Head     string `protobuf:"bytes,4,opt,name=Head" json:"Head,omitempty"`
}

func (m *FriendReq) Reset()                    { *m = FriendReq{} }
func (m *FriendReq) String() string            { return proto.CompactTextString(m) }
func (*FriendReq) ProtoMessage()               {}
func (*FriendReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{95} }

func (m *FriendReq) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *FriendReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FriendReq) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *FriendReq) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

// 服务器向客户端返回好友列表
type S2CRetFriendListResult struct {
	FriendType        int32         `protobuf:"varint,1,opt,name=FriendType" json:"FriendType,omitempty"`
	FriendList        []*FriendInfo `protobuf:"bytes,2,rep,name=FriendList" json:"FriendList,omitempty"`
	Reqs              []*FriendReq  `protobuf:"bytes,3,rep,name=Reqs" json:"Reqs,omitempty"`
	LeftGivePointsNum int32         `protobuf:"varint,4,opt,name=LeftGivePointsNum" json:"LeftGivePointsNum,omitempty"`
}

func (m *S2CRetFriendListResult) Reset()                    { *m = S2CRetFriendListResult{} }
func (m *S2CRetFriendListResult) String() string            { return proto.CompactTextString(m) }
func (*S2CRetFriendListResult) ProtoMessage()               {}
func (*S2CRetFriendListResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{96} }

func (m *S2CRetFriendListResult) GetFriendType() int32 {
	if m != nil {
		return m.FriendType
	}
	return 0
}

func (m *S2CRetFriendListResult) GetFriendList() []*FriendInfo {
	if m != nil {
		return m.FriendList
	}
	return nil
}

func (m *S2CRetFriendListResult) GetReqs() []*FriendReq {
	if m != nil {
		return m.Reqs
	}
	return nil
}

func (m *S2CRetFriendListResult) GetLeftGivePointsNum() int32 {
	if m != nil {
		return m.LeftGivePointsNum
	}
	return 0
}

// 服务器通知好友状态
type S2CFriendStateNotify struct {
	StateType int32       `protobuf:"varint,1,opt,name=StateType" json:"StateType,omitempty"`
	Info      *FriendInfo `protobuf:"bytes,2,opt,name=Info" json:"Info,omitempty"`
}

func (m *S2CFriendStateNotify) Reset()                    { *m = S2CFriendStateNotify{} }
func (m *S2CFriendStateNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CFriendStateNotify) ProtoMessage()               {}
func (*S2CFriendStateNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{97} }

func (m *S2CFriendStateNotify) GetStateType() int32 {
	if m != nil {
		return m.StateType
	}
	return 0
}

func (m *S2CFriendStateNotify) GetInfo() *FriendInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

// 服务器通知好友请求
type S2CFriendReqNotify struct {
	Req *FriendReq `protobuf:"bytes,1,opt,name=Req" json:"Req,omitempty"`
}

func (m *S2CFriendReqNotify) Reset()                    { *m = S2CFriendReqNotify{} }
func (m *S2CFriendReqNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CFriendReqNotify) ProtoMessage()               {}
func (*S2CFriendReqNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{98} }

func (m *S2CFriendReqNotify) GetReq() *FriendReq {
	if m != nil {
		return m.Req
	}
	return nil
}

// 客户端通过Id加好友
type C2SAddFriendByPId struct {
	PlayerId int32 `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
}

func (m *C2SAddFriendByPId) Reset()                    { *m = C2SAddFriendByPId{} }
func (m *C2SAddFriendByPId) String() string            { return proto.CompactTextString(m) }
func (*C2SAddFriendByPId) ProtoMessage()               {}
func (*C2SAddFriendByPId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{99} }

func (m *C2SAddFriendByPId) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

// 客户端通过昵称加好友
type C2SAddFriendByName struct {
	Name string `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
}

func (m *C2SAddFriendByName) Reset()                    { *m = C2SAddFriendByName{} }
func (m *C2SAddFriendByName) String() string            { return proto.CompactTextString(m) }
func (*C2SAddFriendByName) ProtoMessage()               {}
func (*C2SAddFriendByName) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{100} }

func (m *C2SAddFriendByName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// 服务器回复添加好友
type S2CAddFriendResult struct {
	PlayerId int32 `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
}

func (m *S2CAddFriendResult) Reset()                    { *m = S2CAddFriendResult{} }
func (m *S2CAddFriendResult) String() string            { return proto.CompactTextString(m) }
func (*S2CAddFriendResult) ProtoMessage()               {}
func (*S2CAddFriendResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{101} }

func (m *S2CAddFriendResult) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

// 客户端同意加好友
type C2SAgreeFriend struct {
	PlayerId int32 `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
}

func (m *C2SAgreeFriend) Reset()                    { *m = C2SAgreeFriend{} }
func (m *C2SAgreeFriend) String() string            { return proto.CompactTextString(m) }
func (*C2SAgreeFriend) ProtoMessage()               {}
func (*C2SAgreeFriend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{102} }

func (m *C2SAgreeFriend) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

// 服务器返回增加好友回复
type S2CAgreeFriendResult struct {
	PlayerId  int32  `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Score     int32  `protobuf:"varint,3,opt,name=Score" json:"Score,omitempty"`
	Level     int32  `protobuf:"varint,4,opt,name=Level" json:"Level,omitempty"`
	Head      string `protobuf:"bytes,5,opt,name=Head" json:"Head,omitempty"`
	VipLevel  int32  `protobuf:"varint,6,opt,name=VipLevel" json:"VipLevel,omitempty"`
	LastLogin int32  `protobuf:"varint,7,opt,name=LastLogin" json:"LastLogin,omitempty"`
}

func (m *S2CAgreeFriendResult) Reset()                    { *m = S2CAgreeFriendResult{} }
func (m *S2CAgreeFriendResult) String() string            { return proto.CompactTextString(m) }
func (*S2CAgreeFriendResult) ProtoMessage()               {}
func (*S2CAgreeFriendResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{103} }

func (m *S2CAgreeFriendResult) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *S2CAgreeFriendResult) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *S2CAgreeFriendResult) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *S2CAgreeFriendResult) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *S2CAgreeFriendResult) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

func (m *S2CAgreeFriendResult) GetVipLevel() int32 {
	if m != nil {
		return m.VipLevel
	}
	return 0
}

func (m *S2CAgreeFriendResult) GetLastLogin() int32 {
	if m != nil {
		return m.LastLogin
	}
	return 0
}

// 客户端拒绝加好友
type C2SRefuseFriend struct {
	PlayerId int32 `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
}

func (m *C2SRefuseFriend) Reset()                    { *m = C2SRefuseFriend{} }
func (m *C2SRefuseFriend) String() string            { return proto.CompactTextString(m) }
func (*C2SRefuseFriend) ProtoMessage()               {}
func (*C2SRefuseFriend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{104} }

func (m *C2SRefuseFriend) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

// 服务器通知拒绝加好友
type S2CRefuseFriendResult struct {
	Name     string `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	PlayerId int32  `protobuf:"varint,2,opt,name=PlayerId" json:"PlayerId,omitempty"`
}

func (m *S2CRefuseFriendResult) Reset()                    { *m = S2CRefuseFriendResult{} }
func (m *S2CRefuseFriendResult) String() string            { return proto.CompactTextString(m) }
func (*S2CRefuseFriendResult) ProtoMessage()               {}
func (*S2CRefuseFriendResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{105} }

func (m *S2CRefuseFriendResult) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *S2CRefuseFriendResult) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

// 客户端删除好友
type C2SRemoveFriend struct {
	PlayerId int32 `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
}

func (m *C2SRemoveFriend) Reset()                    { *m = C2SRemoveFriend{} }
func (m *C2SRemoveFriend) String() string            { return proto.CompactTextString(m) }
func (*C2SRemoveFriend) ProtoMessage()               {}
func (*C2SRemoveFriend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{106} }

func (m *C2SRemoveFriend) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

// 服务器通知客户端删除好友
type S2CRemoveFriendResult struct {
	PlayerId int32 `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
}

func (m *S2CRemoveFriendResult) Reset()                    { *m = S2CRemoveFriendResult{} }
func (m *S2CRemoveFriendResult) String() string            { return proto.CompactTextString(m) }
func (*S2CRemoveFriendResult) ProtoMessage()               {}
func (*S2CRemoveFriendResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{107} }

func (m *S2CRemoveFriendResult) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

// 赠送友情点
type C2SGiveFriendPoints struct {
	FriendId []int32 `protobuf:"varint,1,rep,packed,name=FriendId" json:"FriendId,omitempty"`
}

func (m *C2SGiveFriendPoints) Reset()                    { *m = C2SGiveFriendPoints{} }
func (m *C2SGiveFriendPoints) String() string            { return proto.CompactTextString(m) }
func (*C2SGiveFriendPoints) ProtoMessage()               {}
func (*C2SGiveFriendPoints) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{108} }

func (m *C2SGiveFriendPoints) GetFriendId() []int32 {
	if m != nil {
		return m.FriendId
	}
	return nil
}

type FriendPointsResult struct {
	FriendId      int32 `protobuf:"varint,1,opt,name=FriendId" json:"FriendId,omitempty"`
	Points        int32 `protobuf:"varint,2,opt,name=Points" json:"Points,omitempty"`
	Error         int32 `protobuf:"varint,3,opt,name=Error" json:"Error,omitempty"`
	RemainSeconds int32 `protobuf:"varint,4,opt,name=RemainSeconds" json:"RemainSeconds,omitempty"`
	IsTodayGive   bool  `protobuf:"varint,5,opt,name=IsTodayGive" json:"IsTodayGive,omitempty"`
	BackPoints    int32 `protobuf:"varint,6,opt,name=BackPoints" json:"BackPoints,omitempty"`
}

func (m *FriendPointsResult) Reset()                    { *m = FriendPointsResult{} }
func (m *FriendPointsResult) String() string            { return proto.CompactTextString(m) }
func (*FriendPointsResult) ProtoMessage()               {}
func (*FriendPointsResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{109} }

func (m *FriendPointsResult) GetFriendId() int32 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

func (m *FriendPointsResult) GetPoints() int32 {
	if m != nil {
		return m.Points
	}
	return 0
}

func (m *FriendPointsResult) GetError() int32 {
	if m != nil {
		return m.Error
	}
	return 0
}

func (m *FriendPointsResult) GetRemainSeconds() int32 {
	if m != nil {
		return m.RemainSeconds
	}
	return 0
}

func (m *FriendPointsResult) GetIsTodayGive() bool {
	if m != nil {
		return m.IsTodayGive
	}
	return false
}

func (m *FriendPointsResult) GetBackPoints() int32 {
	if m != nil {
		return m.BackPoints
	}
	return 0
}

type S2CGiveFriendPointsResult struct {
	PointsData        []*FriendPointsResult `protobuf:"bytes,1,rep,name=PointsData" json:"PointsData,omitempty"`
	LeftGivePointsNum int32                 `protobuf:"varint,2,opt,name=LeftGivePointsNum" json:"LeftGivePointsNum,omitempty"`
}

func (m *S2CGiveFriendPointsResult) Reset()                    { *m = S2CGiveFriendPointsResult{} }
func (m *S2CGiveFriendPointsResult) String() string            { return proto.CompactTextString(m) }
func (*S2CGiveFriendPointsResult) ProtoMessage()               {}
func (*S2CGiveFriendPointsResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{110} }

func (m *S2CGiveFriendPointsResult) GetPointsData() []*FriendPointsResult {
	if m != nil {
		return m.PointsData
	}
	return nil
}

func (m *S2CGiveFriendPointsResult) GetLeftGivePointsNum() int32 {
	if m != nil {
		return m.LeftGivePointsNum
	}
	return 0
}

// 收取友情点
type C2SGetFriendPoints struct {
	FriendId []int32 `protobuf:"varint,1,rep,packed,name=FriendId" json:"FriendId,omitempty"`
}

func (m *C2SGetFriendPoints) Reset()                    { *m = C2SGetFriendPoints{} }
func (m *C2SGetFriendPoints) String() string            { return proto.CompactTextString(m) }
func (*C2SGetFriendPoints) ProtoMessage()               {}
func (*C2SGetFriendPoints) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{111} }

func (m *C2SGetFriendPoints) GetFriendId() []int32 {
	if m != nil {
		return m.FriendId
	}
	return nil
}

type FriendPoints struct {
	FriendId int32 `protobuf:"varint,1,opt,name=FriendId" json:"FriendId,omitempty"`
	Points   int32 `protobuf:"varint,2,opt,name=Points" json:"Points,omitempty"`
}

func (m *FriendPoints) Reset()                    { *m = FriendPoints{} }
func (m *FriendPoints) String() string            { return proto.CompactTextString(m) }
func (*FriendPoints) ProtoMessage()               {}
func (*FriendPoints) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{112} }

func (m *FriendPoints) GetFriendId() int32 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

func (m *FriendPoints) GetPoints() int32 {
	if m != nil {
		return m.Points
	}
	return 0
}

type S2CGetFriendPointsResult struct {
	PointsData []*FriendPoints `protobuf:"bytes,1,rep,name=PointsData" json:"PointsData,omitempty"`
}

func (m *S2CGetFriendPointsResult) Reset()                    { *m = S2CGetFriendPointsResult{} }
func (m *S2CGetFriendPointsResult) String() string            { return proto.CompactTextString(m) }
func (*S2CGetFriendPointsResult) ProtoMessage()               {}
func (*S2CGetFriendPointsResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{113} }

func (m *S2CGetFriendPointsResult) GetPointsData() []*FriendPoints {
	if m != nil {
		return m.PointsData
	}
	return nil
}

// 客户端给好友发送消息
type C2SFriendChat struct {
	PlayerId int32  `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
	Content  []byte `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (m *C2SFriendChat) Reset()                    { *m = C2SFriendChat{} }
func (m *C2SFriendChat) String() string            { return proto.CompactTextString(m) }
func (*C2SFriendChat) ProtoMessage()               {}
func (*C2SFriendChat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{114} }

func (m *C2SFriendChat) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *C2SFriendChat) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type S2CFriendChatResult struct {
	PlayerId int32  `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
	Content  []byte `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (m *S2CFriendChatResult) Reset()                    { *m = S2CFriendChatResult{} }
func (m *S2CFriendChatResult) String() string            { return proto.CompactTextString(m) }
func (*S2CFriendChatResult) ProtoMessage()               {}
func (*S2CFriendChatResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{115} }

func (m *S2CFriendChatResult) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *S2CFriendChatResult) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

// 获取好友未读消息数量
type C2SFriendGetUnreadMessageNum struct {
	FriendIds []int32 `protobuf:"varint,1,rep,packed,name=FriendIds" json:"FriendIds,omitempty"`
}

func (m *C2SFriendGetUnreadMessageNum) Reset()                    { *m = C2SFriendGetUnreadMessageNum{} }
func (m *C2SFriendGetUnreadMessageNum) String() string            { return proto.CompactTextString(m) }
func (*C2SFriendGetUnreadMessageNum) ProtoMessage()               {}
func (*C2SFriendGetUnreadMessageNum) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{116} }

func (m *C2SFriendGetUnreadMessageNum) GetFriendIds() []int32 {
	if m != nil {
		return m.FriendIds
	}
	return nil
}

type FriendUnreadMessageNumData struct {
	FriendId   int32 `protobuf:"varint,1,opt,name=FriendId" json:"FriendId,omitempty"`
	MessageNum int32 `protobuf:"varint,2,opt,name=MessageNum" json:"MessageNum,omitempty"`
}

func (m *FriendUnreadMessageNumData) Reset()                    { *m = FriendUnreadMessageNumData{} }
func (m *FriendUnreadMessageNumData) String() string            { return proto.CompactTextString(m) }
func (*FriendUnreadMessageNumData) ProtoMessage()               {}
func (*FriendUnreadMessageNumData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{117} }

func (m *FriendUnreadMessageNumData) GetFriendId() int32 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

func (m *FriendUnreadMessageNumData) GetMessageNum() int32 {
	if m != nil {
		return m.MessageNum
	}
	return 0
}

type S2CFriendGetUnreadMessageNumResult struct {
	Data []*FriendUnreadMessageNumData `protobuf:"bytes,1,rep,name=Data" json:"Data,omitempty"`
}

func (m *S2CFriendGetUnreadMessageNumResult) Reset()         { *m = S2CFriendGetUnreadMessageNumResult{} }
func (m *S2CFriendGetUnreadMessageNumResult) String() string { return proto.CompactTextString(m) }
func (*S2CFriendGetUnreadMessageNumResult) ProtoMessage()    {}
func (*S2CFriendGetUnreadMessageNumResult) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{118}
}

func (m *S2CFriendGetUnreadMessageNumResult) GetData() []*FriendUnreadMessageNumData {
	if m != nil {
		return m.Data
	}
	return nil
}

// 拉取好友未读聊天消息
type C2SFriendPullUnreadMessage struct {
	FriendId int32 `protobuf:"varint,1,opt,name=FriendId" json:"FriendId,omitempty"`
}

func (m *C2SFriendPullUnreadMessage) Reset()                    { *m = C2SFriendPullUnreadMessage{} }
func (m *C2SFriendPullUnreadMessage) String() string            { return proto.CompactTextString(m) }
func (*C2SFriendPullUnreadMessage) ProtoMessage()               {}
func (*C2SFriendPullUnreadMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{119} }

func (m *C2SFriendPullUnreadMessage) GetFriendId() int32 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

type FriendChatData struct {
	Content  []byte `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
	SendTime int32  `protobuf:"varint,2,opt,name=SendTime" json:"SendTime,omitempty"`
}

func (m *FriendChatData) Reset()                    { *m = FriendChatData{} }
func (m *FriendChatData) String() string            { return proto.CompactTextString(m) }
func (*FriendChatData) ProtoMessage()               {}
func (*FriendChatData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{120} }

func (m *FriendChatData) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *FriendChatData) GetSendTime() int32 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

type S2CFriendPullUnreadMessageResult struct {
	FriendId int32             `protobuf:"varint,1,opt,name=FriendId" json:"FriendId,omitempty"`
	Data     []*FriendChatData `protobuf:"bytes,2,rep,name=Data" json:"Data,omitempty"`
}

func (m *S2CFriendPullUnreadMessageResult) Reset()         { *m = S2CFriendPullUnreadMessageResult{} }
func (m *S2CFriendPullUnreadMessageResult) String() string { return proto.CompactTextString(m) }
func (*S2CFriendPullUnreadMessageResult) ProtoMessage()    {}
func (*S2CFriendPullUnreadMessageResult) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{121}
}

func (m *S2CFriendPullUnreadMessageResult) GetFriendId() int32 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

func (m *S2CFriendPullUnreadMessageResult) GetData() []*FriendChatData {
	if m != nil {
		return m.Data
	}
	return nil
}

// 确认聊天未读消息
type C2SFriendConfirmUnreadMessage struct {
	FriendId   int32 `protobuf:"varint,1,opt,name=FriendId" json:"FriendId,omitempty"`
	MessageNum int32 `protobuf:"varint,2,opt,name=MessageNum" json:"MessageNum,omitempty"`
}

func (m *C2SFriendConfirmUnreadMessage) Reset()                    { *m = C2SFriendConfirmUnreadMessage{} }
func (m *C2SFriendConfirmUnreadMessage) String() string            { return proto.CompactTextString(m) }
func (*C2SFriendConfirmUnreadMessage) ProtoMessage()               {}
func (*C2SFriendConfirmUnreadMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{122} }

func (m *C2SFriendConfirmUnreadMessage) GetFriendId() int32 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

func (m *C2SFriendConfirmUnreadMessage) GetMessageNum() int32 {
	if m != nil {
		return m.MessageNum
	}
	return 0
}

type S2CFriendConfirmUnreadMessageResult struct {
	FriendId   int32 `protobuf:"varint,1,opt,name=FriendId" json:"FriendId,omitempty"`
	MessageNum int32 `protobuf:"varint,2,opt,name=MessageNum" json:"MessageNum,omitempty"`
}

func (m *S2CFriendConfirmUnreadMessageResult) Reset()         { *m = S2CFriendConfirmUnreadMessageResult{} }
func (m *S2CFriendConfirmUnreadMessageResult) String() string { return proto.CompactTextString(m) }
func (*S2CFriendConfirmUnreadMessageResult) ProtoMessage()    {}
func (*S2CFriendConfirmUnreadMessageResult) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{123}
}

func (m *S2CFriendConfirmUnreadMessageResult) GetFriendId() int32 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

func (m *S2CFriendConfirmUnreadMessageResult) GetMessageNum() int32 {
	if m != nil {
		return m.MessageNum
	}
	return 0
}

// 客户端请求好友在线状态
type C2SGetOnlineFriends struct {
	Key int32 `protobuf:"varint,1,opt,name=Key" json:"Key,omitempty"`
}

func (m *C2SGetOnlineFriends) Reset()                    { *m = C2SGetOnlineFriends{} }
func (m *C2SGetOnlineFriends) String() string            { return proto.CompactTextString(m) }
func (*C2SGetOnlineFriends) ProtoMessage()               {}
func (*C2SGetOnlineFriends) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{124} }

func (m *C2SGetOnlineFriends) GetKey() int32 {
	if m != nil {
		return m.Key
	}
	return 0
}

// 服务器返回在线好友
type S2CRetOnlineFriends struct {
	PlayerIds []int32 `protobuf:"varint,1,rep,packed,name=PlayerIds" json:"PlayerIds,omitempty"`
	Key       int32   `protobuf:"varint,2,opt,name=Key" json:"Key,omitempty"`
}

func (m *S2CRetOnlineFriends) Reset()                    { *m = S2CRetOnlineFriends{} }
func (m *S2CRetOnlineFriends) String() string            { return proto.CompactTextString(m) }
func (*S2CRetOnlineFriends) ProtoMessage()               {}
func (*S2CRetOnlineFriends) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{125} }

func (m *S2CRetOnlineFriends) GetPlayerIds() []int32 {
	if m != nil {
		return m.PlayerIds
	}
	return nil
}

func (m *S2CRetOnlineFriends) GetKey() int32 {
	if m != nil {
		return m.Key
	}
	return 0
}

// //////////////// shop ///////////////////////
// 请求商店商品
type C2SShopItems struct {
	ShopId int32 `protobuf:"varint,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
}

func (m *C2SShopItems) Reset()                    { *m = C2SShopItems{} }
func (m *C2SShopItems) String() string            { return proto.CompactTextString(m) }
func (*C2SShopItems) ProtoMessage()               {}
func (*C2SShopItems) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{126} }

func (m *C2SShopItems) GetShopId() int32 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

type S2CShopItem struct {
	ItemId        int32 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	LeftNum       int32 `protobuf:"varint,2,opt,name=left_num,json=leftNum" json:"left_num,omitempty"`
	RemainSeconds int32 `protobuf:"varint,3,opt,name=remain_seconds,json=remainSeconds" json:"remain_seconds,omitempty"`
}

func (m *S2CShopItem) Reset()                    { *m = S2CShopItem{} }
func (m *S2CShopItem) String() string            { return proto.CompactTextString(m) }
func (*S2CShopItem) ProtoMessage()               {}
func (*S2CShopItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{127} }

func (m *S2CShopItem) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *S2CShopItem) GetLeftNum() int32 {
	if m != nil {
		return m.LeftNum
	}
	return 0
}

func (m *S2CShopItem) GetRemainSeconds() int32 {
	if m != nil {
		return m.RemainSeconds
	}
	return 0
}

type S2CShopItemsResult struct {
	ShopId int32          `protobuf:"varint,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Items  []*S2CShopItem `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
}

func (m *S2CShopItemsResult) Reset()                    { *m = S2CShopItemsResult{} }
func (m *S2CShopItemsResult) String() string            { return proto.CompactTextString(m) }
func (*S2CShopItemsResult) ProtoMessage()               {}
func (*S2CShopItemsResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{128} }

func (m *S2CShopItemsResult) GetShopId() int32 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

func (m *S2CShopItemsResult) GetItems() []*S2CShopItem {
	if m != nil {
		return m.Items
	}
	return nil
}

// 购买商店物品
type C2SBuyShopItem struct {
	ItemId  int32 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	ItemNum int32 `protobuf:"varint,2,opt,name=item_num,json=itemNum" json:"item_num,omitempty"`
}

func (m *C2SBuyShopItem) Reset()                    { *m = C2SBuyShopItem{} }
func (m *C2SBuyShopItem) String() string            { return proto.CompactTextString(m) }
func (*C2SBuyShopItem) ProtoMessage()               {}
func (*C2SBuyShopItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{129} }

func (m *C2SBuyShopItem) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *C2SBuyShopItem) GetItemNum() int32 {
	if m != nil {
		return m.ItemNum
	}
	return 0
}

// 购买返回的物品
type S2CBuyShopItemResult struct {
	ShopId  int32     `protobuf:"varint,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	ItemId  int32     `protobuf:"varint,2,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	ItemNum int32     `protobuf:"varint,3,opt,name=item_num,json=itemNum" json:"item_num,omitempty"`
	AddItem *ItemInfo `protobuf:"bytes,4,opt,name=add_item,json=addItem" json:"add_item,omitempty"`
}

func (m *S2CBuyShopItemResult) Reset()                    { *m = S2CBuyShopItemResult{} }
func (m *S2CBuyShopItemResult) String() string            { return proto.CompactTextString(m) }
func (*S2CBuyShopItemResult) ProtoMessage()               {}
func (*S2CBuyShopItemResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{130} }

func (m *S2CBuyShopItemResult) GetShopId() int32 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

func (m *S2CBuyShopItemResult) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *S2CBuyShopItemResult) GetItemNum() int32 {
	if m != nil {
		return m.ItemNum
	}
	return 0
}

func (m *S2CBuyShopItemResult) GetAddItem() *ItemInfo {
	if m != nil {
		return m.AddItem
	}
	return nil
}

// 通知客户端商店需要刷新
type S2CShopNeedRefreshNotify struct {
}

func (m *S2CShopNeedRefreshNotify) Reset()                    { *m = S2CShopNeedRefreshNotify{} }
func (m *S2CShopNeedRefreshNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CShopNeedRefreshNotify) ProtoMessage()               {}
func (*S2CShopNeedRefreshNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{131} }

// 日常任务数据
type DialyTaskData struct {
	TaskId    int32 `protobuf:"varint,1,opt,name=TaskId" json:"TaskId,omitempty"`
	TaskValue int32 `protobuf:"varint,2,opt,name=TaskValue" json:"TaskValue,omitempty"`
	TaskState int32 `protobuf:"varint,3,opt,name=TaskState" json:"TaskState,omitempty"`
}

func (m *DialyTaskData) Reset()                    { *m = DialyTaskData{} }
func (m *DialyTaskData) String() string            { return proto.CompactTextString(m) }
func (*DialyTaskData) ProtoMessage()               {}
func (*DialyTaskData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{132} }

func (m *DialyTaskData) GetTaskId() int32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *DialyTaskData) GetTaskValue() int32 {
	if m != nil {
		return m.TaskValue
	}
	return 0
}

func (m *DialyTaskData) GetTaskState() int32 {
	if m != nil {
		return m.TaskState
	}
	return 0
}

// 客户端向服务器请求日常任务数据
type C2SGetDialyTaskInfo struct {
}

func (m *C2SGetDialyTaskInfo) Reset()                    { *m = C2SGetDialyTaskInfo{} }
func (m *C2SGetDialyTaskInfo) String() string            { return proto.CompactTextString(m) }
func (*C2SGetDialyTaskInfo) ProtoMessage()               {}
func (*C2SGetDialyTaskInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{133} }

// 服务器向客户端发送任务数据
type S2CSyncDialyTask struct {
	TaskList []*DialyTaskData `protobuf:"bytes,1,rep,name=TaskList" json:"TaskList,omitempty"`
}

func (m *S2CSyncDialyTask) Reset()                    { *m = S2CSyncDialyTask{} }
func (m *S2CSyncDialyTask) String() string            { return proto.CompactTextString(m) }
func (*S2CSyncDialyTask) ProtoMessage()               {}
func (*S2CSyncDialyTask) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{134} }

func (m *S2CSyncDialyTask) GetTaskList() []*DialyTaskData {
	if m != nil {
		return m.TaskList
	}
	return nil
}

// 服务器向客户端通知任务值变化
type S2CNotifyTaskValueChg struct {
	TaskId    int32 `protobuf:"varint,1,opt,name=TaskId" json:"TaskId,omitempty"`
	TaskValue int32 `protobuf:"varint,2,opt,name=TaskValue" json:"TaskValue,omitempty"`
	TaskState int32 `protobuf:"varint,3,opt,name=TaskState" json:"TaskState,omitempty"`
}

func (m *S2CNotifyTaskValueChg) Reset()                    { *m = S2CNotifyTaskValueChg{} }
func (m *S2CNotifyTaskValueChg) String() string            { return proto.CompactTextString(m) }
func (*S2CNotifyTaskValueChg) ProtoMessage()               {}
func (*S2CNotifyTaskValueChg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{135} }

func (m *S2CNotifyTaskValueChg) GetTaskId() int32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *S2CNotifyTaskValueChg) GetTaskValue() int32 {
	if m != nil {
		return m.TaskValue
	}
	return 0
}

func (m *S2CNotifyTaskValueChg) GetTaskState() int32 {
	if m != nil {
		return m.TaskState
	}
	return 0
}

// 成就数据
type AchieveData struct {
	AchieveId    int32 `protobuf:"varint,1,opt,name=AchieveId" json:"AchieveId,omitempty"`
	AchieveValue int32 `protobuf:"varint,2,opt,name=AchieveValue" json:"AchieveValue,omitempty"`
	AchieveState int32 `protobuf:"varint,3,opt,name=AchieveState" json:"AchieveState,omitempty"`
}

func (m *AchieveData) Reset()                    { *m = AchieveData{} }
func (m *AchieveData) String() string            { return proto.CompactTextString(m) }
func (*AchieveData) ProtoMessage()               {}
func (*AchieveData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{136} }

func (m *AchieveData) GetAchieveId() int32 {
	if m != nil {
		return m.AchieveId
	}
	return 0
}

func (m *AchieveData) GetAchieveValue() int32 {
	if m != nil {
		return m.AchieveValue
	}
	return 0
}

func (m *AchieveData) GetAchieveState() int32 {
	if m != nil {
		return m.AchieveState
	}
	return 0
}

// 客户端向服务器请求成就数据
type C2SGetAchieve struct {
}

func (m *C2SGetAchieve) Reset()                    { *m = C2SGetAchieve{} }
func (m *C2SGetAchieve) String() string            { return proto.CompactTextString(m) }
func (*C2SGetAchieve) ProtoMessage()               {}
func (*C2SGetAchieve) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{137} }

// 服务器向客户端发送成就数据
type S2CSyncAchieveData struct {
	AchieveList []*AchieveData `protobuf:"bytes,1,rep,name=AchieveList" json:"AchieveList,omitempty"`
}

func (m *S2CSyncAchieveData) Reset()                    { *m = S2CSyncAchieveData{} }
func (m *S2CSyncAchieveData) String() string            { return proto.CompactTextString(m) }
func (*S2CSyncAchieveData) ProtoMessage()               {}
func (*S2CSyncAchieveData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{138} }

func (m *S2CSyncAchieveData) GetAchieveList() []*AchieveData {
	if m != nil {
		return m.AchieveList
	}
	return nil
}

// 服务器向客户端通知成就值变化
type S2CNotifyAchieveValueChg struct {
	AchieveId    int32 `protobuf:"varint,1,opt,name=AchieveId" json:"AchieveId,omitempty"`
	AchieveValue int32 `protobuf:"varint,2,opt,name=AchieveValue" json:"AchieveValue,omitempty"`
	AchieveState int32 `protobuf:"varint,3,opt,name=AchieveState" json:"AchieveState,omitempty"`
}

func (m *S2CNotifyAchieveValueChg) Reset()                    { *m = S2CNotifyAchieveValueChg{} }
func (m *S2CNotifyAchieveValueChg) String() string            { return proto.CompactTextString(m) }
func (*S2CNotifyAchieveValueChg) ProtoMessage()               {}
func (*S2CNotifyAchieveValueChg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{139} }

func (m *S2CNotifyAchieveValueChg) GetAchieveId() int32 {
	if m != nil {
		return m.AchieveId
	}
	return 0
}

func (m *S2CNotifyAchieveValueChg) GetAchieveValue() int32 {
	if m != nil {
		return m.AchieveValue
	}
	return 0
}

func (m *S2CNotifyAchieveValueChg) GetAchieveState() int32 {
	if m != nil {
		return m.AchieveState
	}
	return 0
}

// 客户端向服务器请求日常任务奖励
type C2SGetTaskReward struct {
	TaskId int32 `protobuf:"varint,1,opt,name=TaskId" json:"TaskId,omitempty"`
}

func (m *C2SGetTaskReward) Reset()                    { *m = C2SGetTaskReward{} }
func (m *C2SGetTaskReward) String() string            { return proto.CompactTextString(m) }
func (*C2SGetTaskReward) ProtoMessage()               {}
func (*C2SGetTaskReward) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{140} }

func (m *C2SGetTaskReward) GetTaskId() int32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

// 服务器向客户端发送任务结果
type S2CRetTaskReward struct {
	TaskId  int32 `protobuf:"varint,1,opt,name=TaskId" json:"TaskId,omitempty"`
	Coin    int32 `protobuf:"varint,2,opt,name=Coin" json:"Coin,omitempty"`
	Diamond int32 `protobuf:"varint,3,opt,name=Diamond" json:"Diamond,omitempty"`
	Exp     int32 `protobuf:"varint,4,opt,name=Exp" json:"Exp,omitempty"`
	CurLvl  int32 `protobuf:"varint,5,opt,name=CurLvl" json:"CurLvl,omitempty"`
}

func (m *S2CRetTaskReward) Reset()                    { *m = S2CRetTaskReward{} }
func (m *S2CRetTaskReward) String() string            { return proto.CompactTextString(m) }
func (*S2CRetTaskReward) ProtoMessage()               {}
func (*S2CRetTaskReward) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{141} }

func (m *S2CRetTaskReward) GetTaskId() int32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *S2CRetTaskReward) GetCoin() int32 {
	if m != nil {
		return m.Coin
	}
	return 0
}

func (m *S2CRetTaskReward) GetDiamond() int32 {
	if m != nil {
		return m.Diamond
	}
	return 0
}

func (m *S2CRetTaskReward) GetExp() int32 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *S2CRetTaskReward) GetCurLvl() int32 {
	if m != nil {
		return m.CurLvl
	}
	return 0
}

// 客户端向服务器请求成就奖励
type C2SGetAchieveReward struct {
	AchieveReward int32 `protobuf:"varint,1,opt,name=AchieveReward" json:"AchieveReward,omitempty"`
}

func (m *C2SGetAchieveReward) Reset()                    { *m = C2SGetAchieveReward{} }
func (m *C2SGetAchieveReward) String() string            { return proto.CompactTextString(m) }
func (*C2SGetAchieveReward) ProtoMessage()               {}
func (*C2SGetAchieveReward) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{142} }

func (m *C2SGetAchieveReward) GetAchieveReward() int32 {
	if m != nil {
		return m.AchieveReward
	}
	return 0
}

// 服务器向客户端完成成就
type S2CRetAchieveReward struct {
	TaskId  int32 `protobuf:"varint,1,opt,name=TaskId" json:"TaskId,omitempty"`
	Coin    int32 `protobuf:"varint,2,opt,name=Coin" json:"Coin,omitempty"`
	Diamond int32 `protobuf:"varint,3,opt,name=Diamond" json:"Diamond,omitempty"`
	Exp     int32 `protobuf:"varint,4,opt,name=Exp" json:"Exp,omitempty"`
	CurLvl  int32 `protobuf:"varint,5,opt,name=CurLvl" json:"CurLvl,omitempty"`
}

func (m *S2CRetAchieveReward) Reset()                    { *m = S2CRetAchieveReward{} }
func (m *S2CRetAchieveReward) String() string            { return proto.CompactTextString(m) }
func (*S2CRetAchieveReward) ProtoMessage()               {}
func (*S2CRetAchieveReward) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{143} }

func (m *S2CRetAchieveReward) GetTaskId() int32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *S2CRetAchieveReward) GetCoin() int32 {
	if m != nil {
		return m.Coin
	}
	return 0
}

func (m *S2CRetAchieveReward) GetDiamond() int32 {
	if m != nil {
		return m.Diamond
	}
	return 0
}

func (m *S2CRetAchieveReward) GetExp() int32 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *S2CRetAchieveReward) GetCurLvl() int32 {
	if m != nil {
		return m.CurLvl
	}
	return 0
}

// ----------------------------------------------------------------------------
// 发送世界聊天消息
type C2SWorldChatSend struct {
	Content []byte `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (m *C2SWorldChatSend) Reset()                    { *m = C2SWorldChatSend{} }
func (m *C2SWorldChatSend) String() string            { return proto.CompactTextString(m) }
func (*C2SWorldChatSend) ProtoMessage()               {}
func (*C2SWorldChatSend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{144} }

func (m *C2SWorldChatSend) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type S2CWorldChatSendResult struct {
	Content []byte `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (m *S2CWorldChatSendResult) Reset()                    { *m = S2CWorldChatSendResult{} }
func (m *S2CWorldChatSendResult) String() string            { return proto.CompactTextString(m) }
func (*S2CWorldChatSendResult) ProtoMessage()               {}
func (*S2CWorldChatSendResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{145} }

func (m *S2CWorldChatSendResult) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

// 拉取世界聊天消息
type C2SWorldChatMsgPull struct {
}

func (m *C2SWorldChatMsgPull) Reset()                    { *m = C2SWorldChatMsgPull{} }
func (m *C2SWorldChatMsgPull) String() string            { return proto.CompactTextString(m) }
func (*C2SWorldChatMsgPull) ProtoMessage()               {}
func (*C2SWorldChatMsgPull) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{146} }

type WorldChatItem struct {
	Content     []byte `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
	PlayerId    int32  `protobuf:"varint,2,opt,name=PlayerId" json:"PlayerId,omitempty"`
	PlayerName  string `protobuf:"bytes,3,opt,name=PlayerName" json:"PlayerName,omitempty"`
	PlayerHead  string `protobuf:"bytes,4,opt,name=PlayerHead" json:"PlayerHead,omitempty"`
	PlayerLevel int32  `protobuf:"varint,5,opt,name=PlayerLevel" json:"PlayerLevel,omitempty"`
	IsZaned     int32  `protobuf:"varint,6,opt,name=IsZaned" json:"IsZaned,omitempty"`
	IsFriend    int32  `protobuf:"varint,7,opt,name=IsFriend" json:"IsFriend,omitempty"`
	SendTime    int32  `protobuf:"varint,8,opt,name=SendTime" json:"SendTime,omitempty"`
}

func (m *WorldChatItem) Reset()                    { *m = WorldChatItem{} }
func (m *WorldChatItem) String() string            { return proto.CompactTextString(m) }
func (*WorldChatItem) ProtoMessage()               {}
func (*WorldChatItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{147} }

func (m *WorldChatItem) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *WorldChatItem) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *WorldChatItem) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *WorldChatItem) GetPlayerHead() string {
	if m != nil {
		return m.PlayerHead
	}
	return ""
}

func (m *WorldChatItem) GetPlayerLevel() int32 {
	if m != nil {
		return m.PlayerLevel
	}
	return 0
}

func (m *WorldChatItem) GetIsZaned() int32 {
	if m != nil {
		return m.IsZaned
	}
	return 0
}

func (m *WorldChatItem) GetIsFriend() int32 {
	if m != nil {
		return m.IsFriend
	}
	return 0
}

func (m *WorldChatItem) GetSendTime() int32 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

type S2CWorldChatMsgPullResult struct {
	Items []*WorldChatItem `protobuf:"bytes,1,rep,name=Items" json:"Items,omitempty"`
}

func (m *S2CWorldChatMsgPullResult) Reset()                    { *m = S2CWorldChatMsgPullResult{} }
func (m *S2CWorldChatMsgPullResult) String() string            { return proto.CompactTextString(m) }
func (*S2CWorldChatMsgPullResult) ProtoMessage()               {}
func (*S2CWorldChatMsgPullResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{148} }

func (m *S2CWorldChatMsgPullResult) GetItems() []*WorldChatItem {
	if m != nil {
		return m.Items
	}
	return nil
}

// 返回世界聊天封禁时间
type S2CWorldChatForbid struct {
	EndTime string `protobuf:"bytes,1,opt,name=EndTime" json:"EndTime,omitempty"`
}

func (m *S2CWorldChatForbid) Reset()                    { *m = S2CWorldChatForbid{} }
func (m *S2CWorldChatForbid) String() string            { return proto.CompactTextString(m) }
func (*S2CWorldChatForbid) ProtoMessage()               {}
func (*S2CWorldChatForbid) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{149} }

func (m *S2CWorldChatForbid) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

// 服务器向客户端同步引导数据
type S2CSyncGuideData struct {
	GuideIds []int32 `protobuf:"varint,1,rep,packed,name=GuideIds" json:"GuideIds,omitempty"`
}

func (m *S2CSyncGuideData) Reset()                    { *m = S2CSyncGuideData{} }
func (m *S2CSyncGuideData) String() string            { return proto.CompactTextString(m) }
func (*S2CSyncGuideData) ProtoMessage()               {}
func (*S2CSyncGuideData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{150} }

func (m *S2CSyncGuideData) GetGuideIds() []int32 {
	if m != nil {
		return m.GuideIds
	}
	return nil
}

// 客户端向服务器存储引导数据
type C2SSaveGuideData struct {
	GuideId int32 `protobuf:"varint,1,opt,name=GuideId" json:"GuideId,omitempty"`
}

func (m *C2SSaveGuideData) Reset()                    { *m = C2SSaveGuideData{} }
func (m *C2SSaveGuideData) String() string            { return proto.CompactTextString(m) }
func (*C2SSaveGuideData) ProtoMessage()               {}
func (*C2SSaveGuideData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{151} }

func (m *C2SSaveGuideData) GetGuideId() int32 {
	if m != nil {
		return m.GuideId
	}
	return 0
}

// 服务器向客户端返回引导存储
type S2CRetSaveGuideData struct {
	GuideId int32 `protobuf:"varint,1,opt,name=GuideId" json:"GuideId,omitempty"`
}

func (m *S2CRetSaveGuideData) Reset()                    { *m = S2CRetSaveGuideData{} }
func (m *S2CRetSaveGuideData) String() string            { return proto.CompactTextString(m) }
func (*S2CRetSaveGuideData) ProtoMessage()               {}
func (*S2CRetSaveGuideData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{152} }

func (m *S2CRetSaveGuideData) GetGuideId() int32 {
	if m != nil {
		return m.GuideId
	}
	return 0
}

func init() {
	proto.RegisterType((*S2CStateNotify)(nil), "msg.client_message.S2CStateNotify")
	proto.RegisterType((*C2SHeartbeat)(nil), "msg.client_message.C2SHeartbeat")
	proto.RegisterType((*C2SDataSyncRequest)(nil), "msg.client_message.C2SDataSyncRequest")
	proto.RegisterType((*C2S_TEST_COMMAND)(nil), "msg.client_message.C2S_TEST_COMMAND")
	proto.RegisterType((*ItemInfo)(nil), "msg.client_message.ItemInfo")
	proto.RegisterType((*FriendInfo)(nil), "msg.client_message.FriendInfo")
	proto.RegisterType((*C2SLoginRequest)(nil), "msg.client_message.C2SLoginRequest")
	proto.RegisterType((*ServerInfo)(nil), "msg.client_message.ServerInfo")
	proto.RegisterType((*S2CLoginResponse)(nil), "msg.client_message.S2CLoginResponse")
	proto.RegisterType((*S2COtherPlaceLogin)(nil), "msg.client_message.S2COtherPlaceLogin")
	proto.RegisterType((*C2SSelectServerRequest)(nil), "msg.client_message.C2SSelectServerRequest")
	proto.RegisterType((*S2CSelectServerResponse)(nil), "msg.client_message.S2CSelectServerResponse")
	proto.RegisterType((*C2S_MSG_DATA)(nil), "msg.client_message.C2S_MSG_DATA")
	proto.RegisterType((*S2C_MSG_DATA)(nil), "msg.client_message.S2C_MSG_DATA")
	proto.RegisterType((*C2SEnterGameRequest)(nil), "msg.client_message.C2SEnterGameRequest")
	proto.RegisterType((*S2CEnterGameResponse)(nil), "msg.client_message.S2CEnterGameResponse")
	proto.RegisterType((*S2CEnterGameCompleteNotify)(nil), "msg.client_message.S2CEnterGameCompleteNotify")
	proto.RegisterType((*C2SLeaveGameRequest)(nil), "msg.client_message.C2SLeaveGameRequest")
	proto.RegisterType((*S2CLeaveGameResponse)(nil), "msg.client_message.S2CLeaveGameResponse")
	proto.RegisterType((*S2CPlayerInfoResponse)(nil), "msg.client_message.S2CPlayerInfoResponse")
	proto.RegisterType((*C2SRolesRequest)(nil), "msg.client_message.C2SRolesRequest")
	proto.RegisterType((*AttrData)(nil), "msg.client_message.AttrData")
	proto.RegisterType((*Role)(nil), "msg.client_message.Role")
	proto.RegisterType((*S2CRolesResponse)(nil), "msg.client_message.S2CRolesResponse")
	proto.RegisterType((*S2CRolesChangeNotify)(nil), "msg.client_message.S2CRolesChangeNotify")
	proto.RegisterType((*C2SSetTeamRequest)(nil), "msg.client_message.C2SSetTeamRequest")
	proto.RegisterType((*S2CSetTeamResponse)(nil), "msg.client_message.S2CSetTeamResponse")
	proto.RegisterType((*TeamData)(nil), "msg.client_message.TeamData")
	proto.RegisterType((*S2CTeamsResponse)(nil), "msg.client_message.S2CTeamsResponse")
	proto.RegisterType((*BattleMemberItem)(nil), "msg.client_message.BattleMemberItem")
	proto.RegisterType((*BattleFighter)(nil), "msg.client_message.BattleFighter")
	proto.RegisterType((*BattleMemberBuff)(nil), "msg.client_message.BattleMemberBuff")
	proto.RegisterType((*BattleReportItem)(nil), "msg.client_message.BattleReportItem")
	proto.RegisterType((*BattleRoundReports)(nil), "msg.client_message.BattleRoundReports")
	proto.RegisterType((*C2SBattleResultRequest)(nil), "msg.client_message.C2SBattleResultRequest")
	proto.RegisterType((*S2CBattleResultResponse)(nil), "msg.client_message.S2CBattleResultResponse")
	proto.RegisterType((*C2SBattleRecordListRequest)(nil), "msg.client_message.C2SBattleRecordListRequest")
	proto.RegisterType((*BattleRecordData)(nil), "msg.client_message.BattleRecordData")
	proto.RegisterType((*S2CBattleRecordListResponse)(nil), "msg.client_message.S2CBattleRecordListResponse")
	proto.RegisterType((*C2SBattleRecordRequest)(nil), "msg.client_message.C2SBattleRecordRequest")
	proto.RegisterType((*S2CBattleRecordResponse)(nil), "msg.client_message.S2CBattleRecordResponse")
	proto.RegisterType((*C2SBattleRecordDeleteRequest)(nil), "msg.client_message.C2SBattleRecordDeleteRequest")
	proto.RegisterType((*S2CBattleRecordDeleteResponse)(nil), "msg.client_message.S2CBattleRecordDeleteResponse")
	proto.RegisterType((*C2SCampaignDataRequest)(nil), "msg.client_message.C2SCampaignDataRequest")
	proto.RegisterType((*S2CCampaignDataResponse)(nil), "msg.client_message.S2CCampaignDataResponse")
	proto.RegisterType((*C2SCampaignHangupIncomeRequest)(nil), "msg.client_message.C2SCampaignHangupIncomeRequest")
	proto.RegisterType((*S2CCampaignHangupIncomeResponse)(nil), "msg.client_message.S2CCampaignHangupIncomeResponse")
	proto.RegisterType((*C2SBattleSetHangupCampaignRequest)(nil), "msg.client_message.C2SBattleSetHangupCampaignRequest")
	proto.RegisterType((*S2CBattleSetHangupCampaignResponse)(nil), "msg.client_message.S2CBattleSetHangupCampaignResponse")
	proto.RegisterType((*C2SItemsSyncRequest)(nil), "msg.client_message.C2SItemsSyncRequest")
	proto.RegisterType((*S2CItemsSync)(nil), "msg.client_message.S2CItemsSync")
	proto.RegisterType((*S2CItemsUpdate)(nil), "msg.client_message.S2CItemsUpdate")
	proto.RegisterType((*C2SItemFusionRequest)(nil), "msg.client_message.C2SItemFusionRequest")
	proto.RegisterType((*S2CItemFusionResponse)(nil), "msg.client_message.S2CItemFusionResponse")
	proto.RegisterType((*C2SItemSellRequest)(nil), "msg.client_message.C2SItemSellRequest")
	proto.RegisterType((*S2CItemSellResponse)(nil), "msg.client_message.S2CItemSellResponse")
	proto.RegisterType((*C2SRoleLevelUpRequest)(nil), "msg.client_message.C2SRoleLevelUpRequest")
	proto.RegisterType((*S2CRoleLevelUpResponse)(nil), "msg.client_message.S2CRoleLevelUpResponse")
	proto.RegisterType((*C2SRoleRankUpRequest)(nil), "msg.client_message.C2SRoleRankUpRequest")
	proto.RegisterType((*S2CRoleRankUpResponse)(nil), "msg.client_message.S2CRoleRankUpResponse")
	proto.RegisterType((*C2SRoleDecomposeRequest)(nil), "msg.client_message.C2SRoleDecomposeRequest")
	proto.RegisterType((*S2CRoleDecomposeResponse)(nil), "msg.client_message.S2CRoleDecomposeResponse")
	proto.RegisterType((*C2SRoleFusionRequest)(nil), "msg.client_message.C2SRoleFusionRequest")
	proto.RegisterType((*S2CRoleFusionResponse)(nil), "msg.client_message.S2CRoleFusionResponse")
	proto.RegisterType((*C2SMailSendRequest)(nil), "msg.client_message.C2SMailSendRequest")
	proto.RegisterType((*S2CMailSendResponse)(nil), "msg.client_message.S2CMailSendResponse")
	proto.RegisterType((*C2SMailListRequest)(nil), "msg.client_message.C2SMailListRequest")
	proto.RegisterType((*MailBasicData)(nil), "msg.client_message.MailBasicData")
	proto.RegisterType((*S2CMailListResponse)(nil), "msg.client_message.S2CMailListResponse")
	proto.RegisterType((*C2SMailDetailRequest)(nil), "msg.client_message.C2SMailDetailRequest")
	proto.RegisterType((*MailDetail)(nil), "msg.client_message.MailDetail")
	proto.RegisterType((*S2CMailDetailResponse)(nil), "msg.client_message.S2CMailDetailResponse")
	proto.RegisterType((*C2SMailGetAttachedItemsRequest)(nil), "msg.client_message.C2SMailGetAttachedItemsRequest")
	proto.RegisterType((*S2CMailGetAttachedItemsResponse)(nil), "msg.client_message.S2CMailGetAttachedItemsResponse")
	proto.RegisterType((*C2SMailDeleteRequest)(nil), "msg.client_message.C2SMailDeleteRequest")
	proto.RegisterType((*S2CMailDeleteResponse)(nil), "msg.client_message.S2CMailDeleteResponse")
	proto.RegisterType((*C2STalentUpRequest)(nil), "msg.client_message.C2STalentUpRequest")
	proto.RegisterType((*S2CTalentUpResponse)(nil), "msg.client_message.S2CTalentUpResponse")
	proto.RegisterType((*C2STalentListRequest)(nil), "msg.client_message.C2STalentListRequest")
	proto.RegisterType((*TalentInfo)(nil), "msg.client_message.TalentInfo")
	proto.RegisterType((*S2CTalentListResponse)(nil), "msg.client_message.S2CTalentListResponse")
	proto.RegisterType((*C2STowerDataRequest)(nil), "msg.client_message.C2STowerDataRequest")
	proto.RegisterType((*S2CTowerDataResponse)(nil), "msg.client_message.S2CTowerDataResponse")
	proto.RegisterType((*C2STowerRecordsInfoRequest)(nil), "msg.client_message.C2STowerRecordsInfoRequest")
	proto.RegisterType((*TowerFightRecord)(nil), "msg.client_message.TowerFightRecord")
	proto.RegisterType((*S2CTowerRecordsInfoResponse)(nil), "msg.client_message.S2CTowerRecordsInfoResponse")
	proto.RegisterType((*C2STowerRecordDataRequest)(nil), "msg.client_message.C2STowerRecordDataRequest")
	proto.RegisterType((*S2CTowerRecordDataResponse)(nil), "msg.client_message.S2CTowerRecordDataResponse")
	proto.RegisterType((*C2STowerRankingListRequest)(nil), "msg.client_message.C2STowerRankingListRequest")
	proto.RegisterType((*TowerRankInfo)(nil), "msg.client_message.TowerRankInfo")
	proto.RegisterType((*S2CTowerRankingListResponse)(nil), "msg.client_message.S2CTowerRankingListResponse")
	proto.RegisterType((*C2SFriendSearch)(nil), "msg.client_message.C2SFriendSearch")
	proto.RegisterType((*C2SFriendSearchById)(nil), "msg.client_message.C2SFriendSearchById")
	proto.RegisterType((*S2CFriendSearchResult)(nil), "msg.client_message.S2CFriendSearchResult")
	proto.RegisterType((*C2SGetFriendList)(nil), "msg.client_message.C2SGetFriendList")
	proto.RegisterType((*FriendReq)(nil), "msg.client_message.FriendReq")
	proto.RegisterType((*S2CRetFriendListResult)(nil), "msg.client_message.S2CRetFriendListResult")
	proto.RegisterType((*S2CFriendStateNotify)(nil), "msg.client_message.S2CFriendStateNotify")
	proto.RegisterType((*S2CFriendReqNotify)(nil), "msg.client_message.S2CFriendReqNotify")
	proto.RegisterType((*C2SAddFriendByPId)(nil), "msg.client_message.C2SAddFriendByPId")
	proto.RegisterType((*C2SAddFriendByName)(nil), "msg.client_message.C2SAddFriendByName")
	proto.RegisterType((*S2CAddFriendResult)(nil), "msg.client_message.S2CAddFriendResult")
	proto.RegisterType((*C2SAgreeFriend)(nil), "msg.client_message.C2SAgreeFriend")
	proto.RegisterType((*S2CAgreeFriendResult)(nil), "msg.client_message.S2CAgreeFriendResult")
	proto.RegisterType((*C2SRefuseFriend)(nil), "msg.client_message.C2SRefuseFriend")
	proto.RegisterType((*S2CRefuseFriendResult)(nil), "msg.client_message.S2CRefuseFriendResult")
	proto.RegisterType((*C2SRemoveFriend)(nil), "msg.client_message.C2SRemoveFriend")
	proto.RegisterType((*S2CRemoveFriendResult)(nil), "msg.client_message.S2CRemoveFriendResult")
	proto.RegisterType((*C2SGiveFriendPoints)(nil), "msg.client_message.C2SGiveFriendPoints")
	proto.RegisterType((*FriendPointsResult)(nil), "msg.client_message.FriendPointsResult")
	proto.RegisterType((*S2CGiveFriendPointsResult)(nil), "msg.client_message.S2CGiveFriendPointsResult")
	proto.RegisterType((*C2SGetFriendPoints)(nil), "msg.client_message.C2SGetFriendPoints")
	proto.RegisterType((*FriendPoints)(nil), "msg.client_message.FriendPoints")
	proto.RegisterType((*S2CGetFriendPointsResult)(nil), "msg.client_message.S2CGetFriendPointsResult")
	proto.RegisterType((*C2SFriendChat)(nil), "msg.client_message.C2SFriendChat")
	proto.RegisterType((*S2CFriendChatResult)(nil), "msg.client_message.S2CFriendChatResult")
	proto.RegisterType((*C2SFriendGetUnreadMessageNum)(nil), "msg.client_message.C2SFriendGetUnreadMessageNum")
	proto.RegisterType((*FriendUnreadMessageNumData)(nil), "msg.client_message.FriendUnreadMessageNumData")
	proto.RegisterType((*S2CFriendGetUnreadMessageNumResult)(nil), "msg.client_message.S2CFriendGetUnreadMessageNumResult")
	proto.RegisterType((*C2SFriendPullUnreadMessage)(nil), "msg.client_message.C2SFriendPullUnreadMessage")
	proto.RegisterType((*FriendChatData)(nil), "msg.client_message.FriendChatData")
	proto.RegisterType((*S2CFriendPullUnreadMessageResult)(nil), "msg.client_message.S2CFriendPullUnreadMessageResult")
	proto.RegisterType((*C2SFriendConfirmUnreadMessage)(nil), "msg.client_message.C2SFriendConfirmUnreadMessage")
	proto.RegisterType((*S2CFriendConfirmUnreadMessageResult)(nil), "msg.client_message.S2CFriendConfirmUnreadMessageResult")
	proto.RegisterType((*C2SGetOnlineFriends)(nil), "msg.client_message.C2SGetOnlineFriends")
	proto.RegisterType((*S2CRetOnlineFriends)(nil), "msg.client_message.S2CRetOnlineFriends")
	proto.RegisterType((*C2SShopItems)(nil), "msg.client_message.C2SShopItems")
	proto.RegisterType((*S2CShopItem)(nil), "msg.client_message.S2CShopItem")
	proto.RegisterType((*S2CShopItemsResult)(nil), "msg.client_message.S2CShopItemsResult")
	proto.RegisterType((*C2SBuyShopItem)(nil), "msg.client_message.C2SBuyShopItem")
	proto.RegisterType((*S2CBuyShopItemResult)(nil), "msg.client_message.S2CBuyShopItemResult")
	proto.RegisterType((*S2CShopNeedRefreshNotify)(nil), "msg.client_message.S2CShopNeedRefreshNotify")
	proto.RegisterType((*DialyTaskData)(nil), "msg.client_message.DialyTaskData")
	proto.RegisterType((*C2SGetDialyTaskInfo)(nil), "msg.client_message.C2SGetDialyTaskInfo")
	proto.RegisterType((*S2CSyncDialyTask)(nil), "msg.client_message.S2CSyncDialyTask")
	proto.RegisterType((*S2CNotifyTaskValueChg)(nil), "msg.client_message.S2CNotifyTaskValueChg")
	proto.RegisterType((*AchieveData)(nil), "msg.client_message.AchieveData")
	proto.RegisterType((*C2SGetAchieve)(nil), "msg.client_message.C2SGetAchieve")
	proto.RegisterType((*S2CSyncAchieveData)(nil), "msg.client_message.S2CSyncAchieveData")
	proto.RegisterType((*S2CNotifyAchieveValueChg)(nil), "msg.client_message.S2CNotifyAchieveValueChg")
	proto.RegisterType((*C2SGetTaskReward)(nil), "msg.client_message.C2SGetTaskReward")
	proto.RegisterType((*S2CRetTaskReward)(nil), "msg.client_message.S2CRetTaskReward")
	proto.RegisterType((*C2SGetAchieveReward)(nil), "msg.client_message.C2SGetAchieveReward")
	proto.RegisterType((*S2CRetAchieveReward)(nil), "msg.client_message.S2CRetAchieveReward")
	proto.RegisterType((*C2SWorldChatSend)(nil), "msg.client_message.C2SWorldChatSend")
	proto.RegisterType((*S2CWorldChatSendResult)(nil), "msg.client_message.S2CWorldChatSendResult")
	proto.RegisterType((*C2SWorldChatMsgPull)(nil), "msg.client_message.C2SWorldChatMsgPull")
	proto.RegisterType((*WorldChatItem)(nil), "msg.client_message.WorldChatItem")
	proto.RegisterType((*S2CWorldChatMsgPullResult)(nil), "msg.client_message.S2CWorldChatMsgPullResult")
	proto.RegisterType((*S2CWorldChatForbid)(nil), "msg.client_message.S2CWorldChatForbid")
	proto.RegisterType((*S2CSyncGuideData)(nil), "msg.client_message.S2CSyncGuideData")
	proto.RegisterType((*C2SSaveGuideData)(nil), "msg.client_message.C2SSaveGuideData")
	proto.RegisterType((*S2CRetSaveGuideData)(nil), "msg.client_message.S2CRetSaveGuideData")
	proto.RegisterEnum("msg.client_message.E_ERR", E_ERR_name, E_ERR_value)
	proto.RegisterEnum("msg.client_message.MODULE", MODULE_name, MODULE_value)
}

func init() { proto.RegisterFile("client_message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 5672 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xcc, 0x7c, 0x59, 0x90, 0x23, 0xc7,
	0x71, 0xf6, 0x8f, 0xb9, 0x27, 0xf7, 0x60, 0xb3, 0xb9, 0x3b, 0x04, 0x87, 0xc3, 0xe5, 0xb2, 0xb8,
	0x22, 0xf7, 0xa7, 0x96, 0x43, 0x12, 0x94, 0xa8, 0x0d, 0x1d, 0x14, 0x7b, 0x1a, 0x3d, 0x00, 0xbc,
	0x40, 0x03, 0xec, 0xee, 0xd9, 0xe5, 0xca, 0x72, 0x20, 0x7a, 0x81, 0xda, 0x19, 0x78, 0x80, 0xc6,
	0x10, 0xdd, 0x33, 0xd4, 0x38, 0x6c, 0x87, 0x4c, 0x59, 0xb6, 0x42, 0x6f, 0x5e, 0x5b, 0x17, 0x45,
	0x4a, 0x8a, 0x7d, 0xd4, 0x9b, 0x22, 0x7c, 0x3c, 0xd8, 0x96, 0xf5, 0xa4, 0x07, 0xc9, 0xd7, 0x83,
	0xc3, 0xc7, 0x9b, 0x6c, 0xd9, 0x92, 0x22, 0x64, 0xf9, 0x08, 0x87, 0xc3, 0xa6, 0x75, 0x39, 0x2a,
	0xab, 0xaa, 0xab, 0x1a, 0xd3, 0x98, 0x83, 0xb2, 0x15, 0xde, 0x97, 0xed, 0xcc, 0xfe, 0x2a, 0x2b,
	0x33, 0x2b, 0x2b, 0x2b, 0xab, 0xba, 0x30, 0x70, 0xae, 0xd3, 0xef, 0xd1, 0x28, 0x69, 0x0f, 0x68,
	0x1c, 0x87, 0x9b, 0x74, 0x75, 0x67, 0x34, 0x4c, 0x86, 0xa6, 0x39, 0x88, 0x37, 0x57, 0xb3, 0x6f,
	0x48, 0x1d, 0xce, 0xfa, 0x25, 0xdb, 0x4f, 0xc2, 0x84, 0xba, 0xc3, 0xa4, 0x77, 0x7b, 0xdf, 0x5c,
	0x82, 0x39, 0x24, 0xe3, 0x62, 0xe1, 0xe2, 0xf4, 0xe5, 0x59, 0x4f, 0x50, 0x26, 0x81, 0xd3, 0x76,
	0x18, 0x75, 0x68, 0x5f, 0xbc, 0x9d, 0xc2, 0xb7, 0x19, 0x1e, 0x39, 0x0b, 0xa7, 0xed, 0x92, 0x5f,
	0xa5, 0xe1, 0x28, 0xb9, 0x45, 0xc3, 0x84, 0x7c, 0xac, 0x00, 0xa6, 0x5d, 0xf2, 0xcb, 0x61, 0x12,
	0xfa, 0xfb, 0x51, 0xc7, 0xa3, 0x2f, 0xef, 0xd2, 0x38, 0x31, 0x4d, 0x98, 0x59, 0x0b, 0x63, 0x5a,
	0x2c, 0x5c, 0x2c, 0x5c, 0x5e, 0xf0, 0xf0, 0xd9, 0x3c, 0x07, 0xb3, 0xb5, 0x84, 0x0e, 0x98, 0x5c,
	0xc6, 0xe4, 0x04, 0xe3, 0x7a, 0xc3, 0x3e, 0x8d, 0x8b, 0xd3, 0x9c, 0x8b, 0x04, 0xe3, 0x06, 0x34,
	0x1c, 0xc4, 0xc5, 0x19, 0xce, 0x45, 0xc2, 0x5c, 0x81, 0x45, 0x3b, 0x1c, 0xec, 0x84, 0xbd, 0xcd,
	0x28, 0x2e, 0xce, 0xe2, 0x1b, 0xc5, 0x20, 0x57, 0xc1, 0xb0, 0x4b, 0x7e, 0x3b, 0x70, 0xfc, 0xa0,
	0x6d, 0x37, 0x1b, 0x0d, 0xcb, 0x2d, 0x9b, 0x06, 0x4c, 0x77, 0x06, 0x5d, 0x54, 0x63, 0xd1, 0x63,
	0x8f, 0x4c, 0xb3, 0x70, 0xb4, 0xc9, 0x8d, 0x5b, 0xf4, 0xf0, 0x99, 0xac, 0xc1, 0x02, 0x53, 0xa6,
	0x16, 0xdd, 0x1e, 0xb2, 0x3e, 0xd8, 0xb3, 0x7d, 0x7b, 0xb3, 0xc6, 0xdb, 0xcd, 0x7a, 0x8a, 0x61,
	0x16, 0x61, 0x9e, 0x11, 0xee, 0xee, 0x00, 0xad, 0x98, 0xf5, 0x24, 0x49, 0xbe, 0x33, 0x05, 0xb0,
	0x3e, 0xea, 0xd1, 0xa8, 0x8b, 0x62, 0x96, 0x61, 0xa1, 0xd5, 0x0f, 0xf7, 0xe9, 0x28, 0x95, 0x92,
	0xd2, 0x4c, 0x05, 0x37, 0x1c, 0x50, 0x94, 0xb0, 0xe8, 0xe1, 0x33, 0xe3, 0x55, 0x69, 0xd8, 0x45,
	0x2f, 0x2c, 0x7a, 0xf8, 0xcc, 0x9c, 0x50, 0xa7, 0x7b, 0xb4, 0x8f, 0x4e, 0x98, 0xf5, 0x38, 0xc1,
	0x24, 0x5f, 0xef, 0xed, 0xf0, 0x17, 0xb3, 0x5c, 0xb2, 0xa4, 0x99, 0xf2, 0xf5, 0x30, 0x4e, 0xea,
	0xc3, 0xcd, 0x5e, 0x54, 0x9c, 0xe3, 0xca, 0xa7, 0x0c, 0x36, 0xbe, 0x5c, 0xc3, 0xd6, 0xb0, 0x17,
	0x25, 0x71, 0x71, 0x1e, 0x01, 0x19, 0x9e, 0x79, 0x19, 0xee, 0xa9, 0xd3, 0xdb, 0x49, 0xa5, 0xb7,
	0x47, 0x7d, 0xda, 0x19, 0x46, 0xdd, 0xb8, 0xb8, 0x80, 0xb0, 0x71, 0xb6, 0xf9, 0x04, 0x18, 0x1b,
	0xd1, 0x88, 0x86, 0xdd, 0x06, 0x0f, 0x34, 0xe6, 0x93, 0x45, 0x84, 0x1e, 0xe0, 0xb3, 0x61, 0xf8,
	0x40, 0x18, 0x15, 0x01, 0x5f, 0xb3, 0x47, 0xf3, 0x02, 0x40, 0x2d, 0xfe, 0x40, 0x18, 0x05, 0xc3,
	0x6e, 0xb8, 0x5f, 0x3c, 0x85, 0x63, 0xa9, 0x71, 0x98, 0x95, 0xb5, 0xb8, 0x19, 0xf5, 0x7b, 0x11,
	0x2d, 0x9e, 0xc6, 0xb7, 0x29, 0x4d, 0x6e, 0xc2, 0x3d, 0x76, 0xc9, 0x47, 0x9b, 0x64, 0xbc, 0x19,
	0x30, 0x6d, 0x75, 0x3a, 0x72, 0x9c, 0xad, 0x4e, 0x07, 0x07, 0x20, 0x8c, 0xe3, 0x57, 0x86, 0xa3,
	0xae, 0x70, 0x74, 0x4a, 0xb3, 0x51, 0xb4, 0xb7, 0xc2, 0x28, 0xa2, 0x7d, 0xe1, 0x6f, 0x49, 0x92,
	0x17, 0x00, 0x7c, 0x3a, 0xda, 0xa3, 0x23, 0x1c, 0xc4, 0xb3, 0x30, 0x95, 0x0e, 0xdf, 0xd4, 0x84,
	0x81, 0x63, 0x98, 0x96, 0x10, 0x33, 0x55, 0x6b, 0x91, 0x04, 0x0c, 0xbf, 0x64, 0x0b, 0xe5, 0xe2,
	0x9d, 0x61, 0x14, 0xd3, 0x1c, 0xed, 0x58, 0x7c, 0x0f, 0xb7, 0x69, 0x24, 0x44, 0x71, 0xc2, 0xbc,
	0x0a, 0xf3, 0xbc, 0x77, 0x36, 0x1b, 0xa6, 0x2f, 0x9f, 0x2a, 0x5d, 0x58, 0x3d, 0x38, 0xa1, 0x57,
	0x95, 0x82, 0x9e, 0x84, 0x93, 0x73, 0x60, 0xfa, 0x25, 0xbb, 0x99, 0x6c, 0xd1, 0x51, 0xab, 0x1f,
	0x76, 0x28, 0xf6, 0x4f, 0x3e, 0x08, 0x4b, 0x76, 0xc9, 0xf7, 0x69, 0x9f, 0x76, 0x12, 0x8e, 0x9c,
	0xec, 0xaf, 0x7c, 0x8d, 0x96, 0x61, 0x41, 0x74, 0xc7, 0x43, 0x73, 0xd6, 0x4b, 0x69, 0xf2, 0x22,
	0xdc, 0xcf, 0x12, 0x4b, 0x46, 0xfa, 0x09, 0x0d, 0x1e, 0x77, 0x5e, 0x84, 0xd9, 0xa5, 0xdd, 0xf0,
	0x2b, 0xed, 0xb2, 0x15, 0x58, 0x87, 0xce, 0xa2, 0x7c, 0x89, 0x45, 0x98, 0x6f, 0xc4, 0x9b, 0xf6,
	0xb0, 0x4b, 0x85, 0xbe, 0x92, 0x64, 0x83, 0xc7, 0xb2, 0x14, 0x4e, 0xa6, 0xd3, 0x1e, 0x3e, 0x93,
	0x5f, 0x84, 0xd3, 0x7e, 0xc9, 0x56, 0xfd, 0xad, 0xc0, 0xa2, 0x33, 0x1a, 0x0d, 0x47, 0xd8, 0x5e,
	0x4c, 0xfe, 0x94, 0xc1, 0xb4, 0x41, 0xa2, 0x11, 0x6f, 0xca, 0x90, 0x92, 0x74, 0x2a, 0x7d, 0x5a,
	0x49, 0x67, 0x31, 0x6e, 0xef, 0x8e, 0xd8, 0x6b, 0x36, 0x37, 0xf8, 0x24, 0xd6, 0x38, 0xe4, 0x7d,
	0x70, 0x9f, 0x5d, 0xf2, 0x9d, 0x28, 0xa1, 0xa3, 0x4a, 0x38, 0xa0, 0x27, 0x1c, 0x1b, 0x52, 0x86,
	0x73, 0x7e, 0xc9, 0xd6, 0x9a, 0x4f, 0x74, 0xbe, 0xee, 0xc6, 0xa9, 0xac, 0x1b, 0xc9, 0x0a, 0x2c,
	0xeb, 0x52, 0xec, 0xe1, 0x60, 0xa7, 0x4f, 0xe5, 0x52, 0x41, 0xce, 0xa3, 0x8a, 0x75, 0x1a, 0xee,
	0x51, 0x4d, 0x45, 0xb2, 0x84, 0x5d, 0x6b, 0x6c, 0xde, 0x35, 0x79, 0xa3, 0x00, 0xe7, 0xfd, 0x92,
	0x2d, 0x84, 0xb3, 0x08, 0x95, 0x4a, 0xa5, 0xb9, 0xac, 0xa0, 0xe7, 0x32, 0x03, 0xa6, 0x9d, 0x0f,
	0xed, 0x08, 0x9d, 0xd8, 0x23, 0xf3, 0x63, 0x65, 0xd8, 0x97, 0xc1, 0x86, 0xcf, 0x6c, 0x4c, 0xcb,
	0xbd, 0x70, 0x30, 0x8c, 0xba, 0xc2, 0x89, 0x92, 0x64, 0xe8, 0x5a, 0x67, 0x18, 0x61, 0x1e, 0x5c,
	0xf4, 0xf0, 0x39, 0x93, 0x1f, 0xe7, 0xb2, 0xf9, 0x91, 0xdc, 0x8b, 0x99, 0x03, 0x97, 0x18, 0x69,
	0xca, 0x55, 0x58, 0xb0, 0x92, 0x64, 0x84, 0x03, 0xb6, 0x04, 0x73, 0xec, 0x39, 0x0d, 0x36, 0x41,
	0x31, 0xe5, 0xaf, 0x87, 0xfd, 0x5d, 0x2a, 0x14, 0xe5, 0x04, 0xd9, 0x81, 0x19, 0x26, 0xe9, 0x40,
	0x96, 0x28, 0xc2, 0x7c, 0x10, 0xde, 0xea, 0xd3, 0xd4, 0xd9, 0x92, 0x64, 0xea, 0x7a, 0x61, 0xb4,
	0x2d, 0x8d, 0x63, 0xcf, 0x13, 0x92, 0xfc, 0x39, 0x98, 0x65, 0x7d, 0xb3, 0x55, 0x8e, 0xad, 0xc1,
	0x9c, 0x20, 0x6b, 0x98, 0x5b, 0x84, 0xfa, 0xc2, 0xb1, 0xab, 0x72, 0xfd, 0x2c, 0x60, 0xc6, 0x28,
	0xe6, 0x65, 0x0c, 0x06, 0x10, 0x2b, 0x2b, 0xb9, 0x53, 0xc0, 0xb1, 0x43, 0x82, 0x65, 0xbd, 0x4d,
	0x59, 0x15, 0x5c, 0x81, 0x19, 0xab, 0xdb, 0x3d, 0x5a, 0x0e, 0xa2, 0x98, 0x91, 0x1e, 0x1d, 0x0c,
	0xf7, 0xd2, 0x32, 0x41, 0x92, 0x66, 0x09, 0xe6, 0x37, 0x76, 0xba, 0x58, 0x40, 0x4c, 0x1f, 0x21,
	0x4a, 0x02, 0xc9, 0x8b, 0x70, 0x2f, 0x26, 0xaa, 0x84, 0xad, 0xf3, 0x72, 0x1e, 0x2c, 0xc3, 0x02,
	0x23, 0x83, 0xfd, 0x1d, 0x39, 0x17, 0x53, 0xda, 0xbc, 0x08, 0xa7, 0xd8, 0x73, 0x83, 0x0e, 0x6e,
	0xb1, 0x6c, 0xc9, 0x55, 0xd0, 0x59, 0xc4, 0xc3, 0x8c, 0x98, 0x8a, 0x14, 0xde, 0xfa, 0xc9, 0x64,
	0x56, 0x79, 0x6b, 0x8c, 0x95, 0x9f, 0x4c, 0xd2, 0x3a, 0x8e, 0x24, 0x56, 0x35, 0xa9, 0x6e, 0x25,
	0x59, 0xf3, 0xf0, 0x11, 0x58, 0xc9, 0x73, 0x9b, 0xec, 0x5e, 0x54, 0x44, 0xe4, 0x6b, 0x05, 0x30,
	0xd6, 0xc2, 0x24, 0xe9, 0x53, 0x2e, 0x99, 0x55, 0x23, 0x07, 0x02, 0xd2, 0x80, 0xe9, 0xd6, 0x30,
	0x96, 0xb3, 0xac, 0x35, 0x8c, 0x19, 0xa2, 0xda, 0x12, 0x61, 0x38, 0x55, 0x6d, 0xb1, 0x70, 0x6b,
	0x84, 0x1f, 0xaa, 0xb6, 0x64, 0x10, 0x22, 0xc1, 0xa6, 0x83, 0x13, 0xd1, 0xd1, 0xe6, 0xbe, 0xa8,
	0x33, 0x04, 0xa5, 0x07, 0xf8, 0x5c, 0x7e, 0x80, 0xcf, 0xe7, 0x05, 0xf8, 0x82, 0x1e, 0xe0, 0x26,
	0xcc, 0xf8, 0xbd, 0x2e, 0x15, 0x15, 0x03, 0x3e, 0x93, 0x4f, 0x4c, 0xc1, 0x19, 0x6e, 0xcc, 0x7a,
	0x6f, 0x73, 0x2b, 0xa1, 0x23, 0xa9, 0x79, 0x61, 0x5c, 0xf3, 0xa9, 0x83, 0x9a, 0x4f, 0x8f, 0x69,
	0x5e, 0x0e, 0x07, 0xe1, 0x26, 0x15, 0x06, 0x09, 0x6a, 0xa2, 0x45, 0x52, 0x9b, 0x39, 0xa5, 0x0d,
	0xaf, 0x50, 0xec, 0x51, 0x2f, 0xe9, 0x75, 0xc2, 0x3e, 0x5a, 0x84, 0x15, 0x8a, 0xe4, 0x60, 0x29,
	0x18, 0xaf, 0xf5, 0x87, 0x9d, 0x6d, 0xb4, 0x6c, 0xc1, 0x93, 0x24, 0xaf, 0x5d, 0xac, 0x5b, 0xf1,
	0x70, 0x74, 0x0b, 0xed, 0xc3, 0xda, 0x85, 0xd3, 0xec, 0x9d, 0x15, 0x25, 0x3d, 0x0c, 0x1b, 0x5e,
	0x0e, 0xa5, 0x34, 0xd6, 0xe5, 0x5b, 0x3d, 0xda, 0xef, 0x62, 0x3d, 0xc4, 0xea, 0x72, 0xa4, 0x48,
	0x2b, 0x3b, 0xc6, 0x6b, 0xbb, 0xb7, 0x6f, 0xa7, 0x1a, 0x17, 0x34, 0x8d, 0x0f, 0x8e, 0xf3, 0x12,
	0xcc, 0x31, 0x74, 0xba, 0x78, 0x0b, 0x8a, 0x7c, 0x79, 0x5a, 0x8a, 0xf4, 0xe8, 0xce, 0x70, 0x94,
	0x60, 0xd8, 0xe4, 0x89, 0x2c, 0xc2, 0xbc, 0xbf, 0xdd, 0xeb, 0xf7, 0x55, 0x2e, 0x13, 0xa4, 0xf9,
	0x4e, 0x98, 0xd9, 0x88, 0xe9, 0x08, 0x05, 0x9f, 0x2a, 0x3d, 0x92, 0x17, 0xac, 0x99, 0xb1, 0xf4,
	0x10, 0x6e, 0xbe, 0x0f, 0x16, 0xd6, 0x68, 0xb5, 0x97, 0xb0, 0x79, 0x31, 0x83, 0x71, 0x7e, 0x8c,
	0xa6, 0x69, 0x13, 0xb3, 0x0c, 0xe0, 0xef, 0x0e, 0x06, 0xc3, 0xc8, 0xdd, 0xe9, 0xf0, 0xe4, 0x78,
	0xaa, 0x74, 0x69, 0xb2, 0x00, 0x35, 0x29, 0x3c, 0xad, 0x9d, 0xf9, 0x02, 0x2c, 0x58, 0xdd, 0x2e,
	0xf3, 0x45, 0x5c, 0x9c, 0x3b, 0x9e, 0x0c, 0x06, 0xf6, 0xd2, 0x56, 0xe6, 0x3a, 0x9c, 0xe2, 0xf9,
	0x8e, 0x0b, 0x99, 0x3f, 0x81, 0x10, 0xbd, 0x21, 0x0f, 0x15, 0xae, 0x99, 0x88, 0xa2, 0x94, 0x66,
	0xef, 0xaa, 0x61, 0x6c, 0x0f, 0x07, 0xb7, 0x86, 0x32, 0x8c, 0x24, 0x4d, 0xbe, 0x3b, 0x03, 0xa6,
	0x18, 0xc0, 0xe1, 0x6e, 0xd4, 0xe5, 0xa3, 0x88, 0xe2, 0x90, 0x66, 0xf5, 0x86, 0x48, 0x4a, 0x92,
	0x36, 0x9f, 0x67, 0x19, 0x1b, 0x61, 0x98, 0x90, 0x0e, 0x55, 0x57, 0x45, 0x85, 0x27, 0x1b, 0x8d,
	0x9b, 0x3c, 0xfd, 0x56, 0x4d, 0xbe, 0x06, 0xf7, 0xf0, 0x75, 0xa7, 0x2b, 0x86, 0xf7, 0x04, 0x81,
	0x30, 0xde, 0xd2, 0xa4, 0x70, 0x4f, 0x63, 0x5f, 0x24, 0xd5, 0x74, 0x66, 0x33, 0x61, 0xef, 0x39,
	0xc4, 0x38, 0xcd, 0x63, 0xab, 0x63, 0xad, 0x9d, 0x28, 0x19, 0xed, 0x7b, 0xe3, 0x32, 0xcd, 0x97,
	0xe1, 0xbe, 0x20, 0x1c, 0x6d, 0xd2, 0x24, 0xdb, 0x15, 0x8f, 0x9d, 0xf7, 0x1f, 0xb3, 0xab, 0x1c,
	0x09, 0xbc, 0xbb, 0x3c, 0xd9, 0xcb, 0x6b, 0x70, 0x2e, 0x4f, 0x37, 0x36, 0xc9, 0xb7, 0xe9, 0xbe,
	0x4c, 0x89, 0xdb, 0x74, 0x9f, 0xa5, 0xc0, 0x3d, 0xbd, 0x3a, 0x41, 0xe2, 0xdd, 0x53, 0x57, 0x0b,
	0xcb, 0xeb, 0x50, 0x9c, 0xd4, 0xe9, 0x49, 0xe4, 0x90, 0xaf, 0x16, 0x70, 0x23, 0x21, 0x63, 0x23,
	0xde, 0xed, 0x27, 0x72, 0x91, 0xbe, 0x04, 0x67, 0xac, 0x24, 0x09, 0x3b, 0xdb, 0x72, 0xb1, 0xe3,
	0x47, 0x0a, 0x59, 0x26, 0x43, 0xe1, 0x90, 0x8d, 0x55, 0xa1, 0x59, 0x26, 0xd6, 0xcb, 0x62, 0x37,
	0x9f, 0x66, 0x2c, 0x8d, 0xc3, 0xde, 0x73, 0x15, 0x30, 0x7b, 0x8a, 0x7a, 0x5a, 0x71, 0xd8, 0xb2,
	0xcb, 0xa9, 0x56, 0x38, 0x0a, 0x07, 0x22, 0xc5, 0xeb, 0x2c, 0xf2, 0x57, 0x0b, 0xb8, 0x67, 0xc9,
	0x1a, 0xa2, 0x2a, 0xd4, 0x5a, 0x7c, 0xa3, 0x17, 0x89, 0x33, 0x0b, 0x4e, 0x98, 0xef, 0x85, 0xb9,
	0xc6, 0x3e, 0x5b, 0x6b, 0x8f, 0x9e, 0x34, 0x5a, 0xb2, 0x11, 0x6d, 0x58, 0xba, 0xe2, 0x03, 0x80,
	0x12, 0xa6, 0x4f, 0x92, 0xae, 0x54, 0x3b, 0xb3, 0x0a, 0xa7, 0xb1, 0x3e, 0x97, 0xd3, 0x77, 0xe6,
	0x04, 0xd3, 0x37, 0xd3, 0xd2, 0x7c, 0x1e, 0xe6, 0x30, 0x24, 0x65, 0xea, 0x7c, 0xec, 0x78, 0xa1,
	0xeb, 0x89, 0x56, 0xe6, 0xcf, 0xab, 0xe9, 0xc6, 0x57, 0x54, 0x99, 0x3f, 0x5f, 0xc8, 0xdd, 0xa8,
	0xe6, 0x7b, 0x7a, 0x75, 0x4c, 0xc4, 0xd8, 0x9c, 0x13, 0x5c, 0x73, 0x2f, 0x3b, 0xe7, 0x64, 0x7f,
	0x3c, 0xd5, 0x96, 0x4f, 0xd2, 0x5f, 0x8e, 0x98, 0x9c, 0x89, 0x27, 0xfb, 0xed, 0xc2, 0x19, 0xa9,
	0x8a, 0xbd, 0x3b, 0xa2, 0x71, 0x71, 0x01, 0x7b, 0x7c, 0xfe, 0xad, 0x58, 0x88, 0x02, 0x78, 0x5f,
	0x59, 0xa1, 0xe6, 0x0e, 0xdc, 0xab, 0x77, 0xce, 0x7b, 0x5a, 0xc4, 0x9e, 0xd6, 0xde, 0xaa, 0x6d,
	0x5a, 0x6f, 0x07, 0x85, 0xb3, 0xd9, 0x51, 0x0d, 0x63, 0x97, 0x7e, 0x28, 0xb9, 0x11, 0xee, 0xf1,
	0xe2, 0x63, 0xc1, 0xd3, 0x59, 0xe6, 0x63, 0x70, 0x96, 0x3d, 0x6b, 0x73, 0x90, 0xd7, 0x21, 0x63,
	0x5c, 0x3d, 0x35, 0xe9, 0xee, 0xfc, 0x49, 0x52, 0xd3, 0x5b, 0x96, 0xf3, 0x02, 0x98, 0x07, 0x9d,
	0x7d, 0x22, 0x09, 0x65, 0x58, 0xca, 0x77, 0xe2, 0x89, 0x52, 0xe4, 0x0a, 0x2c, 0x6b, 0x19, 0xb2,
	0x33, 0x1c, 0x75, 0xeb, 0xbd, 0x58, 0x66, 0x49, 0xf2, 0x97, 0x05, 0x55, 0x6f, 0xb1, 0x77, 0x72,
	0x07, 0xc1, 0x29, 0x75, 0xb8, 0x21, 0x69, 0x96, 0xea, 0x78, 0x06, 0xd5, 0xb2, 0xa5, 0xc6, 0x31,
	0x09, 0x9c, 0x96, 0x14, 0x9e, 0x48, 0xf1, 0x23, 0x94, 0x0c, 0x8f, 0xc9, 0x28, 0xd3, 0xdb, 0x34,
	0x8a, 0x51, 0x86, 0x48, 0x97, 0x8a, 0xc3, 0x64, 0x48, 0x0a, 0x65, 0xf0, 0x4d, 0x74, 0x86, 0xc7,
	0x64, 0x70, 0x9d, 0x82, 0xde, 0x40, 0x96, 0xc7, 0x1a, 0x87, 0xfc, 0x1c, 0x3c, 0xa8, 0x45, 0xa6,
	0x32, 0x5b, 0xe4, 0x54, 0xac, 0x39, 0x18, 0x57, 0x6e, 0x6a, 0x0e, 0x4d, 0x5a, 0xd2, 0x33, 0x9e,
	0x6c, 0x44, 0x2e, 0x67, 0xd6, 0x1d, 0xc6, 0x93, 0xeb, 0xce, 0xd8, 0x1e, 0x87, 0xfc, 0x6b, 0x21,
	0x93, 0xd9, 0x39, 0x54, 0x68, 0x31, 0xbe, 0x1f, 0xfa, 0x3f, 0xe7, 0x5c, 0x3c, 0x39, 0x9a, 0xc3,
	0x93, 0x23, 0x8d, 0x33, 0xe6, 0xfc, 0xf9, 0x03, 0xce, 0x7f, 0x37, 0xac, 0x8c, 0x79, 0xa7, 0x4c,
	0xfb, 0x34, 0xa1, 0xda, 0x06, 0x7a, 0x52, 0x80, 0x91, 0xf7, 0xc0, 0x43, 0x63, 0xee, 0x92, 0x6d,
	0xd5, 0x4e, 0x79, 0x62, 0xe3, 0x22, 0x0e, 0x8b, 0xcc, 0x08, 0x38, 0x64, 0x22, 0xd0, 0xbf, 0xc9,
	0x87, 0x21, 0xfb, 0x4a, 0x48, 0xbc, 0x02, 0xf7, 0xb6, 0xc2, 0x38, 0xa6, 0x5d, 0x95, 0x4a, 0x64,
	0xb9, 0x70, 0xf0, 0x05, 0x3f, 0x5e, 0x66, 0xdb, 0x29, 0x2d, 0x1d, 0x4d, 0xc9, 0xe3, 0xe5, 0x2c,
	0x9f, 0x61, 0xab, 0x61, 0xb4, 0xb9, 0xbb, 0x73, 0xa0, 0x7c, 0x38, 0xc0, 0x37, 0xd7, 0xe0, 0x8c,
	0x9f, 0x84, 0x49, 0xaf, 0x53, 0x8b, 0x3a, 0xc3, 0x01, 0x95, 0xab, 0x69, 0xee, 0x6e, 0x5b, 0x7e,
	0x14, 0xf0, 0xb2, 0x4d, 0xc8, 0x0b, 0x70, 0x41, 0xb3, 0x9f, 0x77, 0xc1, 0xdf, 0x49, 0xd7, 0xb3,
	0xcd, 0x23, 0x32, 0xb4, 0xf3, 0x01, 0x8d, 0x43, 0xf6, 0xe1, 0x61, 0xcd, 0x4d, 0x59, 0x09, 0xc2,
	0x5d, 0x47, 0x88, 0x30, 0x9f, 0x63, 0x73, 0xeb, 0x95, 0x90, 0xcd, 0xad, 0xa9, 0x63, 0x98, 0x20,
	0xc1, 0xc4, 0x86, 0x47, 0xd2, 0xa8, 0xf1, 0x69, 0x92, 0x75, 0x90, 0xa6, 0xbf, 0xe6, 0xcb, 0xc2,
	0x78, 0x29, 0x46, 0xca, 0x40, 0xd2, 0xf0, 0xc9, 0x11, 0xa2, 0x4c, 0x38, 0x54, 0x0a, 0x3f, 0x5d,
	0xc4, 0xef, 0x40, 0xda, 0xc7, 0x23, 0xb2, 0x86, 0xa7, 0xb2, 0x29, 0xdb, 0x2c, 0xc9, 0x0f, 0x47,
	0x85, 0x63, 0xd8, 0xc9, 0xa1, 0xe4, 0x67, 0xf0, 0xab, 0x17, 0x3e, 0xf3, 0x43, 0x26, 0xf3, 0x2a,
	0xff, 0xc8, 0x13, 0x5b, 0xdd, 0xee, 0xb1, 0x04, 0xa5, 0x68, 0xe2, 0xc2, 0x39, 0xa1, 0xe6, 0xfa,
	0x6e, 0xdc, 0x1b, 0xa6, 0x4e, 0x2a, 0xc2, 0x7c, 0xab, 0x47, 0x3b, 0x34, 0xb5, 0x4d, 0x92, 0xe6,
	0x0a, 0x2c, 0x72, 0xa8, 0xfa, 0x50, 0xa4, 0x18, 0xe4, 0x1a, 0x1e, 0x92, 0xea, 0xf2, 0xd4, 0x09,
	0xd0, 0x89, 0x0d, 0x5d, 0xc7, 0xef, 0x6f, 0xec, 0xd9, 0xa7, 0xfd, 0xbe, 0x54, 0x6d, 0x09, 0xe6,
	0x10, 0x98, 0x9e, 0x64, 0x72, 0xea, 0x90, 0xef, 0x57, 0x15, 0xb8, 0x4f, 0x28, 0xc5, 0xe5, 0x08,
	0x95, 0x4e, 0x2e, 0xe8, 0x29, 0x38, 0x2f, 0xce, 0x58, 0xf1, 0xa4, 0x67, 0x63, 0x47, 0xd3, 0x89,
	0x71, 0x95, 0x28, 0x4e, 0x91, 0x75, 0x58, 0x12, 0x07, 0x92, 0x69, 0x03, 0xd5, 0x79, 0x5e, 0x0b,
	0x75, 0xa4, 0x34, 0xa5, 0x1d, 0x29, 0x91, 0x55, 0x1c, 0x26, 0x3c, 0x58, 0x0c, 0xa3, 0xed, 0xa3,
	0xfb, 0xb5, 0x71, 0x18, 0x74, 0xfc, 0x11, 0xdd, 0xca, 0xd3, 0xad, 0x29, 0x75, 0xba, 0x45, 0x9e,
	0x81, 0xfb, 0x45, 0xa7, 0x65, 0xda, 0x19, 0x0e, 0x76, 0x86, 0x31, 0x3d, 0xaa, 0xdf, 0x3e, 0x14,
	0x45, 0xbf, 0x5a, 0x93, 0x23, 0xba, 0xbe, 0x0a, 0x0b, 0x15, 0x9a, 0xc8, 0xcf, 0xa7, 0xc7, 0x08,
	0x5e, 0x89, 0x26, 0x5f, 0x2e, 0xa4, 0x6e, 0xc9, 0x46, 0xef, 0x32, 0x2c, 0x70, 0x86, 0x4a, 0xf0,
	0x92, 0x66, 0x13, 0xb7, 0x11, 0xf6, 0x22, 0x3b, 0xc4, 0xf4, 0x2f, 0x56, 0x48, 0xc5, 0xc1, 0x2f,
	0xc5, 0xc3, 0x38, 0x79, 0x86, 0x93, 0xfc, 0x30, 0x60, 0xd6, 0xcb, 0xf0, 0x24, 0xa6, 0x24, 0x31,
	0x33, 0x0a, 0x53, 0x1a, 0xc3, 0x3c, 0x2b, 0x31, 0xb3, 0x0a, 0x23, 0x79, 0xa4, 0x91, 0x0e, 0xd3,
	0xd8, 0x6c, 0x59, 0x81, 0x45, 0x97, 0xbe, 0x22, 0x74, 0x14, 0x1f, 0x6b, 0x52, 0x86, 0xe6, 0xc9,
	0xa9, 0x8c, 0xf7, 0xff, 0x82, 0x7f, 0xb0, 0x6e, 0x84, 0xbd, 0xbe, 0x4f, 0xa3, 0xae, 0x96, 0xf0,
	0x3c, 0xda, 0xa1, 0xbd, 0x3d, 0xed, 0x5b, 0x93, 0xc6, 0x61, 0xde, 0x62, 0x4d, 0x30, 0x17, 0x8b,
	0x4f, 0x28, 0x92, 0x66, 0x8a, 0xe0, 0x73, 0x2f, 0xe9, 0xcb, 0x62, 0x41, 0x31, 0x58, 0xdd, 0xcd,
	0x08, 0x7b, 0x18, 0x25, 0x34, 0x4a, 0xb0, 0x54, 0x58, 0xf4, 0x74, 0x16, 0x5b, 0x92, 0xb0, 0xb6,
	0xd8, 0xa2, 0x5d, 0x3e, 0xc2, 0xb3, 0xc7, 0x59, 0x92, 0x32, 0x4d, 0xc8, 0x93, 0x38, 0x7d, 0x95,
	0x55, 0x2a, 0x9e, 0x18, 0x4f, 0xc5, 0x13, 0xa7, 0xc8, 0xb9, 0xd4, 0x09, 0x7a, 0x99, 0xfa, 0x46,
	0x01, 0xce, 0x30, 0xde, 0x5a, 0x18, 0xf7, 0x3a, 0x58, 0x82, 0xe4, 0x7c, 0x01, 0xd5, 0x5c, 0x80,
	0xcf, 0xf8, 0x75, 0x4a, 0x33, 0x9d, 0x13, 0xcc, 0xa1, 0x4c, 0x13, 0x51, 0xfe, 0x70, 0xab, 0x35,
	0x0e, 0xff, 0xb2, 0x18, 0xf1, 0xd2, 0x66, 0x56, 0x7e, 0x59, 0xe4, 0x34, 0x26, 0x9d, 0xd8, 0xa3,
	0x21, 0x3f, 0x5f, 0x5e, 0xf0, 0x04, 0x45, 0xdc, 0xd4, 0xc8, 0x4c, 0x95, 0xf9, 0x2e, 0x98, 0x65,
	0x3c, 0x99, 0x36, 0x73, 0xcf, 0x91, 0x32, 0x66, 0x79, 0x1c, 0x4f, 0x2e, 0xe3, 0xd4, 0x60, 0xcf,
	0x65, 0x9a, 0x84, 0xbd, 0xbe, 0xf6, 0x05, 0x4e, 0xd5, 0x26, 0xec, 0x91, 0xfc, 0x02, 0x4e, 0x08,
	0x01, 0xcb, 0xfb, 0xe2, 0x23, 0x87, 0x77, 0x4a, 0x7c, 0x4f, 0x9e, 0x34, 0xb4, 0xd3, 0x27, 0x1f,
	0x5a, 0x3e, 0x01, 0x74, 0x2d, 0x85, 0xdd, 0xef, 0xc8, 0xda, 0x7d, 0x61, 0x92, 0xdd, 0xa2, 0x99,
	0x30, 0xfa, 0x2a, 0x16, 0x2f, 0xec, 0xb9, 0x42, 0x93, 0x4c, 0x4f, 0x5a, 0xe2, 0xca, 0x0d, 0x9a,
	0x5f, 0xc2, 0xa2, 0x25, 0xbf, 0xe5, 0xe1, 0xf1, 0x76, 0xd0, 0x0f, 0x53, 0x27, 0xf7, 0xc3, 0xd3,
	0xda, 0x68, 0xe9, 0x65, 0x6e, 0x11, 0xe6, 0x79, 0x2f, 0x72, 0xc4, 0x24, 0x49, 0x9e, 0xd1, 0x3c,
	0x97, 0x29, 0x6e, 0x27, 0x37, 0x79, 0x1a, 0x27, 0x46, 0x10, 0xf6, 0x69, 0x94, 0xa8, 0x25, 0x64,
	0x19, 0x16, 0x38, 0x4b, 0xe5, 0x4a, 0x49, 0x8b, 0x85, 0x53, 0xb5, 0xd0, 0xbe, 0x34, 0x4d, 0x68,
	0x32, 0x61, 0xfd, 0x5a, 0x42, 0xfb, 0x38, 0x48, 0x9f, 0x95, 0x25, 0x00, 0xd1, 0x32, 0xef, 0x4e,
	0x42, 0xbe, 0xac, 0x17, 0xd1, 0x72, 0x5d, 0x96, 0x50, 0xeb, 0x2a, 0xcc, 0x73, 0xee, 0xa1, 0x51,
	0xa3, 0xfa, 0xf3, 0x24, 0x5c, 0x14, 0x6b, 0xc1, 0xf0, 0x15, 0x3a, 0xd2, 0x2b, 0xfe, 0x5f, 0xc6,
	0xcf, 0x89, 0x1a, 0x5b, 0x74, 0x74, 0x11, 0x4e, 0xd9, 0xbb, 0xa3, 0x11, 0xbe, 0x48, 0x15, 0xd6,
	0x59, 0x2c, 0x6d, 0xe2, 0xe3, 0x35, 0xba, 0x2f, 0x3f, 0x5a, 0x28, 0x86, 0xf9, 0x18, 0x9c, 0xad,
	0x87, 0x71, 0x52, 0xa1, 0xc9, 0x35, 0xba, 0x8f, 0x59, 0x82, 0x57, 0xf4, 0x63, 0x5c, 0xf2, 0x1c,
	0x6e, 0xbc, 0xb1, 0x9d, 0xd8, 0x35, 0xf2, 0xef, 0xce, 0x69, 0x6c, 0x64, 0x35, 0x90, 0x24, 0x79,
	0xad, 0x00, 0x06, 0x3e, 0xe3, 0x19, 0x24, 0x6f, 0xca, 0xd6, 0x23, 0xc5, 0x4b, 0xdb, 0x64, 0x78,
	0xff, 0x53, 0xbb, 0x47, 0x7b, 0x44, 0xc3, 0x84, 0xa2, 0x61, 0xf2, 0x66, 0x40, 0xca, 0x11, 0xdb,
	0xea, 0x83, 0x46, 0x9d, 0x68, 0x5b, 0x3d, 0x6e, 0x9d, 0xda, 0x56, 0xbf, 0x1f, 0x1e, 0xc8, 0xfa,
	0x4c, 0x1b, 0xd0, 0xe3, 0xf8, 0x80, 0xbc, 0x17, 0x2f, 0x0d, 0x1c, 0x10, 0xa0, 0xca, 0x7e, 0x6d,
	0x5f, 0x5b, 0x18, 0xdf, 0xd7, 0x8a, 0xb3, 0x12, 0xde, 0x3a, 0x8c, 0xb6, 0x7b, 0xd1, 0xa6, 0x1e,
	0xee, 0x14, 0xce, 0xa4, 0xaf, 0x8e, 0xbc, 0x4a, 0x75, 0x01, 0x80, 0x3f, 0x6b, 0xf7, 0x72, 0x34,
	0x8e, 0x3e, 0xfe, 0xd3, 0xd9, 0xf1, 0xbf, 0xae, 0xb9, 0x58, 0x57, 0x42, 0xad, 0x29, 0x8c, 0x7d,
	0xe8, 0x9a, 0x92, 0x51, 0xd3, 0xe3, 0x78, 0xf2, 0x28, 0x5e, 0x31, 0xe0, 0x77, 0xaa, 0x7c, 0x1a,
	0x8e, 0x3a, 0x5b, 0x6c, 0x39, 0xb9, 0x26, 0xce, 0x91, 0x16, 0x3d, 0xf6, 0x48, 0x9e, 0xc1, 0xb9,
	0xa4, 0x83, 0xd6, 0xf6, 0x79, 0x91, 0x31, 0xc9, 0x52, 0xd2, 0xc4, 0x19, 0xad, 0x37, 0xe1, 0x27,
	0x81, 0xe6, 0x73, 0x30, 0xc7, 0x9f, 0x0e, 0x9b, 0xd0, 0xea, 0x66, 0x9a, 0x27, 0xd0, 0xe4, 0x69,
	0xbc, 0x2e, 0x57, 0xa1, 0x09, 0x7f, 0xc7, 0xac, 0x67, 0x53, 0xb2, 0x1a, 0xc6, 0xeb, 0xc3, 0x38,
	0xa1, 0x23, 0x71, 0x0e, 0xae, 0x18, 0x84, 0xc2, 0x22, 0xc7, 0x7a, 0xf4, 0xe5, 0x13, 0x5f, 0x70,
	0x3b, 0x07, 0xb3, 0x7e, 0x67, 0x38, 0x92, 0xd3, 0x98, 0x13, 0xe9, 0xb5, 0xb7, 0x19, 0x75, 0xed,
	0x8d, 0xfc, 0x4d, 0x81, 0x6f, 0x08, 0x74, 0xcd, 0x84, 0xad, 0x17, 0xe4, 0x1d, 0x3b, 0x7d, 0x4f,
	0xac, 0x38, 0xe6, 0xf3, 0xf2, 0x3d, 0x6b, 0x23, 0xd6, 0x98, 0xa3, 0xfc, 0xa1, 0xb5, 0x30, 0x9f,
	0x81, 0x19, 0x8f, 0xbe, 0x2c, 0x57, 0xe9, 0x87, 0x26, 0xb7, 0xf4, 0xe8, 0xcb, 0x1e, 0x42, 0xcd,
	0x2b, 0x70, 0xaf, 0xbc, 0x19, 0xc7, 0xaf, 0xd0, 0xa9, 0xbb, 0x3e, 0x07, 0x5f, 0x90, 0x2d, 0xcc,
	0x96, 0x62, 0x14, 0xb5, 0x2b, 0x99, 0x2b, 0xb0, 0x88, 0xa4, 0x66, 0x97, 0x62, 0x98, 0x25, 0x98,
	0x61, 0xaa, 0xa2, 0x3f, 0x8f, 0x36, 0x08, 0xb1, 0xc4, 0xc1, 0xfb, 0x0f, 0xa9, 0xb6, 0xa2, 0x9f,
	0xa7, 0x60, 0xda, 0xa3, 0x2f, 0x63, 0x0f, 0x47, 0xda, 0xc7, 0x90, 0xe4, 0x29, 0xbc, 0x99, 0x61,
	0x75, 0xbb, 0x9c, 0xbf, 0xb6, 0xdf, 0x3a, 0x22, 0x4e, 0x2f, 0xe3, 0x02, 0xaa, 0x35, 0x90, 0xd7,
	0x1b, 0x31, 0x22, 0x0a, 0x2a, 0x22, 0xd8, 0x52, 0xeb, 0x97, 0xec, 0x14, 0x29, 0x86, 0xf8, 0x30,
	0xd9, 0x57, 0xe0, 0x2c, 0x93, 0xbd, 0x39, 0xa2, 0x94, 0xb7, 0x39, 0x14, 0xfd, 0x15, 0x7e, 0xd3,
	0x45, 0x83, 0x1f, 0xdd, 0xc5, 0x09, 0x42, 0x37, 0xff, 0xe2, 0x8e, 0x0c, 0xe8, 0x59, 0xed, 0x1e,
	0xe7, 0x21, 0x37, 0x92, 0xb2, 0x37, 0x36, 0xe7, 0xc7, 0x6e, 0x6c, 0x92, 0x27, 0xf9, 0x7d, 0x25,
	0x7a, 0x7b, 0x37, 0x3e, 0x8e, 0xc5, 0x15, 0xbe, 0x55, 0xd2, 0xe0, 0xc2, 0xe2, 0x1c, 0xf7, 0x1f,
	0x7a, 0x29, 0x4c, 0xf6, 0x3b, 0x18, 0xee, 0x1d, 0xa7, 0xdf, 0x67, 0x45, 0xbf, 0x0a, 0x7e, 0x8c,
	0xc1, 0xe4, 0x39, 0x90, 0x4d, 0x8f, 0xcc, 0x05, 0x54, 0xb6, 0x2d, 0xe5, 0xb1, 0xdc, 0x15, 0xb5,
	0x59, 0x4a, 0x93, 0xaf, 0x16, 0xc0, 0xd4, 0xc1, 0xaa, 0x17, 0xad, 0x49, 0x41, 0x6f, 0xc2, 0x0a,
	0x52, 0x71, 0xdb, 0x55, 0x6c, 0x03, 0x45, 0x37, 0xe7, 0x60, 0x16, 0xef, 0xee, 0xc9, 0x31, 0x45,
	0xc2, 0xbc, 0x04, 0x67, 0x3c, 0x3a, 0x08, 0x7b, 0x91, 0xbc, 0xfb, 0xca, 0xc7, 0x36, 0xcb, 0x64,
	0xa5, 0x4d, 0x2d, 0xc6, 0x6b, 0xaa, 0x4c, 0x7b, 0x71, 0x11, 0x59, 0x67, 0xf1, 0x2f, 0x95, 0x9d,
	0x6d, 0xd1, 0xf3, 0x9c, 0xfc, 0x52, 0x29, 0x39, 0xe4, 0x37, 0x0a, 0xf0, 0x80, 0x5f, 0xb2, 0xc7,
	0x8d, 0x17, 0xf6, 0xac, 0x03, 0x70, 0x5a, 0xac, 0x9f, 0x13, 0xbf, 0xd4, 0x1d, 0x6c, 0xeb, 0x69,
	0x2d, 0xf3, 0x53, 0xd3, 0xd4, 0xa4, 0xd4, 0xc4, 0x2b, 0xdf, 0x74, 0x3d, 0x38, 0xc6, 0x70, 0xac,
	0x65, 0xef, 0x13, 0xbf, 0x95, 0x71, 0x20, 0x1f, 0xc4, 0xc3, 0x90, 0xb1, 0x5e, 0x85, 0x1f, 0x5e,
	0xc8, 0xf1, 0xc3, 0xc5, 0x23, 0xfd, 0xa0, 0xb5, 0x21, 0x0e, 0x9c, 0x49, 0xd7, 0x59, 0x7b, 0x2b,
	0x3c, 0x7c, 0xea, 0x8f, 0xed, 0xe2, 0x4e, 0xa7, 0xbb, 0x38, 0x72, 0x0d, 0x4b, 0x7c, 0x25, 0xe6,
	0x18, 0x79, 0x64, 0xb2, 0xb0, 0xf7, 0xe2, 0xa9, 0x3d, 0x17, 0x56, 0xa1, 0xc9, 0x81, 0xbb, 0xd2,
	0x2b, 0x72, 0x95, 0x55, 0xbb, 0x13, 0xc5, 0x20, 0x2f, 0xc1, 0x32, 0x27, 0xc6, 0xdb, 0xc9, 0x4f,
	0x4a, 0x13, 0x47, 0xe0, 0x02, 0x80, 0x76, 0x53, 0x5b, 0x9e, 0xe9, 0xa4, 0x1c, 0xb2, 0x85, 0x47,
	0xba, 0x13, 0xf5, 0x12, 0x36, 0xaf, 0x89, 0x7b, 0xae, 0x7c, 0x34, 0x56, 0x27, 0x8f, 0x46, 0x9e,
	0x7e, 0xe2, 0xd6, 0xed, 0x55, 0xac, 0xff, 0xc4, 0xa0, 0xed, 0xf6, 0xfb, 0x19, 0xe8, 0x61, 0x36,
	0x90, 0x75, 0x38, 0xab, 0x46, 0x01, 0x2d, 0xd6, 0xfc, 0x5c, 0xc8, 0xf8, 0x39, 0x73, 0xc0, 0x30,
	0x95, 0x3d, 0x60, 0x20, 0x7b, 0x70, 0x31, 0xb5, 0xf5, 0x80, 0x06, 0xc7, 0xc8, 0x2a, 0xcf, 0x09,
	0x2f, 0xf0, 0x0a, 0x83, 0x4c, 0xf6, 0x82, 0xd4, 0x53, 0x58, 0xfe, 0xb3, 0xf0, 0x90, 0x8a, 0xc7,
	0x61, 0x74, 0xbb, 0x37, 0x1a, 0x1c, 0xdb, 0xf8, 0x23, 0x07, 0x30, 0x84, 0x47, 0x55, 0x94, 0xe6,
	0x08, 0x3f, 0x86, 0x5d, 0x47, 0x75, 0xf1, 0x38, 0xcf, 0xd9, 0x34, 0xe1, 0x37, 0xf1, 0x79, 0xbb,
	0x58, 0x2f, 0x70, 0x67, 0x79, 0x81, 0xeb, 0xe0, 0x8c, 0xf1, 0xc6, 0x81, 0x2b, 0xb0, 0x28, 0x67,
	0x48, 0x1a, 0xdb, 0x29, 0x43, 0x8a, 0x99, 0x52, 0x62, 0x1e, 0xc7, 0xfb, 0xe0, 0xfe, 0xd6, 0x70,
	0x87, 0xff, 0x58, 0xe4, 0x7e, 0x98, 0x8f, 0xb7, 0x86, 0x3b, 0xed, 0x5e, 0x7a, 0xbe, 0xc0, 0xc8,
	0x5a, 0x97, 0x6c, 0xc1, 0x29, 0xbf, 0x64, 0x4b, 0x20, 0xc3, 0xf5, 0x12, 0x3a, 0xd0, 0x70, 0x3d,
	0x7e, 0x6c, 0xfd, 0x00, 0x2c, 0xf4, 0xe9, 0xed, 0xa4, 0x1d, 0xa9, 0x73, 0x6b, 0x46, 0xb3, 0x79,
	0xf7, 0x36, 0x38, 0x3b, 0xc2, 0x34, 0xdf, 0x8e, 0x45, 0xf2, 0xe7, 0x4b, 0xc3, 0x99, 0x91, 0x9e,
	0xfc, 0x49, 0x97, 0xdf, 0x2b, 0x95, 0x2a, 0x09, 0xa7, 0x4e, 0x52, 0xcc, 0x7c, 0x27, 0xcc, 0xf6,
	0xb4, 0x03, 0x8f, 0x87, 0x27, 0x7c, 0xdb, 0x97, 0xf2, 0x3c, 0x8e, 0x26, 0x65, 0xac, 0x74, 0xd6,
	0x76, 0xf7, 0x8f, 0x65, 0x12, 0xbe, 0xd0, 0x4c, 0xea, 0x89, 0xa3, 0xf8, 0xd7, 0x79, 0x05, 0xa4,
	0x89, 0x39, 0x4a, 0x5d, 0xad, 0x97, 0xa9, 0x89, 0xbd, 0x4c, 0x67, 0x7a, 0x31, 0xdf, 0x05, 0x0b,
	0x61, 0xb7, 0xdb, 0x66, 0x24, 0xae, 0x97, 0x47, 0x7e, 0x89, 0x0a, 0xbb, 0x78, 0xa2, 0x43, 0x96,
	0x31, 0xf7, 0x33, 0xd5, 0x5c, 0x4a, 0xbb, 0x1e, 0xbd, 0x3d, 0xa2, 0xf1, 0x96, 0xb8, 0x78, 0xde,
	0x81, 0x33, 0xe5, 0x5e, 0xd8, 0xdf, 0x0f, 0xc2, 0x78, 0x5b, 0xde, 0xcd, 0x66, 0xcf, 0xea, 0x64,
	0x89, 0x53, 0x78, 0x8a, 0x10, 0xc6, 0xdb, 0xfa, 0xfd, 0x6c, 0xc5, 0x90, 0x6f, 0xb1, 0x94, 0x16,
	0x7a, 0x2b, 0x86, 0x38, 0xd2, 0xa8, 0xd0, 0x24, 0xed, 0x0a, 0x4b, 0xe7, 0x17, 0xf1, 0x72, 0xae,
	0xbf, 0x1f, 0x75, 0x52, 0xbe, 0xf9, 0x3e, 0x58, 0x60, 0xff, 0xe3, 0xbe, 0xe2, 0x90, 0x2d, 0x61,
	0x46, 0x67, 0x2f, 0x6d, 0x42, 0xb6, 0xb1, 0x42, 0xe2, 0xb6, 0xa5, 0xda, 0xd9, 0x5b, 0x9b, 0xff,
	0x2b, 0x66, 0xc5, 0x70, 0xca, 0xea, 0x6c, 0xf5, 0xe8, 0x1e, 0x45, 0xcf, 0xad, 0xc0, 0xa2, 0x20,
	0xd5, 0x39, 0x79, 0xca, 0xc0, 0xe3, 0x0a, 0x4e, 0xe8, 0x7d, 0x65, 0x78, 0x1a, 0x46, 0xef, 0x31,
	0xc3, 0x23, 0xf7, 0xe0, 0x52, 0x5b, 0xa1, 0x89, 0xe0, 0x92, 0x1b, 0x7c, 0xa2, 0xec, 0x47, 0x1d,
	0x5d, 0x19, 0x2b, 0xd5, 0x4d, 0x73, 0x65, 0xee, 0xac, 0xd0, 0x5a, 0x79, 0x7a, 0x1b, 0xf2, 0xe1,
	0x02, 0xc6, 0x0d, 0x77, 0xa6, 0xae, 0x27, 0xf3, 0xe7, 0x4f, 0xc7, 0xd8, 0x27, 0xe4, 0xde, 0x99,
	0x39, 0x9d, 0x7f, 0x58, 0x9d, 0x34, 0x92, 0xe4, 0xd5, 0x02, 0xbf, 0xb5, 0x7f, 0x1c, 0x30, 0x2b,
	0xd4, 0xed, 0x61, 0x2f, 0x92, 0xe7, 0xeb, 0xec, 0x59, 0xff, 0xf9, 0xc3, 0x74, 0xf6, 0xe7, 0x0f,
	0xe2, 0xe7, 0x13, 0x33, 0xea, 0xe7, 0x13, 0x4b, 0x30, 0x67, 0xef, 0x8e, 0xea, 0x7b, 0xf2, 0xa7,
	0x61, 0x82, 0x22, 0xef, 0x91, 0x91, 0x2e, 0xcc, 0x10, 0x6a, 0x5c, 0x82, 0x33, 0x19, 0x86, 0xd0,
	0x26, 0xcb, 0x24, 0x1f, 0x2d, 0xc8, 0x6c, 0x9e, 0x6d, 0xfd, 0xd3, 0x36, 0xe2, 0x0a, 0x7a, 0xfd,
	0xc6, 0x70, 0xd4, 0xc7, 0x75, 0x95, 0xad, 0xe6, 0x93, 0xd7, 0x7f, 0x52, 0xc2, 0x53, 0x84, 0x0c,
	0x5a, 0x64, 0xbf, 0xc9, 0x6d, 0x78, 0x42, 0x48, 0xdb, 0x34, 0xe2, 0x4d, 0x56, 0x1d, 0x90, 0x37,
	0x0b, 0x70, 0x26, 0x65, 0x62, 0x36, 0x3e, 0xb4, 0xec, 0x98, 0xb4, 0xad, 0x1a, 0x3b, 0xad, 0x9a,
	0x3e, 0x70, 0x5a, 0x95, 0xbe, 0xd7, 0xce, 0x44, 0x34, 0x0e, 0xdb, 0x78, 0x70, 0x4a, 0xff, 0xf5,
	0x9f, 0xce, 0xe2, 0x97, 0xd2, 0x3f, 0x10, 0x46, 0x34, 0xbd, 0x9a, 0x2f, 0x48, 0x7e, 0xd3, 0x98,
	0xaf, 0xc3, 0x62, 0x9f, 0x99, 0xd2, 0x99, 0x52, 0x69, 0x61, 0xac, 0x54, 0x0a, 0x70, 0xa7, 0x32,
	0xee, 0x12, 0xe1, 0xc9, 0x77, 0x65, 0x3f, 0x58, 0xe7, 0xa6, 0xc4, 0x8c, 0xe3, 0xe4, 0x57, 0xeb,
	0x55, 0x4c, 0x0e, 0xe9, 0xab, 0xf5, 0xe1, 0xe8, 0x56, 0x0f, 0x07, 0xd3, 0x11, 0x6a, 0xf0, 0x9d,
	0xaa, 0x24, 0xc9, 0x6a, 0x9a, 0x92, 0x2b, 0xbb, 0xbd, 0x2e, 0x95, 0xc5, 0x2e, 0x12, 0xaa, 0x96,
	0x48, 0x69, 0x11, 0x2a, 0x7e, 0xb8, 0x47, 0x15, 0xbe, 0x08, 0xf3, 0xe2, 0xbd, 0x3c, 0x0b, 0x16,
	0x24, 0x79, 0x4a, 0xc6, 0xf7, 0x31, 0x1b, 0x3c, 0xf1, 0xef, 0x2b, 0x30, 0xeb, 0xb4, 0x1d, 0xcf,
	0x33, 0x17, 0x60, 0xc6, 0x6d, 0xba, 0x8e, 0xf1, 0xff, 0xcc, 0xf3, 0xb0, 0x50, 0x73, 0x03, 0xc7,
	0x73, 0xad, 0xba, 0xf1, 0x63, 0xf9, 0xaf, 0x60, 0xfe, 0x7f, 0x58, 0x69, 0xd5, 0xad, 0x9b, 0x8e,
	0xd7, 0xb6, 0x6c, 0xbb, 0xdd, 0xf4, 0xda, 0x2d, 0xcb, 0xf7, 0x6f, 0x34, 0xbd, 0x32, 0x6b, 0xde,
	0xf4, 0x8c, 0x1f, 0x29, 0xe8, 0x43, 0x60, 0x08, 0xa8, 0xdb, 0x0c, 0xda, 0xce, 0x4b, 0x35, 0x3f,
	0x30, 0x7e, 0xa8, 0x5e, 0x3f, 0x0a, 0x4b, 0x52, 0x52, 0xdd, 0x73, 0xac, 0xf2, 0xcd, 0x76, 0xbd,
	0x59, 0xa9, 0xb9, 0x4e, 0xd9, 0xf8, 0x81, 0x02, 0xbd, 0x0d, 0x8a, 0x02, 0xd4, 0x0c, 0xaa, 0x8e,
	0xd7, 0x6e, 0xd5, 0x2d, 0xdb, 0xe1, 0x40, 0xe3, 0xfb, 0x0a, 0xf6, 0x30, 0x98, 0x02, 0x16, 0x34,
	0xaf, 0x39, 0xae, 0xd0, 0xe5, 0xbf, 0x14, 0xe0, 0xed, 0x70, 0x41, 0x00, 0x7c, 0xa7, 0xee, 0xd8,
	0x41, 0xdb, 0x77, 0xbc, 0xeb, 0x42, 0xb3, 0xf5, 0xe6, 0x86, 0x5b, 0x36, 0xde, 0xcc, 0x03, 0x4b,
	0xcd, 0x78, 0x23, 0xa7, 0x2c, 0x9a, 0x19, 0xff, 0xa9, 0xc0, 0x17, 0xe0, 0x5e, 0x01, 0xae, 0xf9,
	0xed, 0xe6, 0xfa, 0x7a, 0xbd, 0xe6, 0x3a, 0xc6, 0x7f, 0xa8, 0xf7, 0x4f, 0xc2, 0xc5, 0xb4, 0xe7,
	0xa0, 0x6d, 0x05, 0x81, 0x65, 0x5f, 0x6b, 0x37, 0x9c, 0xc6, 0x9a, 0xe3, 0xf9, 0xed, 0x75, 0xab,
	0x56, 0x77, 0xca, 0xc6, 0xbf, 0x7c, 0x29, 0x85, 0xaf, 0xc2, 0x23, 0x1a, 0xbc, 0xec, 0xac, 0x3b,
	0xae, 0xef, 0x8c, 0xe3, 0xff, 0x59, 0xe1, 0x2f, 0xc2, 0x7d, 0xaa, 0x7b, 0x0e, 0xaf, 0xb9, 0x15,
	0xe3, 0x9f, 0xbe, 0x94, 0x63, 0xcd, 0x9a, 0x15, 0x04, 0x75, 0xa7, 0xed, 0x39, 0x36, 0x1b, 0x2f,
	0x65, 0xfa, 0xf7, 0x14, 0xb8, 0x04, 0x6f, 0xcb, 0x05, 0xaf, 0x37, 0xbd, 0xb5, 0x5a, 0xb9, 0xec,
	0xb8, 0xed, 0xb2, 0x53, 0x77, 0x02, 0xc7, 0xf8, 0xc7, 0x3c, 0x95, 0xb3, 0x6d, 0xca, 0x56, 0x60,
	0xb5, 0x6b, 0xee, 0x75, 0xab, 0x5e, 0x2b, 0x1b, 0xdf, 0x55, 0x78, 0x02, 0xe7, 0xa5, 0xca, 0x81,
	0xd3, 0xd0, 0xf4, 0xf8, 0xd8, 0x17, 0x73, 0x94, 0x46, 0x4c, 0x60, 0xad, 0xd5, 0x9d, 0x76, 0x4d,
	0x57, 0xfa, 0xd7, 0x15, 0xf8, 0x71, 0x58, 0xce, 0x08, 0xdc, 0xe0, 0x42, 0x1d, 0xb7, 0xb9, 0x51,
	0xa9, 0x1a, 0xbf, 0x36, 0x11, 0x18, 0xdc, 0x6c, 0x39, 0x88, 0x6c, 0x58, 0x81, 0x5d, 0x35, 0x3e,
	0xaa, 0x80, 0x97, 0xe0, 0x7e, 0x01, 0x74, 0x5e, 0xdc, 0xa8, 0xb5, 0xda, 0x7e, 0x9d, 0xc9, 0x6b,
	0xb4, 0x82, 0x9b, 0xc6, 0xaf, 0x2a, 0xd4, 0x63, 0xf0, 0x40, 0x06, 0x85, 0xf2, 0xa4, 0xc1, 0x1f,
	0xc9, 0xc3, 0x61, 0xb7, 0xeb, 0x1b, 0x7e, 0xad, 0xe9, 0xca, 0xb1, 0x7c, 0x55, 0xe1, 0x9e, 0x85,
	0xc7, 0x74, 0x9c, 0xdd, 0xdc, 0x70, 0x03, 0xcd, 0x92, 0x76, 0xd0, 0x14, 0x6d, 0x8d, 0x5f, 0xf9,
	0x62, 0x8e, 0x37, 0xbd, 0x66, 0xdd, 0xd1, 0x1c, 0xf4, 0x85, 0xbb, 0x39, 0xde, 0x44, 0x4c, 0x8e,
	0x37, 0x3f, 0x7f, 0x37, 0x27, 0x60, 0x11, 0x5c, 0x77, 0xae, 0x3b, 0x75, 0x3e, 0x96, 0x0a, 0xfe,
	0xb9, 0xbb, 0x39, 0x33, 0x54, 0x83, 0xd7, 0xfc, 0x76, 0xc3, 0x7a, 0xc9, 0x78, 0xe3, 0x6e, 0x8e,
	0x47, 0x11, 0xe6, 0x59, 0xee, 0x35, 0x89, 0x7a, 0xfd, 0x6e, 0x4e, 0x28, 0xa5, 0xa8, 0x8d, 0xd6,
	0x78, 0xe7, 0x9f, 0x55, 0xf8, 0xa7, 0x80, 0xe8, 0xf8, 0x9a, 0xdb, 0x0e, 0x1c, 0xab, 0xd1, 0xb6,
	0x2d, 0x97, 0xcd, 0x1d, 0xbb, 0xd9, 0x68, 0x35, 0x7d, 0xc7, 0x78, 0xed, 0x6e, 0xce, 0x50, 0x60,
	0x83, 0xec, 0x50, 0x7c, 0x26, 0x4f, 0x11, 0x01, 0x71, 0x1d, 0xa7, 0x3c, 0xee, 0xe1, 0x4f, 0xdf,
	0xcd, 0x89, 0x2c, 0x81, 0x17, 0xfa, 0xf0, 0x58, 0xf8, 0x94, 0x02, 0xbe, 0x03, 0x1e, 0xcf, 0x01,
	0xf2, 0x11, 0x19, 0xb3, 0xf3, 0x93, 0x87, 0xa8, 0xd3, 0xb0, 0x6a, 0xee, 0xb8, 0x3a, 0x9f, 0xb8,
	0x9b, 0x13, 0x49, 0x7a, 0x2f, 0x0d, 0x2b, 0x70, 0xbc, 0x9a, 0x55, 0xd7, 0x67, 0xc7, 0x6f, 0xa9,
	0x46, 0x57, 0xe0, 0xe1, 0x9c, 0x4e, 0x6c, 0xcb, 0x2b, 0xa7, 0x86, 0xfc, 0xa6, 0x42, 0x3f, 0x01,
	0x0f, 0x8d, 0x25, 0xc9, 0xf5, 0x5a, 0xa5, 0x1a, 0xb4, 0x6d, 0xab, 0xd1, 0xb2, 0x6a, 0x15, 0xd7,
	0xf8, 0xbd, 0xd7, 0x72, 0xe2, 0x4f, 0xbe, 0x6d, 0x37, 0x36, 0xfc, 0xa0, 0xdd, 0xea, 0x5b, 0x37,
	0xdb, 0xae, 0xf3, 0x52, 0x60, 0xfc, 0xae, 0x02, 0x3f, 0x03, 0x97, 0xb4, 0x65, 0x03, 0x4d, 0x53,
	0xcd, 0x94, 0xa3, 0x8c, 0xdf, 0xc9, 0x97, 0xef, 0x06, 0x42, 0x91, 0xa0, 0xea, 0x28, 0x65, 0x7e,
	0xfb, 0xb5, 0x9c, 0xa1, 0x6a, 0x58, 0xb5, 0x7a, 0xbb, 0x79, 0x1d, 0x9f, 0x5e, 0xe2, 0xd3, 0xcd,
	0xf8, 0xf3, 0x3b, 0x39, 0x33, 0x0b, 0x81, 0xca, 0xd1, 0x7f, 0x76, 0x27, 0x67, 0x39, 0x14, 0x18,
	0x9e, 0xe1, 0xab, 0x4e, 0x19, 0xe7, 0xb0, 0xf1, 0xa7, 0x77, 0x72, 0x66, 0x00, 0x42, 0x7d, 0xc7,
	0x2d, 0xcb, 0xc0, 0xfb, 0x93, 0x3b, 0x39, 0xa6, 0x20, 0xca, 0x73, 0x6c, 0xa7, 0x96, 0x5d, 0xa8,
	0xfe, 0xf8, 0x4e, 0xce, 0x18, 0x20, 0x38, 0xf0, 0x6a, 0x6b, 0x0e, 0x9b, 0x55, 0x76, 0xb3, 0x59,
	0x2f, 0x37, 0x6f, 0xb8, 0xc6, 0xd7, 0xf3, 0xba, 0x0f, 0xac, 0xba, 0x23, 0x12, 0x0b, 0x97, 0xf8,
	0x9d, 0x8f, 0xe7, 0x38, 0x47, 0xa0, 0x32, 0xf3, 0xf9, 0xdb, 0x1f, 0xcf, 0x19, 0x25, 0x01, 0xdc,
	0x68, 0xe9, 0xa9, 0xca, 0x73, 0xfc, 0xe6, 0x86, 0x67, 0x3b, 0xc6, 0xb7, 0x3e, 0x9e, 0xe3, 0xab,
	0xa0, 0x79, 0x63, 0x3c, 0x6e, 0x9c, 0xb2, 0xf1, 0xe1, 0x8f, 0xe4, 0xd4, 0x06, 0x1c, 0xaa, 0x74,
	0xfd, 0xf1, 0xab, 0x39, 0xf1, 0xaa, 0x40, 0xa2, 0x7b, 0x3f, 0xb0, 0x1a, 0x35, 0xd7, 0x32, 0x7e,
	0xa4, 0xd0, 0x4f, 0xc3, 0xa3, 0x19, 0x34, 0x0f, 0x92, 0x03, 0x6b, 0xe1, 0x0f, 0x5f, 0x3d, 0x52,
	0xdf, 0x6a, 0xad, 0x52, 0x75, 0xfc, 0xc0, 0xf8, 0xc1, 0xab, 0x79, 0xce, 0x45, 0xa8, 0x0a, 0x43,
	0xe3, 0xfb, 0x19, 0x94, 0x5d, 0xb5, 0xbc, 0x8a, 0xd3, 0x6e, 0x7a, 0x65, 0xc7, 0xe3, 0xf3, 0x9d,
	0xaf, 0x2a, 0x5f, 0xf9, 0x87, 0x7f, 0xd3, 0x52, 0xd4, 0x41, 0x94, 0x9c, 0x80, 0x7f, 0xa4, 0x70,
	0x6f, 0x87, 0x0b, 0x19, 0x9c, 0x5f, 0xab, 0xb8, 0x56, 0xb0, 0xe1, 0xa9, 0xb4, 0xf3, 0x65, 0x05,
	0x26, 0x70, 0x3e, 0x0b, 0x76, 0x45, 0xc7, 0x7f, 0xa8, 0x30, 0x97, 0xe1, 0xc1, 0x71, 0x0c, 0x33,
	0xb9, 0x7c, 0xb3, 0xbd, 0xe1, 0x3b, 0x65, 0xe3, 0x0f, 0x14, 0xf2, 0x71, 0x58, 0xce, 0x20, 0xaf,
	0x3b, 0x5e, 0x6d, 0xfd, 0xa6, 0x8c, 0xe6, 0xdf, 0x57, 0xc0, 0x47, 0x61, 0x69, 0xdd, 0xab, 0xb1,
	0x48, 0x6f, 0x38, 0xbe, 0x6f, 0x55, 0x1c, 0x5c, 0x9c, 0x59, 0x28, 0x7d, 0xe1, 0xaf, 0xbf, 0xa7,
	0xad, 0x20, 0x02, 0xe4, 0x36, 0xdb, 0x1b, 0x2e, 0x73, 0xb2, 0x84, 0x1b, 0x9f, 0x57, 0xb0, 0x27,
	0xe1, 0xa2, 0x80, 0xb1, 0x99, 0x3d, 0x9e, 0x7b, 0xf0, 0x8d, 0xf1, 0x39, 0x05, 0xbf, 0x0c, 0x0f,
	0x1e, 0x84, 0x7b, 0xce, 0x8b, 0x1b, 0x8e, 0xcf, 0x82, 0xed, 0x8d, 0x3c, 0xa4, 0xe7, 0x34, 0x9a,
	0xd7, 0x1d, 0x21, 0x4c, 0x9a, 0xf3, 0xba, 0x42, 0x3e, 0x01, 0x0f, 0x89, 0x77, 0x95, 0xda, 0x75,
	0xa7, 0xdd, 0x6a, 0xd6, 0xdc, 0xc0, 0x6f, 0xaf, 0xa3, 0x54, 0x37, 0xa8, 0xdf, 0x34, 0x3e, 0xab,
	0xb0, 0x4f, 0x01, 0x91, 0xfd, 0x37, 0x9b, 0xed, 0x86, 0xe5, 0x4a, 0x25, 0xf5, 0xb6, 0xc6, 0x6b,
	0x79, 0xf6, 0xe9, 0xc2, 0x59, 0x66, 0x62, 0x3e, 0xab, 0xd7, 0x1a, 0xb5, 0xc0, 0xf8, 0x8c, 0x82,
	0x3f, 0x02, 0xe7, 0x94, 0xd7, 0x98, 0x89, 0xc2, 0x05, 0x9f, 0x56, 0x90, 0x4b, 0x70, 0xff, 0x98,
	0xf7, 0x99, 0x2a, 0xf5, 0xa6, 0x5b, 0x31, 0x3e, 0xa5, 0x50, 0x0f, 0x83, 0x29, 0x50, 0x76, 0xd5,
	0x0a, 0xa4, 0xd5, 0x9f, 0x54, 0x80, 0x07, 0xe1, 0xac, 0x5f, 0x6d, 0xb6, 0xb4, 0x49, 0xf2, 0xe1,
	0xaf, 0x7f, 0x5b, 0x0b, 0x2c, 0x7c, 0xd9, 0xda, 0xf0, 0xec, 0xaa, 0xe5, 0x3b, 0xa9, 0xdb, 0x7e,
	0xfc, 0xb5, 0x6f, 0x6b, 0x35, 0x2a, 0x62, 0xc6, 0xca, 0xbd, 0x1f, 0x29, 0xc4, 0x63, 0xf0, 0x00,
	0x22, 0xd0, 0x4a, 0xa7, 0x9c, 0xad, 0xa4, 0x7e, 0xa8, 0x70, 0x8f, 0xc0, 0xb9, 0xac, 0x24, 0xb1,
	0x8a, 0xfd, 0x40, 0x41, 0x1e, 0x84, 0xb3, 0x81, 0xe5, 0x5f, 0xd3, 0x0b, 0xa1, 0x6f, 0xbd, 0xa9,
	0x15, 0xeb, 0xe9, 0x4b, 0x56, 0x1d, 0x60, 0x29, 0xfb, 0x79, 0xf5, 0x7e, 0x05, 0xee, 0x49, 0xdf,
	0x7b, 0xce, 0x0d, 0xcb, 0x2b, 0x1b, 0x9f, 0x53, 0x6f, 0x09, 0x9c, 0xc7, 0xb7, 0x32, 0xe8, 0x38,
	0x82, 0x05, 0xd3, 0x41, 0x0c, 0xcf, 0x9b, 0x9a, 0x8a, 0xaf, 0x2b, 0xcc, 0xa3, 0xb0, 0x84, 0x98,
	0x96, 0xe7, 0x5c, 0xcf, 0xaa, 0xf2, 0x59, 0x05, 0xba, 0x02, 0x0f, 0xdf, 0x68, 0x7a, 0xf5, 0x32,
	0x0e, 0x0a, 0x2e, 0x16, 0x0d, 0xbf, 0x82, 0x99, 0xbd, 0xe6, 0x56, 0xda, 0x98, 0xdd, 0xff, 0xfe,
	0x1b, 0x6f, 0x6a, 0x05, 0x42, 0x0e, 0x7a, 0xed, 0x66, 0xe0, 0xf8, 0x6a, 0xd0, 0xbf, 0xa9, 0xf0,
	0x4f, 0xc2, 0x45, 0x85, 0xc7, 0x6c, 0x85, 0x8d, 0x6e, 0xd4, 0x82, 0x2a, 0x8b, 0xa7, 0x75, 0xcf,
	0x71, 0x8c, 0xbf, 0x53, 0xf0, 0xcb, 0xf0, 0xa0, 0x82, 0xb7, 0x36, 0xea, 0xf5, 0xac, 0x22, 0x7f,
	0xab, 0x90, 0x6f, 0x87, 0x0b, 0x79, 0x8a, 0x38, 0x62, 0x07, 0xe1, 0xb8, 0xc6, 0x37, 0x52, 0xf0,
	0x13, 0x75, 0x98, 0x6b, 0x34, 0xcb, 0x1b, 0x75, 0xc7, 0x3c, 0x0b, 0xe0, 0x07, 0x56, 0xc0, 0xca,
	0x19, 0xdc, 0x7d, 0x5e, 0x80, 0x65, 0x4e, 0x57, 0x2d, 0xb7, 0xb2, 0xd1, 0x62, 0x95, 0x60, 0xb9,
	0xd9, 0x68, 0xd7, 0x5c, 0xbb, 0xd9, 0x70, 0x8c, 0x82, 0x69, 0xc2, 0x59, 0x81, 0x77, 0x6e, 0xe0,
	0xe2, 0x67, 0x4c, 0xdd, 0x9a, 0xc3, 0x3f, 0x1a, 0xf5, 0xec, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff,
	0xd6, 0x2b, 0x78, 0xa0, 0x4c, 0x4a, 0x00, 0x00,
}
