syntax = "proto3";

package msg.client_message;

//////////////////////////////////////错误码///////////////////////////////////

enum E_ERR {
	NONE    								= 0;
	INTERNAL								= -1; // 内部错误
	PLAYER_ACC_OR_PASSWORD_ERROR			= -2; // 账号或密码错误
	PLAYER_NOT_EXIST						= -3; // 玩家不存在
	PLAYER_ALREADY_LOGINED					= -4; // 玩家已经登陆
	PLAYER_OTHER_PLACE_LOGIN				= -5; // 玩家在其他地方登陆
	PLAYER_TOKEN_ERROR						= -6; // 令牌错误
	PLAYER_SELECT_SERVER_NOT_FOUND			= -7; // 选择服务器不存在
	PLAYER_ALREADY_SELECTED_SERVER			= -8; // 玩家已经选择过服务器
	PLAYER_IS_OFFLINE						= -9; // 玩家已离线
	PLAYER_SEND_TOO_FREQUENTLY				= -10; // 发送消息太频繁
	PLAYER_GOLD_NOT_ENOUGH					= -11; // 金币不足
	PLAYER_DIAMOND_NOT_ENOUGH				= -12; // 钻石不足
	
	// 战斗
	PLAYER_SET_ATTACK_MEMBERS_FAILED		= -10000; // 设置进攻阵营失败
	PLAYER_SET_DEFENSE_MEMBERS_FAILED		= -10001; // 设置防守阵营失败
	PLAYER_IS_DEFENSING						= -10002; // 对方正在战斗
	PLAYER_BATTLE_RECORD_NOT_FOUND			= -10003; // 战斗录像不存在
	PLAYER_BATTLE_RECORD_FORBIDDEN_DELETE   = -10004; // 不能删除录像
	PLAYER_BATTLE_RECORD_DATA_INVALID		= -10005; // 录像数据错误
	
	// 物品装备
	PLAYER_ITEM_NOT_FOUND					= -11000; // 物品找不到
	PLAYER_ITEM_TABLE_ID_NOT_FOUND			= -11001; // 物品配置找不到
	PLAYER_ITEM_NUM_NOT_ENOUGH				= -11002; // 物品数量不足
	PLAYER_ITEM_TYPE_NOT_MATCH				= -11003; // 物品类型不匹配
	PLAYER_EQUIP_SLOT_EMPTY					= -11004; // 装备位置为空
	PLAYER_EQUIP_TYPE_INVALID				= -11005; // 装备类型错误
	PLAYER_ITEM_FUSION_FAILED				= -11006; // 不能合成物品
	PLAYER_ITEM_COUNT_NOT_ENOUGH_TO_FUSION  = -11007; // 合成碎片数量不足
	PLAYER_ITEM_UPGRADE_TYPE_INVALID		= -11008; // 物品升级类型非法
	PLAYER_ITEM_UPGRADE_RES_NOT_ENOUGH		= -11009; // 物品升级资源不足
	PLAYER_ITEM_UPGRADE_SLOT_NO_ITEM		= -11010; // 物品升级槽中无物品
	PLAYER_ITEM_UPGRADE_DATA_NOT_FOUND		= -11011; // 物品升级数据找不到
	PLAYER_ITEM_UPGRADE_FAILED				= -11012; // 物品升级失败
	
	// 角色
	PLAYER_ROLE_NOT_FOUND					= -12000; // 角色不存在
	PLAYER_ROLE_TABLE_ID_NOT_FOUND			= -12001; // 角色配置找不到
	PLAYER_ROLE_LEVEL_DATA_NOT_FOUND		= -12002; // 角色升级数据不存在
	PLAYER_ROLE_LEVEL_IS_MAX				= -12003; // 角色等级已经最大
	PLAYER_ROLE_RANK_IS_MAX					= -12004; // 角色品阶已经最大
	PLAYER_ROLE_RANKUP_DATA_NOT_FOUND		= -12005; // 角色品阶升级数据不存在
	PLAYER_ROLE_IN_TEAM_CANT_DECOMPOSE		= -12006; // 角色在阵容中，不能分解
	PLAYER_ROLE_FUSION_FAILED				= -12007; // 角色合成失败
	PLAYER_FUSION_NEED_ROLE_NOT_FOUND  		= -12008; // 合成角色需要的角色不存在
	PLAYER_FUSION_ROLE_INVALID				= -12009; // 合成需要的角色不合法
	PLAYER_FUSION_ROLE_TABLE_DATA_NOT_FOUND = -12010; // 角色合成配置数据不存在
	PLAYER_FUSION_MAIN_ROLE_NOT_FOUND		= -12011; // 角色合成主角色不存在
	PLAYER_FUSION_ROLE_MATERIAL_NOT_ENOUGH  = -12012; // 角色合成材料数量不足
	PLAYER_FUSION_MAIN_CARD_INVALID			= -12013; // 角色合成主卡类型非法
	PLAYER_FUSION_NEED_RESOURCE_NOT_ENOUGH  = -12014; // 角色合成需要的资源不足
	PLAYER_ROLE_IS_LOCKED					= -12015; // 角色被锁定
	PLAYER_ROLE_INVENTORY_NOT_ENOUGH_SPACE	= -12016; // 角色背包没有足够的空位
	PLAYER_ROLE_LEFT_SLOT_DROP_FAILED		= -12017; // 角色左槽掉落失败
	PLAYER_ROLE_OPEN_LEFTSLOT_LEVEL_NOT_ENOUGH = -12018; // 角色左槽开启等级不够
	PLAYER_ROLE_LEFT_SLOT_ALREADY_OPENED	= -12019; // 角色左槽已激活
	
	// 关卡
	PLAYER_ALREADY_FIGHT_CAMPAIGN			= -13001; // 已打过该战役
	PLAYER_CAMPAIGN_MUST_PlAY_NEXT			= -13002; // 只能打下一战役
	PLAYER_NOT_FOUND_CAMPAIGN_TABLE_DATA	= -13003; // 没有战役数据
	PLAYER_CANT_FIGHT_THE_CAMPAIGN			= -13004; // 不能打该战役
	
	// 邮件
	PLAYER_MAIL_OVER_MAX_COUNT				= -14000; // 超出邮件最大数量
	PLAYER_MAIL_NOT_FOUND					= -14001; // 邮件不存在
	PLAYER_MAIL_NO_ATTACHED_ITEM			= -14002; // 邮件没有附加物品
	PLAYER_MAIL_SEND_FAILED					= -14003; // 发送邮件失败
	PLAYER_MAIL_RECEIVER_NOT_FOUND			= -14004; // 邮件接受者不存在
	PLAYER_MAIL_PLAYER_IS_COOLDOWN			= -14005; // 个人邮件发送冷却中
	PLAYER_MAIL_TITLE_TOO_LONG				= -14006; // 邮件标题太长
	PLAYER_MAIL_CONTENT_TOO_LONG			= -14007; // 邮件内容太长
	
	// 天赋
	PLAYER_TALENT_NOT_FOUND					= -15000; // 没有该天赋
	PLAYER_TALENT_LEVEL_IS_MAX				= -15001; // 天赋等级已满
	PLAYER_TALENT_UP_NOT_ENOUGH_RESOURCE	= -15002; // 天赋升级没有足够资源
	
	// 爬塔
	PLAYER_TOWER_ALREADY_FIGHTED			= -16000; // 已经打过塔层
	PLAYER_TOWER_NOT_FOUND					= -16001; // 不存在的塔层
	PLAYER_TOWER_NOT_ENOUGH_STAMINA			= -16002; // 爬塔体力不够
	PLAYER_TOWER_FIGHT_RECORD_NOT_FOUND		= -16003; // 爬塔录像不存在
	PLAYER_TOWER_ALREADY_HIGHEST			= -16004; // 爬塔已达最高层
	PLAYER_TOWER_CANT_FIGHT					= -16005; // 不能打该层塔
	
	// 点金手
	PLAYER_GOLDHAND_DATA_NOT_FOUND			= -17000; // 点金手数据不存在
	PLAYER_GOLDHAND_REFRESH_IS_COOLINGDOWN	= -17001; // 点金手刷新CD中
	
	// 商店
	PLAYER_SHOP_TABLE_DATA_NOT_FOUND		= -18000; // 商店数据找不到
	PLAYER_SHOP_ITEM_TABLE_DATA_NOT_FOUND	= -18001; // 商品数据找不到
	PLAYER_SHOP_REFRESH_RESOURCE_NOT_ENOUGH = -18002; // 手动刷新资源不足
	PLAYER_SHOP_ITEM_NOT_FOUND				= -18003; // 商店无该商品			
	PLAYER_SHOP_ITEM_NUM_NOT_ENOUGH			= -18004; // 商店商品数量不足
	PLAYER_SHOP_ITEM_BUY_RESOURCE_NOT_ENOUGH= -18005; // 商店购买商品资源不足
	PLAYER_SHOP_ITEM_RANDOM_DATA_INVALID	= -18006; // 商品随机数据配置错误
	
	// 竞技场
	PLAYER_ARENA_ONLY_FIGHT_MATCHED_PLAYER  = -19000; // 只能打匹配的玩家
	PLAYER_ARENA_MATCH_PLAYER_FAILED		= -19001; // 匹配玩家失败
	PLAYER_ARENA_IS_RESETING				= -19002; // 竞技场正在重置
	
	// 排行榜
	RANK_LIST_TYPE_INVALID					= -20000; // 排行榜类型错误
		
	// 玩家
	CHARGE_ORDER_DATA_EMPTY                 = -200000;
	CHARGE_ORDER_DATA_INVALID				= -200001;
	CHARGE_ORDER_SIGNATURE_INVALID			= -200002;
	CHARGE_ORDER_SN_EMPTY					= -200003;
	CHARGE_ORDER_SN_ALREDY_USED				= -200004;
	CHARGE_ORDER_VERIFY_FAILED				= -200005;
	
	FRIEND_MESSAGE_NUM_MAX					= -300000;
	FRIEND_NO_UNREAD_MESSAGE				= -300001;
	FRIEND_THE_PLAYER_ALREADY_FRIEND		= -300002;
	FRIEND_THE_PLAYER_REQUESTED				= -300003;
	FRIEND_REMOVE_FRIEND_FAILED				= -300004;
	FRIEND_GIVE_POINTS_FREQUENTLY			= -300005;
	FRIEND_TOO_MANY_FRIEND_GIVE_POINTS		= -300006;
	FRIEND_GIVE_POINTS_MAX_NUM_LIMIT		= -300007;
	FRIEND_NO_THE_FRIEND					= -300008;
	FRIEND_MESSAGE_TOO_LONG					= -300009;
	FRIEND_CHAT_FAILED						= -300010;
	
	SHOP_NOT_FOUND							= -400000;
	SHOP_PURCHASED_FAILED					= -400001;
	SHOP_ITEM_NOT_FOUND						= -400002;
	SHOP_LIMITED_TYPE_INVALID				= -400003;
	SHOP_ITEM_NOT_ENOUGH					= -400004;
	
	// 任务错误码
	TASK_NOT_FOUND							= -101600; // 任务不存在
	TASK_NOT_COMPLETE						= -101601; // 任务未完成
	TASK_NOT_REWARD							= -101602; // 未领奖
	TASK_ALREADY_REWARDED					= -101603; // 已领奖
	TASK_LEVEL_NOT_ENOUGH					= -101604; // 等级不足
	TASK_PREV_NOT_COMPLETE					= -101605; // 前置任务未完成
	
	// 世界聊天
	WORLDCHAT_SEND_MSG_COOLING_DOWN   		= -102300; // 世界聊天发送消息还在冷却中
	WORLDCHAT_SEND_MSG_BYTES_TOO_LONG 		= -102301; // 世界聊天消息超长
	WORLDCHAT_CANT_SEND_WITH_NO_FREE		= -102302; // 世界聊天内部错误没有空闲的节点
	WORLDCHAT_PULL_COOLING_DOWN       		= -102303; // 世界聊天拉取消息还在冷却中
	WORLDCHAT_SEND_MSG_BE_FORBIDEN   		= -102304; // 你被禁言了
}

// 红点状态
enum MODULE {
	STATE_NONE								= 0;
	STATE_HANGUP_RANDOM_INCOME				= 1; // 挂机随机收益
	STATE_NEW_MAIL							= 2; // 新邮件
}

// 红点提示通知
message S2CStateNotify {
	repeated int32 States					= 1; // 状态更新
	repeated int32 CancelStates				= 2; // 状态取消
}

// 心跳
message C2SHeartbeat {
}

// 请求数据同步
message C2SDataSyncRequest {
	bool Base								= 1;
	bool Items 								= 2;
	bool Roles								= 3;
	bool Teams								= 4;
	bool Campaigns							= 5;
}

////////////////////////////////////end////////////////////////////////////////

// 测试用消息
message C2S_TEST_COMMAND {
	string cmd 								= 1;
	repeated string args 					= 2;
}

///////////////////////////////////////end////////////////////////////////////

// 物品
message ItemInfo {
	int32 ItemCfgId 				= 1; // 配置物品
	int32 ItemNum 					= 2; // 物品数目
}

// 登陆
message C2SLoginRequest {
	string Acc 						= 1; // 账号
	string Password					= 2; // 密码
	string Channel 					= 3; // 渠道
}
// 服务器信息
message ServerInfo {
	int32 Id 						= 1;
	string Name						= 2;
	string IP						= 3;
}
// 登陆返回
message S2CLoginResponse {
	string Acc 						= 1; // 账号
	string Token 					= 2; // 令牌
	repeated ServerInfo Servers 	= 3; // 服务器列表, key是服务器ID
}
/// 其它地方登录
message S2COtherPlaceLogin {
}

// 选择服务器
message C2SSelectServerRequest {
	string Acc						= 1; // 账号
	string Token					= 2; // 令牌
	int32 ServerId					= 3; // 服务器ID
}
// 选择服务器返回
message S2CSelectServerResponse {
	string Acc						= 1; // 账号
	string Token					= 2; // 进入游戏服务器的令牌
	string IP						= 3; // 游戏服务器地址
}

///////////////////////////////////start///////////////////////////////////////

message C2S_MSG_DATA {
	int32 PlayerId 					= 1; // 玩家ID		
	string Token 					= 2; // 令牌
	int32 MsgCode 					= 3; // 消息ID
	bytes Data 						= 4; // 消息数据
}

message S2C_MSG_DATA {
	int32 ErrorCode 				= 1; // 错误码
	string ErrorMsg 				= 2; // 错误字符串
	bytes Data 						= 3; // 数据
	int32 CurrMsgNum				= 4; // 当前的消息序号
}

//////////////////////////////////////////////////////////////////////////////

// 进入游戏服务器
message C2SEnterGameRequest {
	string Acc						= 1;
	string Token					= 2;
}
// 返回
message S2CEnterGameResponse {
	string Acc						= 1;
	int32 PlayerId					= 2;
}
// 通知客户端进入游戏服务器完成
message S2CEnterGameCompleteNotify {
}

// 离开游戏服务器
message C2SLeaveGameRequest {
}
// 返回
message S2CLeaveGameResponse {
}

// 玩家信息
message S2CPlayerInfoResponse {
	int32 Level 					= 1; // 等级
	int32 Exp						= 2; // 经验
	int32 Gold						= 3; // 金币
	int32 Diamond					= 4; // 钻石
	string Icon						= 5; // 头像
	int32 VipLevel					= 6; // VIP等级
}

//----------------------------------- 战斗 -----------------------------------
// 设置阵容
message C2SSetTeamRequest {
	int32 TeamType							= 1; // 0 pvp阵容  1 防守阵容  2 pve阵容
	repeated int32 TeamMembers				= 2;
}
message S2CSetTeamResponse {
	int32 TeamType							= 1;
	repeated int32 TeamMembers				= 2;
}
message TeamData {
	int32 TeamType							= 1; // 阵容类型
	repeated int32 TeamMembers				= 2; // 阵容
}
// 阵容数据
message S2CTeamsResponse {
	repeated TeamData Teams  				= 1;
}

// 阵营成员
message BattleMemberItem {
	int32 Id								= 1; // 实例ID
	int32 Pos								= 2; // 位置
	int32 HP								= 3; // 血量
	int32 MaxHP								= 4; // 最大血量
	int32 Energy							= 5; // 能量
	int32 TableId							= 6; // 配置ID
	int32 Rank								= 7; // 品阶
	int32 Level								= 8; // 等级
	int32 Side								= 9; // 0 左  1 右
}

// 战斗成员
message BattleFighter {
	int32 Pos								= 1; // 位置
	int32 HP								= 2; // 血量
	int32 MaxHP								= 3; // 最大血量
	int32 Damage 							= 4; // 伤害
	int32 Energy							= 5; // 能量
	int32 Side								= 6; // 0 左  1 右
	bool IsCritical							= 7; // 是否暴击
	bool IsBlock							= 8; // 是否格挡
	bool IsAbsorb							= 9; // 是否吸收
	int32 AntiType							= 10; // 克制类型  1 克制 0 无克制 -1 被克制
	int32 Shield							= 11; // 护盾
}

message BattleMemberBuff {
	int32 Side								= 1; // 0 左  1 右
	int32 Pos								= 2; // 位置
	int32 BuffId 							= 3; // buff id
}

// 战报项(一次攻击的结果)
message BattleReportItem {
	int32 Side								= 1; // 0 左边向右打  1 右边向左打
	int32 SkillId							= 2; // 技能ID
	BattleFighter User						= 3; // 技能使用者
	repeated BattleFighter BeHiters 		= 4; // 技能受击者
	repeated BattleMemberItem SummonNpcs	= 5; // 召唤出来的NPC
	repeated BattleMemberBuff AddBuffs		= 6; // 增加的BUFF
	repeated BattleMemberBuff RemoveBuffs   = 7; // 删除的BUFF
	bool IsSummon							= 8; // 是否召唤
	bool HasCombo							= 9; // 是否有连续技
}

// 一回合战报
message BattleRoundReports {
	int32 RoundNum							= 1; // 回合编号
	repeated BattleReportItem Reports		= 2; // 回合战报列表
	repeated BattleMemberBuff RemoveBuffs   = 3; // 回合结束的BUFF
	repeated BattleFighter ChangedFighters	= 4; // 回合结束时BUFF影响的属性变化的成员
	map<int32,int32> MyMembersEnergy		= 5; // 我方怒气
	map<int32,int32> TargetMembersEnergy	= 6; // 敌方怒气
}

// 请求战斗结果
message C2SBattleResultRequest {
	repeated int32 AttackMembers 			= 1; // 阵型
	int32 FightPlayerId						= 2; // 对方玩家ID
	int32 CampaignId						= 3; // 战役ID
	int32 BattleType						= 4; // 战斗类型   1 玩家ID  2 战役ID  3 塔层ID
	int32 BattleParam						= 5; // 战斗参数
}
message S2CBattleResultResponse {
	bool IsWin								= 1; // true 赢  false 输
	repeated BattleMemberItem MyTeam		= 2; // 战斗前我方阵容
	repeated BattleMemberItem TargetTeam	= 3; // 战斗前敌方阵容
	repeated BattleReportItem EnterReports 	= 4; // 进场时战报，一般是被动技效果
	repeated BattleRoundReports Rounds 		= 5; // 回合
	map<int32, int32> MyMemberDamages		= 6; // 我方伤害统计
	map<int32, int32> TargetMemberDamages 	= 7; // 敌方伤害统计
	map<int32, int32> MyMemberCures			= 8; // 我方治疗统计
	map<int32, int32> TargetMemberCures   	= 9; // 敌方治疗统计
	bool HasNextWave						= 10; // 关卡是否有下一波战斗
	int32 NextCampaignId					= 11; // 下一个战役ID
	int32 BattleType						= 12; // 战斗类型
	int32 BattleParam						= 13; // 战斗参数
}

// 请求录像列表
message C2SBattleRecordListRequest {
}
message BattleRecordData {
	int32 RecordId							= 1; // 录像ID
	int32 AttackerId						= 2; // 攻击者ID
	string AttackerName						= 3; // 攻击者昵称
	int32 DefenserId						= 4; // 防守者ID
	string DefenserName						= 5; // 防守者昵称
	int32 RecordTime						= 6; // 录像时间
}
message S2CBattleRecordListResponse {
	repeated BattleRecordData Records		= 1; // 录像列表
}

// 请求录像
message C2SBattleRecordRequest {
	int32 Id								= 1; // 录像ID
}
message S2CBattleRecordResponse {
	int32 Id								= 1; // 录像ID
	int32 AttackerId						= 2; // 攻击者ID
	string AttackerName						= 3; // 攻击者昵称
	int32 DefenserId						= 4; // 防守者ID
	string DefenserName						= 5; // 防守者昵称
	bytes RecordData						= 6; // 录像数据
	int32 RecordTime						= 7; // 录像时间
}

// 删除录像
message C2SBattleRecordDeleteRequest {
	int32 RecordId							= 1; // 录像ID
}
message S2CBattleRecordDeleteResponse {
	int32 RecordId							= 1; // 录像Id
}

// ---------------------------------- 关卡 ------------------------------------
// 请求战役关卡数据
message C2SCampaignDataRequest {
}

message S2CCampaignDataResponse {
	repeated int32 PassedCampaignIds		= 1; // 已打过的战役
	int32 UnlockCampaignId					= 2; // 已战役关卡ID
	int32 HangupCampaignId					= 3; // 挂机战役关卡
	repeated ItemInfo StaticIncomes			= 4; // 当前挂机固定收益
}

// 请求战役挂机收益
message C2SCampaignHangupIncomeRequest {
	int32 IncomeType						= 1; // 0 固定收益  1 随机收益
}

// 关卡战斗结果奖励
message S2CCampaignHangupIncomeResponse {
	int32 IncomeType						= 1; // 收益类型  0 挂机固定收益  1 挂机随机收益  2 战斗奖励  3 爬塔奖励
	repeated ItemInfo Rewards				= 2; // 奖励
}

// 设置挂机战役关卡
message C2SBattleSetHangupCampaignRequest {
	int32 CampaignId 						= 1; // 战役ID
}

// 设置挂机战役关卡返回
message S2CBattleSetHangupCampaignResponse {
	int32 CampaignId						= 1; // 战役ID
}

// ----------------------------------- 物品 ------------------------------------
// 请求同步物品数据
message C2SItemsSyncRequest {
}

// 进入游戏同步物品数据
message S2CItemsSync {
	repeated ItemInfo Items  			 	= 1; // 同步的物品
}

// 物品数据更新
message S2CItemsUpdate {
	repeated ItemInfo ItemsAdd				= 1; // 增加的物品
}

// 物品合成
message C2SItemFusionRequest {
	int32 PieceId							= 1; // 碎片ID
	int32 FusionNum							= 2; // 合成次数
}

message S2CItemFusionResponse {
	repeated ItemInfo Items                 = 1; // 合成的物品或角色
}

// 出售物品
message C2SItemSellRequest {
	int32 ItemId                            = 1; // 出售物品ID
	int32 ItemNum                           = 2; // 出售物品数量
}

message S2CItemSellResponse {
	int32 ItemId                            = 1; // 出售物品ID
	int32 ItemNum                           = 2; // 出售物品数量
}

// 装备物品
message C2SItemEquipRequest {
	int32 RoleId							= 1; // 角色ID
	int32 ItemId							= 2; // 物品ID
}

message S2CItemEquipResponse {
	int32 RoleId							= 1; // 角色ID
	int32 EquipSlot							= 2; // 装备槽位
	int32 ItemId							= 3; // 物品ID
}

// 卸载物品
message C2SItemUnequipRequest {
	int32 RoleId							= 1; // 角色ID
	int32 EquipSlot							= 2; // 装备槽位
}
message S2CItemUnequipResponse {
	int32 RoleId							= 1; // 角色ID
	int32 EquipSlot							= 2; // 装备槽位
}

// 物品升级
message C2SItemUpgradeRequest {
	int32 RoleId							= 1; // 角色ID   只有左槽右槽需要
	int32 ItemId							= 2; // 物品ID
	int32 UpgradeType						= 3; // 升级类型   左槽有两种，对应ItemUpgrade.xml表中的UpgradeType
}

message S2CItemUpgradeResponse {
	int32 RoleId							= 1; // 角色ID
	int32 NewItemId							= 2; // 新生成的物品ID
}

// ----------------------------------- 角色 ------------------------------------
// 请求角色
message C2SRolesRequest {
}
message AttrData {
	int32 AttrId 					= 1;
	int32 Value						= 2;
}
message Role {
	int32 Id						= 1;
	int32 TableId					= 2;
	int32 Rank						= 3;
	int32 Level						= 4;
	bool IsLock						= 5; // 锁定
	repeated int32 Equips           = 6; // 装备
}
// 请求角色返回
message S2CRolesResponse {
	repeated Role Roles				= 1;
}

// 角色信息更新通知
message S2CRolesChangeNotify {
	repeated Role Adds 				= 1; // 增加
	repeated int32 Removes          = 2; // 删除
	repeated Role Updates			= 3; // 更新
}

// 角色属性请求
message C2SRoleAttrsRequest {
	int32 RoleId					= 1; // 角色ID
}

// 角色属性返回
message S2CRoleAttrsResponse {
	int32 RoleId					= 1; // 角色Id
	repeated int32 Attrs			= 2; // 角色属性
	int32 Power						= 3; // 角色战力
}

// 角色升级
message C2SRoleLevelUpRequest {
	int32 RoleId							= 1; // 角色ID
	int32 UpNum								= 2; // 升多少级
}

message S2CRoleLevelUpResponse {
	int32 RoleId							= 1; // 角色ID
	int32 UpNum								= 2; // 升多少级
	int32 Level								= 3; // 新等级
}

// 角色升阶
message C2SRoleRankUpRequest {
	int32 RoleId							= 1; // 角色ID
}

message S2CRoleRankUpResponse {
	int32 RoleId							= 1; // 角色ID
	int32 Rank								= 2; // 品阶
}

// 角色分解
message C2SRoleDecomposeRequest {
	repeated int32 RoleIds					= 1; // 角色ID
}

message S2CRoleDecomposeResponse {
	repeated int32 RoleIds					= 1; // 角色ID
	repeated ItemInfo GetItems      		= 2; // 分解获得的物品
}

// 角色合成
message C2SRoleFusionRequest {
	int32 FusionId							= 1; // 合成ID
	int32 MainCardId						= 2; // 主卡ID
	repeated int32 Cost1CardIds				= 3; // 消耗的card1
	repeated int32 Cost2CardIds				= 4; // 消耗的card2
	repeated int32 Cost3CardIds				= 5; // 消耗的card3
}

message S2CRoleFusionResponse {
	int32 NewCardId							= 1; // 生成的新卡，配置ID
	int32 RoleId							= 2; // 新卡的角色ID
	repeated ItemInfo GetItems				= 3; // 返还的资源
}

// 请求锁定角色
message C2SRoleLockRequest {
	int32 RoleId							= 1; // 角色ID
	bool IsLock								= 2; // 是否锁定
}

message S2CRoleLockResponse {
	int32 RoleId							= 1; // 角色ID
	bool IsLock								= 2; // 是否锁定
}

// 角色图鉴请求
message C2SRoleHandbookRequest {
}

message S2CRoleHandbookResponse {
	repeated int32 Roles					= 1; // 图鉴
}

// 左槽开启
message C2SRoleLeftSlotOpenRequest {
	int32 RoleId							= 1; // 角色ID
}
message S2CRoleLeftSlotOpenResponse {
	int32 RoleId							= 1; // 角色ID
}

// 一键穿戴
message C2SRoleOneKeyEquipRequest {
	int32 RoleId							= 1; // 角色ID
	repeated int32 Equips					= 2; // 待装备的物品
}

message S2CRoleOneKeyEquipResponse {
	int32 RoleId							= 1;
	repeated int32 Equips					= 2; // 穿戴后的装备
}

// 一键脱装
message C2SRoleOnekeyUnequipRequest {
	int32 RoleId							= 1;
}

message S2CRoleOneKeyUnequipResponse {
	int32 RoleId							= 1;
	repeated int32 Equips					= 2; // 脱装后的装备
}

// --------------------------------- 邮件 -------------------------------------
// 发送邮件
message C2SMailSendRequest {
	int32 ReceiverId						= 1; // 接收者ID
	int32 MailType							= 2; // 邮件类型
	string MailTitle						= 3; // 邮件标题
	string MailContent						= 4; // 邮件内容
	repeated ItemInfo AttachedItems			= 5; // 附加物品
}
message S2CMailSendResponse {
	int32 MailId							= 1; // 邮件ID
}

// 获取邮件列表
message C2SMailListRequest {
}
message MailBasicData {
	int32 Id								= 1; // 邮件ID
	int32 Type								= 2; // 邮件类型   1 系统  2 个人
	string Title							= 3; // 邮件标题
	string SenderName						= 4; // 发送者
	int32 SendTime							= 5; // 发送时间
	bool IsRead								= 6; // 是否已读
	bool IsGetAttached						= 7; // 是否已领取附件
	bool HasAttached						= 8; // 是否有附件
}
message S2CMailListResponse {
	repeated MailBasicData Mails            = 1; //
}

// 请求邮件具体内容
message C2SMailDetailRequest {
	repeated int32 Ids                  	= 1; // 邮件ID
}
message MailDetail {
	int32 Id								= 1; // 邮件ID
	string Content							= 2; // 邮件内容
	repeated ItemInfo AttachedItems			= 3; // 附加物品
}
message S2CMailDetailResponse {
	repeated MailDetail Mails               = 1; // 邮件细节
}

// 获取邮件附加物品
message C2SMailGetAttachedItemsRequest {
	repeated int32 MailIds					= 1; // 邮件ID
}
message S2CMailGetAttachedItemsResponse {
	repeated int32 MailIds					= 1; // 邮件ID
	map<int32,int32> AttachedItems			= 2; // 获得的附加物品   key: item_id  value: item_num
}

// 删除邮件
message C2SMailDeleteRequest {
	repeated int32 MailIds					= 1; // 邮件ID
}
message S2CMailDeleteResponse {
	repeated int32 MailIds					= 1; // 邮件ID
}

// 新邮件通知
message S2CMailsNewNotify {
	repeated MailBasicData Mails            = 1; // 新邮件基本数据
}

// -------------------------------- 玩家 -------------------------------------
// 天赋升级
message C2STalentUpRequest {
	int32 TalentId 							= 1;	
}
message S2CTalentUpResponse {
	int32 TalentId							= 1;
	int32 Level								= 2;
}

// 请求天赋列表
message C2STalentListRequest {
}
message TalentInfo {
	int32 Id								= 1;
	int32 Level								= 2;
}
message S2CTalentListResponse {
	repeated TalentInfo Talents				= 1;
}

// --------------------------------- 爬塔 ------------------------------------
// 请求爬塔数据
message C2STowerDataRequest {
}
message S2CTowerDataResponse {
	int32 CurrTowerId 						= 1; // 当前层
	int32 TowerKeys							= 2; // 钥匙数
	int32 LastGetKeyTime					= 3; // 上次获取钥匙的时间点
}

// 请求爬塔某层录像
message C2STowerRecordsInfoRequest {
	int32 TowerId                           = 1;
}
message TowerFightRecord {
	int32 TowerFightId						= 1;
	int32 AttackerId						= 2;
	string AttackerName						= 3;
	int32 CreateTime						= 4;
}
message S2CTowerRecordsInfoResponse {
	repeated TowerFightRecord Records		= 1;
}

// 请求爬塔的某个录像具体数据
message C2STowerRecordDataRequest {
	int32 TowerFightId					 	= 1;
}
message S2CTowerRecordDataResponse {
	bytes RecordData						= 1; // 对应S2CBattleResultResponse的pb序列化数据
}

// 请求爬塔排行榜
message C2STowerRankingListRequest {
}
message TowerRankInfo {
	int32 PlayerId 							= 1;
	string PlayerName						= 2;
	int32 TowerId							= 3;
	int32 PlayerLevel						= 4;
}
message S2CTowerRankingListResponse {
	repeated TowerRankInfo Ranks			= 1;
}

// ---------------------------------- 抽卡 ------------------------------------
// 请求抽卡数据
message C2SDrawDataRequest {
}

message S2CDrawDataResponse {
	map<int32,int32> FreeDrawRemainSeconds	= 1; // 免费抽卡剩余时间    key 抽卡ID  value 抽卡剩余时间
}

// 请求抽卡
message C2SDrawCardRequest {
	int32 DrawType							= 1; // 抽卡类型  
}

message S2CDrawCardResponse {
	int32 DrawType							= 1; // 抽卡类型
	repeated int32 RoleTableId				= 2; // 抽到的角色
	bool IsFreeDraw							= 3; // 是否免费抽卡
}

// ---------------------------------- 点金手 ----------------------------------
// 请求点金
message C2STouchGoldRequest {
	int32 Type								= 1; // 点金类型   1(免费), 2, 3
}

message S2CTouchGoldResponse {
	int32 Type								= 1; // 点金类型
	int32 GetGold							= 2; // 获得金币数
	int32 CostDiamond						= 3; // 消耗钻石数
	int32 NextRefreshRemainSeconds			= 4; // 下次剩余刷新时间
}

// 点金手数据
message C2SGoldHandDataRequest {
}

message S2CGoldHandDataResponse {
	int32 RemainRefreshSeconds				= 1; // 剩余刷新时间(秒)
	map<int32,int32> LeftNums				= 2; // 剩余次数
}

// ---------------------------------- 商店 ------------------------------------
// 请求商店
message C2SShopDataRequest {
	int32 ShopId							= 1; // 商店ID
}

message ShopItem {
	int32 Id								= 1; // 商品ID  服务器自动生成
	int32 ItemId							= 2; // 商品配置ID
	ItemInfo CostResource					= 3; // 需要花费的货币
	int32 ItemNum							= 4; // 剩余数量
}

message S2CShopDataResponse {
	int32 ShopId							= 1; // 商店ID
	repeated ShopItem Items					= 2; // 商店商品
	int32 NextFreeRefreshRemainSeconds		= 3; // -1 代表没有
	int32 NextAutoRefreshRemainSeconds      = 4; // -1 代表没有
}

// 请求购买商品
message C2SShopBuyItemRequest {
	int32 ShopId							= 1; // 商店ID
	int32 ItemId							= 2; // 商品ID
	int32 ItemNum							= 3; // 商品数量
}

message S2CShopBuyItemResponse {
	int32 ShopId							= 1; // 商店ID
	int32 Id								= 2; // 商品ID  服务器自动生成
	int32 BuyNum							= 3; // 购买数量
	int32 RemainItemNum						= 4; // 剩余数量
}

// 刷新商店
message C2SShopRefreshRequest {
	int32 ShopId							= 1; // 商店ID
}

message S2CShopResfreshResponse {
	int32 ShopId							= 1; // 商店ID
	bool IsFreeRefresh						= 2; // 是否免费 
}

// 商店自动刷新通知
message S2CShopAutoRefreshNotify {
	int32 ShopId							= 1; // 商店ID
}

// --------------------------------- 排行榜 -----------------------------------
// 排行项
message RankItemInfo {
	int32 Rank 								= 1; // 排名
	int32 PlayerId							= 2; // 玩家ID
	string PlayerName						= 3; // 玩家昵称
	int32 PlayerLevel						= 4; // 玩家等级
	int32 PlayerHead						= 5; // 玩家头像
	int32 PlayerArenaScore					= 6; // 玩家竞技场积分
	int32 PlayerArenaGrade					= 7; // 玩家竞技场段位
	int32 PlayerPower						= 8; // 玩家战力
}

// 请求排行榜
message C2SRankListRequest {
	int32 RankListType						= 1; // 排行榜类型  1 竞技场
	repeated int32 Params					= 2; // 参数, 跟具体类型有关
}

message S2CRankListResponse {
	int32 RankListType						= 1; // 排行榜类型
	repeated RankItemInfo RankItems			= 2; // 排名项
	int32 SelfHistoryTopRank				= 3; // 自己历史最高排名，暂时只有竞技场有
	int32 SelfRank							= 4; // 自己排名
	int32 SelfValue							= 5; // 数据值
	int32 SelfValue2						= 6; // 数据值2
}

// 

// --------------------------------- 竞技场 -----------------------------------
// 竞技场数据请求
message C2SArenaDataRequest {
}

message S2CArenaDataResponse {
	int32 DayRemainSeconds					= 1; // 每天剩余结束时间
	int32 SeasonRemainSeconds				= 2; // 赛季剩余时间
}

// 请求竞技场对方防守阵容
message C2SArenaPlayerDefenseTeamRequest {
	int32 PlayerId							= 1;
}

message PlayerTeamRole {
	int32 TableId							= 1;
	int32 Pos								= 2;
	int32 Level								= 3;
}

message S2CArenaPlayerDefenseTeamResponse {
	int32 PlayerId							= 1;
	map<int32,PlayerTeamRole> DefenseTeam	= 2;
}

// 请求竞技场匹配
message C2SArenaMatchPlayerRequest {
}

message S2CArenaMatchPlayerResponse {
	int32 PlayerId						 	= 1; // ID
	string PlayerName						= 2; // 昵称
	int32 PlayerLevel						= 3; // 等级
	int32 PlayerHead						= 4; // 头像
	int32 PlayerGrade 						= 5; // 段位
	int32 PlayerScore                       = 6; // 积分
	int32 PlayerPower						= 7; // 战力
}

//////////////////////////////////////////////////////////////////////////////
message FriendInfo {
	
}

// 按昵称查找好友信息
message C2SFriendSearch {
	string Key 			= 1; // 搜索内容
}

// 按ID查找好友
message C2SFriendSearchById {
	int32 PlayerId 		= 1; //玩家ID
}

// 返回好友信息
message S2CFriendSearchResult {
	repeated FriendInfo Result 		= 1; // 搜索结果
}

// 客户端向服务器获取好友相关列表
message C2SGetFriendList {
	bool HasFoster			= 1; // 是否获取寄养信息
}

// 加好友请求信息
message FriendReq {
	int32 PlayerId 		= 1; // 好友玩家Id
	string Name 			= 2; // 好友名称
	int32 Score 			= 3; // 好友积分
	string Head			= 4; // 好友头像
}

// 服务器向客户端返回好友列表
message S2CRetFriendListResult {
	int32 FriendType 		= 1; // 好友类型
	repeated FriendInfo FriendList 	= 2; // 好友列表
	repeated FriendReq Reqs 		= 3; // 加好友请求
	int32 LeftGivePointsNum= 4; // 剩余赠送次数
}

// 服务器通知好友状态
message S2CFriendStateNotify {
	int32 StateType 		= 1; // 0 更新  1 增加 
	FriendInfo Info 		= 2; // 好友数据
}

// 服务器通知好友请求
message S2CFriendReqNotify {
	FriendReq Req 			= 1;
}

// 客户端通过Id加好友
message C2SAddFriendByPId {
	int32 PlayerId 		= 1; // 玩家Id
}

// 客户端通过昵称加好友
message C2SAddFriendByName {
	string Name 			= 1; // 玩家账号
}

// 服务器回复添加好友
message S2CAddFriendResult {
	int32 PlayerId 		= 1;
}

// 客户端同意加好友
message C2SAgreeFriend {
	int32 PlayerId 		= 1; // 玩家Id
}

// 服务器返回增加好友回复
message S2CAgreeFriendResult {
	int32 PlayerId 		= 1; // 好友玩家Id
	string Name 			= 2; // 好友名称
	int32 Score 			= 3; // 好友积分
	int32 Level			= 4; // 等级
	string Head			= 5; // 头像
	int32 VipLevel		  	= 6; // VIP等级
	int32 LastLogin		= 7; // 上次登陆时间
}

// 客户端拒绝加好友
message C2SRefuseFriend {
	int32 PlayerId 		= 1; // 玩家Id
}

// 服务器通知拒绝加好友
message S2CRefuseFriendResult {
	string Name 			= 1; // 对方名字
	int32 PlayerId			= 2; // 对方ID
}

// 客户端删除好友
message C2SRemoveFriend {
	int32 PlayerId 		= 1; // 玩家id
}

// 服务器通知客户端删除好友
message S2CRemoveFriendResult {
	int32 PlayerId 		= 1; // 好友Id
}

// 赠送友情点
message C2SGiveFriendPoints {
	repeated int32 FriendId 		= 1;
}

message FriendPointsResult {
	int32 FriendId 		= 1;
	int32 Points 			= 2;
	int32 Error			= 3; // 0成功  小于0表示错误码
	int32 RemainSeconds	= 4; // 剩余友情点赠送时间
	bool IsTodayGive		= 5; // 今天是否已赠送
	int32 BackPoints		= 6; // 回馈友情点
}

message S2CGiveFriendPointsResult {
	repeated FriendPointsResult PointsData = 1; // 赠送友情点数据
	int32 LeftGivePointsNum 	   = 2; // 剩余赠送次数
}

// 收取友情点
message C2SGetFriendPoints {
	repeated int32 FriendId 		= 1;
}
message FriendPoints {
	int32 FriendId 		= 1;
	int32 Points 			= 2;
}
message S2CGetFriendPointsResult {
	repeated FriendPoints PointsData = 1;
}

// 客户端给好友发送消息
message C2SFriendChat {
	int32 PlayerId = 1; // 玩家Id
	bytes Content 	= 2; // 聊天内容
}
message S2CFriendChatResult {
	int32 PlayerId = 1; // 玩家Id
	bytes Content 	= 2; // 聊天内容
}

// 获取好友未读消息数量
message C2SFriendGetUnreadMessageNum {
	repeated int32 FriendIds 	= 1; // 好友ID
}
message FriendUnreadMessageNumData {
	int32 FriendId     = 1; // 好友ID
	int32 MessageNum 	= 2; // 未读消息数量
}
message S2CFriendGetUnreadMessageNumResult {
	repeated FriendUnreadMessageNumData Data = 1;
}

// 拉取好友未读聊天消息
message C2SFriendPullUnreadMessage {
	int32 FriendId = 1; // 好友ID
}
message FriendChatData {
	bytes Content 	= 1; // 内容
	int32 SendTime = 2; // 发送时间
}
message S2CFriendPullUnreadMessageResult {
	int32 FriendId 		= 1; // 好友ID
	repeated FriendChatData Data 	= 2; // 聊天数据
}

// 确认聊天未读消息
message C2SFriendConfirmUnreadMessage {
	int32 FriendId  	= 1; // 好友ID
	int32 MessageNum 	= 2; // 消息条数
}
message S2CFriendConfirmUnreadMessageResult {
	int32 FriendId		= 1; // 好友ID
	int32 MessageNum 	= 2; // 消息条数
}

// 客户端请求好友在线状态
message C2SGetOnlineFriends {
	int32 Key = 1; //  好友类型 1好友 2是关注 3是粉丝
}

// 服务器返回在线好友
message S2CRetOnlineFriends {
	repeated int32 PlayerIds = 1; // 在线好友Id
	int32 Key = 2; //  好友类型 1好友 2是关注 3是粉丝
}

////////////////// shop ///////////////////////
// 请求商店商品
message C2SShopItems {
	int32 shop_id = 1; // 商店ID
}
message S2CShopItem {
	int32 item_id = 1; // 商店ID
	int32 left_num = 2; //剩余数量
	int32 remain_seconds = 3; // 剩余时间(秒)
}
message S2CShopItemsResult {
	int32 shop_id = 1;
	repeated S2CShopItem items = 2;
}

// 购买商店物品
message C2SBuyShopItem {
	int32 item_id 		= 1; // 商品ID
	int32 item_num 	= 2; // 商品数量
}

// 购买返回的物品
message S2CBuyShopItemResult {
	int32 shop_id 			= 1; // 商店ID
	int32 item_id 			= 2; // 商品ID
	int32 item_num			= 3; // 商品数量
	ItemInfo add_item 		= 4; // 买到的物品
	//ResourceInfo cost_res 	= 5; // 花费的物品资源
}
// 通知客户端商店需要刷新
message S2CShopNeedRefreshNotify {
}
////////////////////////////////////////////////

// ----------------------------------------------

// 日常任务数据
message DialyTaskData {
	int32 TaskId = 1; // 任务Id
	int32 TaskValue = 2; // 任务值
	int32 TaskState = 3; // 任务状态 0 未完成 1 完成 2 已领奖
	//int32 RewardUnix = 4; // 领取奖励时间戳 如果大于零则表示已经领奖
}

// 客户端向服务器请求日常任务数据
message C2SGetDialyTaskInfo {
}

// 服务器向客户端发送任务数据
message S2CSyncDialyTask {
	repeated DialyTaskData TaskList = 1; // 任务数据
}

// 服务器向客户端通知任务值变化
message S2CNotifyTaskValueChg {
	int32 TaskId = 1; // 任务Id
	int32 TaskValue = 2; // 任务值
	int32 TaskState = 3; // 任务状态  0 未完成 1 完成 2 已领奖
}

// 成就数据
message AchieveData {
	int32 AchieveId = 1; // 任务Id
	int32 AchieveValue = 2; // 任务数据
	int32 AchieveState = 3; // 任务状态  0 未完成 1 完成 2 已领奖
	//int32 RewardUnix = 4; // 领取奖励时间戳 如果大于零则表示已经领奖
}

// 客户端向服务器请求成就数据
message C2SGetAchieve {
}

// 服务器向客户端发送成就数据
message S2CSyncAchieveData {
	repeated AchieveData AchieveList = 1; // 成就任务数据
}

// 服务器向客户端通知成就值变化
message S2CNotifyAchieveValueChg {
	int32 AchieveId = 1; // 任务Id
	int32 AchieveValue = 2; // 任务值
	int32 AchieveState = 3; // 任务状态  0 未完成 1 完成 2 已领奖
}

// 客户端向服务器请求日常任务奖励
message C2SGetTaskReward {
	int32 TaskId = 1;
}

// 服务器向客户端发送任务结果
message S2CRetTaskReward {
	int32 TaskId = 1; // 任务Id
	int32 Coin = 2; // 金币
	int32 Diamond = 3; // 钻石奖励
	int32 Exp = 4; // 当前经验
	int32 CurLvl = 5; // 当前等级
}

// 客户端向服务器请求成就奖励
message C2SGetAchieveReward {
	int32 AchieveReward = 1; // 成就Id
}

// 服务器向客户端完成成就
message S2CRetAchieveReward {
	int32 TaskId = 1; // 任务Id
	int32 Coin = 2; // 金币
	int32 Diamond = 3; // 钻石奖励
	int32 Exp = 4; // 当前经验
	int32 CurLvl = 5; // 当前等级
}

// ----------------------------------------------------------------------------
// 发送世界聊天消息
message C2SWorldChatSend {
	bytes Content				= 1;
}
message S2CWorldChatSendResult {
	bytes Content				= 1;
}

// 拉取世界聊天消息
message C2SWorldChatMsgPull {
}
message WorldChatItem {
	bytes Content 				= 1;
	int32 PlayerId				= 2;
	string PlayerName			= 3;
	string PlayerHead			= 4;
	int32 PlayerLevel			= 5;
	int32 IsZaned				= 6;
	int32 IsFriend				= 7;
	int32 SendTime				= 8;
}
message S2CWorldChatMsgPullResult {
	repeated WorldChatItem Items		= 1; 
}

// 返回世界聊天封禁时间
message S2CWorldChatForbid {
	string EndTime = 1; // 封禁结束时间
}

// 服务器向客户端同步引导数据
message S2CSyncGuideData {
	repeated int32 GuideIds = 1; // 引导数据
}

// 客户端向服务器存储引导数据
message C2SSaveGuideData {
	int32 GuideId = 1; // 引导Id
}

// 服务器向客户端返回引导存储
message S2CRetSaveGuideData {
	int32 GuideId = 1; // 引导Id
}

